package org.omnione.generated;

import io.reactivex.Flowable;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.stream.Collectors;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.DynamicStruct;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Bytes32;
import org.web3j.abi.datatypes.generated.Uint64;
import org.web3j.abi.datatypes.generated.Uint8;
import org.web3j.abi.datatypes.reflection.Parameterized;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the
 * <a href="https://github.com/hyperledger-web3j/web3j/tree/main/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.6.3.
 */
@SuppressWarnings("rawtypes")
public class OpenDID extends Contract {
  public static final String BINARY = "60a0806040523460295730608052614df7908161002f8239608051818181610c900152610e760152f35b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c9081630803fac014611db45750806315a9802a1461195f57806320a6ab55146118535780632361f6af146115d1578063342b5ed8146115915780633764831c146114d457806339a75ce714611494578063437c6c24146113be57806347bf65bc146111705780634d5173641461104a5780634f1ef28614610e265780635213be2614610ce557806352d1902d14610c7d57806362ee4a5614610c2c57806368fcbbbb14610b39578063715018a614610acf57806375de641d14610a79578063804225b6146108015780638da5cb5b146107cb578063a5dba8d1146105aa578063ac92f718146104c6578063ad3cb1cc1461047b578063b65ef6061461043b578063c0c53b8b146101635763f2fde38b1461013457600080fd5b346101605760203660031901126101605761015d610150611ebf565b610158614b4f565b614ad9565b80f35b80fd5b50346101605760603660031901126101605761017d611ebf565b6024356001600160a01b03811690819003610437576044356001600160a01b038116919082900361043357600080516020614da2833981519152549260ff8460401c1615936001600160401b0381168015908161042b575b6001149081610421575b159081610418575b506104095767ffffffffffffffff198116600117600080516020614da283398151915255846103dc575b5061021a614cd2565b610222614cd2565b61022b33614ad9565b610233614cd2565b6001600160a01b0316801561039757811561035257821561030d576001600160601b0360a01b8554161784556001600160601b0360a01b60015416176001556001600160601b0360a01b6002541617600255604051907f587930504fa5b1062f394d90f9dac9ecadd354ed23a97af9ea4e44dff4870a848380a16102b5575080f35b60207fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29168ff000000000000000019600080516020614da28339815191525416600080516020614da28339815191525560018152a180f35b60405162461bcd60e51b815260206004820152601a60248201527f496e76616c6964205a4b5053746f7261676520616464726573730000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601d60248201527f496e76616c69642056634d65746153746f7261676520616464726573730000006044820152606490fd5b60405162461bcd60e51b815260206004820152601f60248201527f496e76616c696420446f63756d656e7453746f726167652061646472657373006044820152606490fd5b68ffffffffffffffffff19166801000000000000000117600080516020614da28339815191525538610211565b63f92ee8a960e01b8652600486fd5b905015386101e7565b303b1591506101df565b8691506101d5565b8380fd5b8280fd5b503461016057602036600319011261016057610455611ebf565b61045d614b4f565b60018060a01b03166001600160601b0360a01b600254161760025580f35b50346101605780600319360112610160576104c2604080519061049e818361204b565b60058252640352e302e360dc1b602083015251918291602083526020830190611ef8565b0390f35b503461016057602036600319011261016057600435816001600160401b038211610160576104fb610550923690600401611e20565b6060608060405161050b81611f76565b8281528560208201528260408201528280820152015260018060a01b0383541690604051809581948293630fe3478b60e31b845260206004850152602484019161240b565b03915afa90811561059f57826104c2939261057c575b5050604051918291602083526020830190612350565b61059892503d8091833e610590818361204b565b81019061254f565b3880610566565b6040513d84823e3d90fd5b5034610160576020366003190112610160576004356001600160401b0381116107c7576105de6105e4913690600401611e20565b906145fe565b604051906020825260a061066761065261063c610626610610865160c060208a015260e0890190611ef8565b6020870151888203601f190160408a0152611ef8565b6040860151878203601f19016060890152611ef8565b6060850151868203601f19016080880152611ef8565b6080840151858203601f1901848701526120be565b910151601f198383030160c08401526020820190519160208152825180925260408101602060408460051b84010194019580925b8484106106a85786860387f35b9091929394603f198282030184528751604082019080519160408452825180915260608401602060608360051b870101940191875b81811061074857505050506107376001936020938480940151918481830391015260406107266107168451606085526060850190611ef8565b8685015184820388860152611ef8565b920151906040818403910152611ef8565b99019401940192969493919061069b565b909192946020806107bb600193605f198b820301885289519060806107aa61078c61077c855160a0865260a0860190611ef8565b8786015185820389870152611ef8565b60408501511515604085015260608501518482036060860152611ef8565b920151906080818403910152611ef8565b970194019291016106dd565b5080fd5b5034610160578060031936011261016057600080516020614d62833981519152546040516001600160a01b039091168152602090f35b50346101605761081036611e4d565b86546040516353ec871160e01b815293969593946001600160a01b03909116929088868061084486868a8d6004860161348a565b0381875afa899681610a55575b506109035761085e612620565b6308c379a0146108cc575b60405162461bcd60e51b815260206004820152603060248201527f556e6b6e6f776e206572726f72206f6363757272656420647572696e6720646f60448201526f18dd5b595b9d081c995d1c9a595d985b60821b606482015280608481015b0390fd5b6108d461263e565b806108df5750610869565b60405162461bcd60e51b8152602060048201529081906108c8906024830190611ef8565b889760405160208101908284833761092f6020828d86820190838201520301601f19810183528261204b565b5190206040516020810190681050d512559055115160ba1b82526009815261095860298261204b565b519020036109ef5750508660c08601525b823b156109eb5786946109c786926109a3946109b56040519a8b998a98899763270766fb60e11b8952606060048a0152606489019061210b565b8781036003190160248901529161240b565b8481036003190160448601529161240b565b03925af1801561059f576109da57505080f35b816109e49161204b565b6101605780f35b8680fd5b610a16602060405183819483830196873781018c838201520301601f19810183528261204b565b51902060405160208101906a11115050d512559055115160aa1b8252600b8152610a41602b8261204b565b5190200361096957600160c0860152610969565b610a729197503d808c833e610a6a818361204b565b810190612f7b565b9538610851565b503461016057602036600319011261016057600435906001600160401b038211610160576101c06003198336030112610160576104c2610abb8360040161354a565b604051918291602083526020830190611ef8565b5034610160578060031936011261016057610ae8614b4f565b600080516020614d6283398151915280546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5034610160576040366003190112610160576004356001600160401b0381116107c757610b6a903690600401611e20565b906024356001600160401b03811161043357610b8a903690600401611e20565b6001549093919085906001600160a01b0316803b156107c75760405163301150f760e21b81529082908290818381610bc88c8a8c8e6004860161348a565b03925af1801561059f57610c13575b50507ff958d2c8ca179cb3614546dff74d0aa57c6d18424cf2b171c9a3f6c5e186810793610c0d91604051948594339186612b7a565b0390a180f35b81610c1d9161204b565b610c28578438610bd7565b8480fd5b503461016057602036600319011261016057600435906001600160401b038211610160576104c2610c69610c633660048601611e20565b906133ad565b60405191829160208352602083019061210b565b50346101605780600319360112610160577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003610cd6576020604051600080516020614d828339815191528152f35b63703e46dd60e11b8152600490fd5b503461016057602036600319011261016057600435906001600160401b038211610160576104c2610d22610d1c3660048601611e20565b90612c8a565b60405191829160208352610120610e11610dfb610de4610dce610db8610da2610d8c610d76610d608c6101608c519161014060208201520190611ef8565b60208b01518d8203601f190160408f01526120be565b60408a01518c8203601f190160608e0152611ef8565b60608901518b8203601f190160808d01526120be565b60808801518a8203601f190160a08c0152611ef8565b60a0870151898203601f190160c08b0152611ef8565b60c0860151888203601f190160e08a0152611ef8565b60e0850151878203601f1901610100890152611ef8565b610100840151868203601f190184880152611ef8565b910151838203601f1901610140850152611ef8565b50604036600319011261016057610e3b611ebf565b906024356001600160401b0381116107c757366023820112156107c757610e6c903690602481600401359101612087565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016308114908115611027575b5061101857610eae614b4f565b6040516352d1902d60e01b8152926001600160a01b0381169190602085600481865afa80958596610fe4575b50610ef357634c9c8ce360e01b84526004839052602484fd5b909184600080516020614d828339815191528103610fd25750813b15610fc057600080516020614d8283398151915280546001600160a01b031916821790557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8480a28151839015610fa65780836020610f9a95519101845af43d15610f9e573d91610f7e8361206c565b92610f8c604051948561204b565b83523d85602085013e614d00565b5080f35b606091614d00565b50505034610fb15780f35b63b398979f60e01b8152600490fd5b634c9c8ce360e01b8452600452602483fd5b632a87526960e21b8552600452602484fd5b9095506020813d602011611010575b816110006020938361204b565b81010312610c2857519438610eda565b3d9150610ff3565b63703e46dd60e11b8252600482fd5b600080516020614d82833981519152546001600160a01b03161415905038610ea1565b503461016057602036600319011261016057806004356001600160401b03811161116d578060040160a0600319833603011261116b576002546001600160a01b031691823b15611169576111589261114685809460405196879586948593635f4d03c960e11b855260206004860152608461113e6111206111016110e26110d186806123da565b60a060248d015260c48c019161240b565b6110ef60248901876123da565b8b83036023190160448d01529061240b565b61110e60448801866123da565b8a83036023190160648c01529061240b565b61112d606487018561247b565b89830360231901858b015290612bb2565b9301906123da565b8483036023190160a48601529061240b565b03925af1801561059f576109da5750f35b505b505b50fd5b5034610160576020366003190112610160576004356001600160401b0381116107c7578060040181360391610140600319840112610433576001546001600160a01b031691823b15610c2857604051631214df6960e31b815260206004820152859081816111de85806123da565b6024830161014090526101648301906111f69261240b565b9681838160248a019a6112098c8b61242c565b82820360231901604484015261121f9190612440565b61122c60448c018b6123da565b838303602319016064850152611242929161240b565b61124f60648c018b61242c565b8282036023190160848401526112659190612440565b61127260848c018b6123da565b8383036023190160a4850152611288929161240b565b61129560a48c018b6123da565b8383036023190160c48501526112ab929161240b565b6112b860c48c018b6123da565b8383036023190160e48501526112ce929161240b565b6112db60e48c018b6123da565b838303602319016101048501526112f2929161240b565b6113006101048c018b6123da565b83830360231901610124850152611317929161240b565b6113256101248c018b6123da565b8383036023190161014485015261133c929161240b565b03925af1801561059f576113a9575b505080611357916123a8565b919092359360421901841215610c285761139a60047f711312583a392d65179bf949665a44f0e2c18f41e42330eae5d9103df6b7918d95610c0d930101806123a8565b90604051948594339186612b7a565b816113b39161204b565b610c2857843861134b565b503461016057602036600319011261016057600435906001600160401b038211610160576104c26113fb6113f53660048601611e20565b90612942565b6040519182916020835260a061148061146b61145561143f611429865160c060208b015260e08a0190611ef8565b6020870151898203601f190160408b0152611ef8565b6040860151888203601f190160608a0152611ef8565b6060850151878203601f19016080890152611ef8565b6080840151868203601f190184880152611ef8565b910151838203601f190160c0850152611ef8565b5034610160576020366003190112610160576114ae611ebf565b6114b6614b4f565b81546001600160a01b0319166001600160a01b039190911617815580f35b503461016057602036600319011261016057600435906001600160401b038211610160576104c261151161150b3660048601611e20565b90612746565b60405191829160208352608061157d61156861155261153c855160a060208a015260c0890190611ef8565b6020860151888203601f190160408a0152611ef8565b6040850151878203601f19016060890152611ef8565b6060840151868203601f190184880152611f1d565b910151838203601f190160a0850152611ef8565b5034610160576020366003190112610160576115ab611ebf565b6115b3614b4f565b60018060a01b03166001600160601b0360a01b600154161760015580f35b5034610160576115e036611e4d565b8654604051630fe3478b60e31b81526020600482015293969593946001600160a01b03909116929088868061161960248201898c61240b565b0381875afa899681611837575b506116335761085e612620565b889760405160208101908284833761165f6020828d86820190838201520301601f19810183528261204b565b5190206040516020810190681050d512559055115160ba1b82526009815261168860298261204b565b519020036116e257505050508460208401525b803b15610c28576116d08580946109c760405197889687958694633d5758e160e01b8652604060048701526044860190612350565b8481036003190160248601529161240b565b60405160208101908284833761170c6020828d86820190838201520301601f19810183528261204b565b51902060405160208101906a11115050d512559055115160aa1b8252600b8152611737602b8261204b565b5190200361174f57505050506001602084015261169b565b6040516020810190828483376117796020828d86820190838201520301601f19810183528261204b565b51902060405160208101906614915593d2d15160ca1b8252600781526117a060278261204b565b519020036117b857505050506002602084015261169b565b6117df602060405183819483830196873781018c838201520301601f19810183528261204b565b5190206040516020810190691511549352539055115160b21b8252600a8152611809602a8261204b565b51902014611819575b505061169b565b61182b91600360208701523691612087565b60808401523880611812565b61184c9197503d808c833e610590818361204b565b9538611626565b5034610160578061186336611de8565b6002546001600160a01b0316803b1561116b5760405163037f39e160e51b81526020600482015291839183918290849082906111589061194d6119426119236119046118e56118c66118b587806123da565b60c060248c015260e48b019161240b565b6118d360208801886123da565b8a83036023190160448c01529061240b565b6118f260408701876123da565b8983036023190160648b01529061240b565b61191160608601866123da565b8883036023190160848a01529061240b565b61193060808501856123da565b8783036023190160a48901529061240b565b9160a08101906123da565b8483036023190160c48601529061240b565b50346101605761196e36611de8565b61197881806123a8565b905015611d6f576020810161198d81836123a8565b905015611d2a5760408201906119a382846123a8565b905015611ce5576001546001600160a01b031690813b15610c2857611a48611a296119fa94611a17611a10611a66956118d3611a098b602460c06040519d8e93636f13867560e01b855260206004860152806123da565b929093015260e48d019161240b565b918b6123da565b91886123da565b8783036023190160648901529061240b565b611a3660608701876123da565b8683036023190160848801529061240b565b611a55608086018661242c565b8482036023190160a4860152612440565b60a0840135601e1985360301811215611ce157918391858794016023198483030160c4850152611a9a60208301918061247b565b8091926020855252604083019260408260051b820101938388925b848410611b55575050505050508383809203925af18015611b4a57611b12575b50611b01817fb80b7feb5ab77629f88e8592b0889291da376e92b36781b4bf60a256c2af5992926123a8565b610c0d6040519283923391846124e4565b82611b427fb80b7feb5ab77629f88e8592b0889291da376e92b36781b4bf60a256c2af59929394611b019361204b565b929150611ad5565b6040513d85823e3d90fd5b92959194975092959750603f19828203018452611b72878461242c565b60408201908c611b82828061247b565b8091946040875252606085019060608160051b8701019480935b828110611c2e575050505050611c1a600193602093611bbf8486809601906124d0565b9184818303910152611c0c611c01611be8611bda85806123da565b60608652606086019161240b565b611bf4878601866123da565b908583038987015261240b565b9260408101906123da565b91604081850391015261240b565b98019401940190938a979592899795611ab5565b9091929395602080611cd4600193605f198c8203018952611c4f8b886124bc565b90611cc6611cbb611c8d611c74611c6686806123da565b60a0875260a087019161240b565b611c80888701876123da565b908683038a88015261240b565b611c99604086016124af565b15156040850152611cad60608601866123da565b90858303606087015261240b565b9260808101906123da565b91608081850391015261240b565b9801950193929101611b9c565b8580fd5b60405162461bcd60e51b815260206004820152601c60248201527f536368656d61207469746c652063616e6e6f7420626520656d707479000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601a60248201527f536368656d612055524c2063616e6e6f7420626520656d7074790000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601960248201527f536368656d612049442063616e6e6f7420626520656d707479000000000000006044820152606490fd5b9050346107c757816003193601126107c7576020906001600160401b03600080516020614da2833981519152541615158152f35b6020600319820112611e1b57600435906001600160401b038211611e1b5760c0908290036003190112611e1b5760040190565b600080fd5b9181601f84011215611e1b578235916001600160401b038311611e1b5760208381860195010111611e1b57565b6060600319820112611e1b576004356001600160401b038111611e1b5781611e7791600401611e20565b929092916024356001600160401b038111611e1b5781611e9991600401611e20565b92909291604435906001600160401b038211611e1b57611ebb91600401611e20565b9091565b600435906001600160a01b0382168203611e1b57565b60005b838110611ee85750506000910152565b8181015183820152602001611ed8565b90602091611f1181518092818552858086019101611ed5565b601f01601f1916010190565b9080602083519182815201916020808360051b8301019401926000915b838310611f4957505050505090565b9091929394602080611f67600193601f198682030187528951611ef8565b97019301930191939290611f3a565b60a081019081106001600160401b03821117611f9157604052565b634e487b7160e01b600052604160045260246000fd5b60c081019081106001600160401b03821117611f9157604052565b604081019081106001600160401b03821117611f9157604052565b61014081019081106001600160401b03821117611f9157604052565b6101c081019081106001600160401b03821117611f9157604052565b606081019081106001600160401b03821117611f9157604052565b602081019081106001600160401b03821117611f9157604052565b90601f801991011681019081106001600160401b03821117611f9157604052565b6001600160401b038111611f9157601f01601f191660200190565b9291926120938261206c565b916120a1604051938461204b565b829481845281830111611e1b578281602093846000960137010152565b6120e89160206120d78351604084526040840190611ef8565b920151906020818403910152611ef8565b90565b600311156120f557565b634e487b7160e01b600052602160045260246000fd5b61218961217761216561215361214161212f86516101c089526101c0890190611f1d565b602087015188820360208a0152611ef8565b60408601518782036040890152611ef8565b60608501518682036060880152611ef8565b60808401518582036080870152611ef8565b60a083015184820360a0860152611ef8565b60c0820151151560c084015260e08201519083810360e0850152815180825260208201916020808360051b8301019401926000915b8383106122ca57505050505061224161222d6122196122056121f16101a0956101008801518982036101008b0152611f1d565b6101208701518882036101208a0152611f1d565b610140860151878203610140890152611f1d565b610160850151868203610160880152611f1d565b610180840151858203610180870152611f1d565b910151916101a0818303910152815180825260208201916020808360051b8301019401926000915b83831061227857505050505090565b90919293946020806122bb600193601f1986820301875289519060406122aa6107168451606085526060850190611ef8565b920151906040818403910152611f1d565b97019301930191939290612269565b9091929394602080600192601f198582030186528851906080806123326123206122fd865160a0875260a0870190611ef8565b8787015161230a816120eb565b8887015260408701518682036040880152611ef8565b60608601518582036060870152611ef8565b9301519161233f836120eb565b0152970193019301919392906121be565b612363815160a0845260a0840190611ef8565b91602082015160048110156120f5576107aa6123966120e895608093602086015260408601518582036040870152611ef8565b60608501518482036060860152611ef8565b903590601e1981360301821215611e1b57018035906001600160401b038211611e1b57602001918136038313611e1b57565b9035601e1982360301811215611e1b5701602081359101916001600160401b038211611e1b578136038313611e1b57565b908060209392818452848401376000828201840152601f01601f1916010190565b9035603e1982360301811215611e1b570190565b6120e89161246d61246261245484806123da565b60408552604085019161240b565b9260208101906123da565b91602081850391015261240b565b9035601e1982360301811215611e1b5701602081359101916001600160401b038211611e1b578160051b36038313611e1b57565b35908115158203611e1b57565b9035609e1982360301811215611e1b570190565b9035605e1982360301811215611e1b570190565b916020916124fd9195949560408552604085019161240b565b6001600160a01b03909416910152565b81601f82011215611e1b5780516125238161206c565b92612531604051948561204b565b81845260208284010111611e1b576120e89160208085019101611ed5565b602081830312611e1b578051906001600160401b038211611e1b570160a081830312611e1b576040519161258283611f76565b81516001600160401b038111611e1b578161259e91840161250d565b835260208201516004811015611e1b57602084015260408201516001600160401b038111611e1b57816125d291840161250d565b604084015260608201516001600160401b038111611e1b57816125f691840161250d565b606084015260808201516001600160401b038111611e1b57612618920161250d565b608082015290565b60009060033d1161262d57565b905060046000803e60005160e01c90565b600060443d106120e8576040513d600319016004823e8051913d60248401116001600160401b038411176126ab57828201928351916001600160401b0383116126a3573d840160031901858401602001116126a357506120e89291016020019061204b565b949350505050565b92915050565b6001600160401b038111611f915760051b60200190565b9080601f83011215611e1b5781516126df816126b1565b926126ed604051948561204b565b81845260208085019260051b82010191838311611e1b5760208201905b83821061271957505050505090565b81516001600160401b038111611e1b5760209161273b8784809488010161250d565b81520191019061270a565b6000906127a99260405161275981611f76565b606081526060602082015260606040820152606080820152606060808201525060018060a01b03600254169060405180958194829363f1a03f1b60e01b845260206004850152602484019161240b565b03915afa8091600091612847575b50906120e8576127c5612620565b6308c379a014612834575b60405162461bcd60e51b815260206004820152603660248201527f556e6b6e6f776e206572726f72206f6363757272656420647572696e67205a4b604482015275140818dc9959195b9d1a585b081c995d1c9a595d985b60521b6064820152608490fd5b61283c61263e565b806108df57506127d0565b3d8083833e612856818361204b565b810190602081830312610437578051906001600160401b03821161043357019160a083830312610160576040519261288d84611f76565b80516001600160401b03811161043757836128a991830161250d565b845260208101516001600160401b03811161043757836128ca91830161250d565b602085015260408101516001600160401b03811161043757836128ee91830161250d565b604085015260608101516001600160401b03811161043757836129129183016126c8565b60608501526080810151916001600160401b038311610160575061293792910161250d565b6080820152386127b7565b6000906129ac9260405161295581611fa7565b60608152606060208201526060604082015260608082015260606080820152606060a08201525060018060a01b03600254169060405180958194829363533b3a9560e01b845260206004850152602484019161240b565b03915afa8091600091612a5b575b50906120e8576129c8612620565b6308c379a014612a48575b60405162461bcd60e51b815260206004820152604160248201527f556e6b6e6f776e206572726f72206f6363757272656420647572696e67205a4b60448201527f502063726564656e7469616c20646566696e6974696f6e2072657472696576616064820152601b60fa1b608482015260a490fd5b612a5061263e565b806108df57506129d3565b3d8083833e612a6a818361204b565b810190602081830312610437578051906001600160401b03821161043357019160c0838303126101605760405192612aa184611fa7565b80516001600160401b0381116104375783612abd91830161250d565b845260208101516001600160401b0381116104375783612ade91830161250d565b602085015260408101516001600160401b0381116104375783612b0291830161250d565b604085015260608101516001600160401b0381116104375783612b2691830161250d565b606085015260808101516001600160401b0381116104375783612b4a91830161250d565b608085015260a0810151916001600160401b0383116101605750612b6f92910161250d565b60a0820152386129ba565b90612b94906120e89694959360608452606084019161240b565b6001600160a01b03909416602082015280840360409091015261240b565b90602083828152019260208260051b82010193836000925b848410612bda5750505050505090565b909192939495602080612c02600193601f19868203018852612bfc8b886123da565b9061240b565b9801940194019294939190612bca565b60405190612c1f82611fc2565b60606020838281520152565b9190604083820312611e1b5760405190612c4482611fc2565b819380516001600160401b038111611e1b5782612c6291830161250d565b83526020810151916001600160401b038311611e1b57602092612c85920161250d565b910152565b600090612d1f92604051612c9d81611fdd565b60608152612ca9612c12565b602082015260606040820152612cbd612c12565b606082015260606080820152606060a0820152606060c0820152606060e0820152606061010082015260606101208201525060018060a01b036001541690604051809581948293633ab74f4360e21b845260206004850152602484019161240b565b03915afa8091600091612dba575b50906120e857612d3b612620565b6308c379a014612da7575b60405162461bcd60e51b815260206004820152603360248201527f556e6b6e6f776e206572726f72206f6363757272656420647572696e67205643604482015272081b595d1859185d18481c995d1c9a595d985b606a1b6064820152608490fd5b612daf61263e565b806108df5750612d46565b3d8083833e612dc9818361204b565b810190602081830312610437578051906001600160401b038211610433570191610140838303126101605760405192612e0184611fdd565b80516001600160401b0381116104375783612e1d91830161250d565b845260208101516001600160401b0381116104375783612e3e918301612c2b565b602085015260408101516001600160401b0381116104375783612e6291830161250d565b604085015260608101516001600160401b0381116104375783612e86918301612c2b565b606085015260808101516001600160401b0381116104375783612eaa91830161250d565b608085015260a08101516001600160401b0381116104375783612ece91830161250d565b60a085015260c08101516001600160401b0381116104375783612ef291830161250d565b60c085015260e08101516001600160401b0381116104375783612f1691830161250d565b60e08501526101008101516001600160401b0381116104375783612f3b91830161250d565b610100850152610120810151916001600160401b0383116101605750612f6292910161250d565b61012082015238612d2d565b51908115158203611e1b57565b602081830312611e1b578051906001600160401b038211611e1b5701906101c082820312611e1b5760405191612fb083611ff9565b80516001600160401b038111611e1b5782612fcc9183016126c8565b835260208101516001600160401b038111611e1b5782612fed91830161250d565b602084015260408101516001600160401b038111611e1b578261301191830161250d565b604084015260608101516001600160401b038111611e1b578261303591830161250d565b606084015260808101516001600160401b038111611e1b578261305991830161250d565b608084015260a08101516001600160401b038111611e1b578261307d91830161250d565b60a084015261308e60c08201612f6e565b60c084015260e08101516001600160401b038111611e1b57810182601f82011215611e1b578051906130bf826126b1565b916130cd604051938461204b565b80835260208084019160051b83010191858311611e1b5760208101915b8383106132d5575050505060e08401526101008101516001600160401b038111611e1b578261311a9183016126c8565b6101008401526101208101516001600160401b038111611e1b57826131409183016126c8565b6101208401526101408101516001600160401b038111611e1b57826131669183016126c8565b6101408401526101608101516001600160401b038111611e1b578261318c9183016126c8565b6101608401526101808101516001600160401b038111611e1b57826131b29183016126c8565b6101808401526101a0810151906001600160401b038211611e1b57019080601f83011215611e1b578151916131e6836126b1565b926131f4604051948561204b565b80845260208085019160051b83010191838311611e1b5760208101915b8383106132265750505050506101a082015290565b82516001600160401b038111611e1b578201906060828703601f190112611e1b576040519061325482612015565b60208301516001600160401b038111611e1b578760206132769286010161250d565b825260408301516001600160401b038111611e1b5787602061329a9286010161250d565b60208301526060830151916001600160401b038311611e1b576132c5886020809695819601016126c8565b6040820152815201920191613211565b82516001600160401b038111611e1b5782019060a0828903601f190112611e1b576040519161330383611f76565b60208101516001600160401b038111611e1b578960206133259284010161250d565b835260408101516003811015611e1b57602084015260608101516001600160401b038111611e1b5789602061335c9284010161250d565b60408401526080810151906001600160401b038211611e1b576133868a602060a09484010161250d565b60608501520151906003821015611e1b5782602093926080859401528152019201916130ea565b600090613453926040516133c081611ff9565b60608152606060208201526060604082015260608082015260606080820152606060a08201528360c0820152606060e08201526060610100820152606061012082015260606101408201526060610160820152606061018082015260606101a08201525060018060a01b0383541690604051809581948293631f32da9960e21b845260206004850152602484019161240b565b03915afa6000918161346d575b506120e85761085e612620565b6134839192503d806000833e610a6a818361204b565b9038613460565b92906134a3906120e8959360408652604086019161240b565b92602081850391015261240b565b9080601f83011215611e1b578160206120e893359101612087565b9080601f83011215611e1b5781356134e3816126b1565b926134f1604051948561204b565b81845260208085019260051b82010191838311611e1b5760208201905b83821061351d57505050505090565b81356001600160401b038111611e1b5760209161353f878480948801016134b1565b81520191019061350e565b600054604080516310a2351160e11b815260048101919091529192916060916001600160a01b03168161363c61361d6135fe6135e06135c16135a261358f8c8061247b565b6101c060448a0152610204890191612bb2565b6135af60208d018d6123da565b8883036043190160648a01529061240b565b6135ce60408c018c6123da565b8783036043190160848901529061240b565b6135ec888b018b6123da565b8683036043190160a48801529061240b565b61360b60808a018a6123da565b8583036043190160c48701529061240b565b61362a60a08901896123da565b8483036043190160e48601529061240b565b61364860c088016124af565b151561010483015261365d60e088018861247b565b604319848403016101248501528083526020830160208260051b85010193836000915b848310614536575050505050506137216137006136df6136be613742946136ab6101008d018d61247b565b888303604319016101448a015290612bb2565b6136cc6101208c018c61247b565b8783036043190161016489015290612bb2565b6136ed6101408b018b61247b565b8683036043190161018488015290612bb2565b61370e6101608a018a61247b565b858303604319016101a487015290612bb2565b61372f61018089018961247b565b848303604319016101c486015290612bb2565b6137506101a088018861247b565b604319848403016101e4850152808352602083019260208260051b82010193836000925b8a8585106144c35750505050505050918160008160209533602483015203925af160009181614487575b5061382a576137ab612620565b6308c379a014613817575b60405162461bcd60e51b815260206004820152603360248201527f556e6b6e6f776e206572726f72206f6363757272656420647572696e6720646f60448201527231bab6b2b73a103932b3b4b9ba3930ba34b7b760691b6064820152608490fd5b61381f61263e565b806108df57506137b6565b15614442577f44ca9609d2fe597457041d7e98533a969452ef425c10a46d0dd9f074497ea1ba61385d60208501856123a8565b61386e6040519283923391846124e4565b0390a16101c083360312611e1b576040519261388984611ff9565b80356001600160401b038111611e1b576138a690369083016134cc565b845260208101356001600160401b038111611e1b576138c890369083016134b1565b602085015260408101356001600160401b038111611e1b576138ed90369083016134b1565b6040850152818101356001600160401b038111611e1b5761391190369083016134b1565b8285015260808101356001600160401b038111611e1b5761393590369083016134b1565b608085015260a08101356001600160401b038111611e1b5761395a90369083016134b1565b60a085015261396b60c082016124af565b60c085015260e08101356001600160401b038111611e1b5736601f828401011215611e1b578082013561399d816126b1565b916139ab604051938461204b565b81835260208301903660208460051b838801010111611e1b57602081860101915b60208460051b8388010101831061436c575050505060e08501526101008101356001600160401b038111611e1b57613a0790369083016134cc565b6101008501526101208101356001600160401b038111611e1b57613a2e90369083016134cc565b6101208501526101408101356001600160401b038111611e1b57613a5590369083016134cc565b6101408501526101608101356001600160401b038111611e1b57613a7c90369083016134cc565b6101608501526101808101356001600160401b038111611e1b57613aa390369083016134cc565b6101808501526101a08101356001600160401b038111611e1b5736601f828401011215611e1b578082013590613ad8826126b1565b92613ae6604051948561204b565b82845260208401913660208560051b838501010111611e1b57602081830101925b60208560051b838501010184106142b65750505050506101a0840152613b2b614b85565b926000935b60e08201518051861015613d325785613b4891614ba4565b518051613c7e601160186020850151613b60816120eb565b604086015195601e60808b83015192015191613b7b836120eb565b6027604051998a95602087019a663d9134b2111d1160c91b8c52613ba8815180926020878c019101611ed5565b8701906c11161135b2bcaa3cb832911d1160991b84830152613bc9816120eb565b60f81b60348201526f11161131b7b73a3937b63632b9111d1160811b6035820152613bfe825180936020604585019101611ed5565b01017f222c227075626c69634b65794d756c746962617365223a22000000000000000083820152613c39825180936020603685019101611ed5565b0101906d11161130baba342a3cb832911d1160911b84830152613c5b816120eb565b60f81b602682015261227d60f01b60278201520301600e1981018552018361204b565b60e084015151600019810193908411613d1c576020613ce093613cef82613cfe958c60019960009110600014613d065750613cb7614bce565b935b6040519887613cd18b9951809287808d019101611ed5565b88019151809385840190611ed5565b01019182815194859201611ed5565b0103601f19810183528261204b565b940193613b30565b60405190613d14848361204b565b815293613cb9565b634e487b7160e01b600052601160045260246000fd5b5092935090613d706001602060405186613d558298518092858086019101611ed5565b8101605d60f81b838201520301601e1981018652018461204b565b613d78614b85565b936000945b6101a08401518051871015613ea257613d9887602792614ba4565b51613e60600260118351936015613db760406020840151930151614bed565b6040519788936020850198663d9134b2111d1160c91b8a52613de2815180926020868a019101611ed5565b85017411161139b2b93b34b1b2a2b7323837b4b73a111d1160591b83820152613e15825180936020603c85019101611ed5565b010170222c227365727669636554797065223a5b60781b83820152613e44825180936020602685019101611ed5565b0101615d7d60f01b838201520301601d1981018552018361204b565b6101a086015151600019810193908411613d1c576020613ce093613cef82613e9a958d60019960009110600014613d065750613cb7614bce565b950194613d7d565b5091909450613ee06001602060405185613ec58297518092858086019101611ed5565b8101605d60f81b838201520301601e1981018552018361204b565b613eea8351614bed565b926020810151946040820151928201519060808301519060a08401519060c085015115156000906000146142905750604051613f2760408261204b565b60048152637472756560e01b60208201525b610100860151613f4890614bed565b92610120870151613f5890614bed565b94610140880151613f6890614bed565b96610160890151613f7890614bed565b986101800151613f8790614bed565b996040519d8e9d8e6b7b22636f6e74657874223a5b60a01b602082015281519182602c83019160200191613fba92611ed5565b01672e961134b2111d1160c11b602c82015281519182603483019160200191613fe292611ed5565b01602c016f11161131b7b73a3937b63632b9111d1160811b60088201528151918260188301916020019161401592611ed5565b016008016c11161131b932b0ba32b2111d1160991b601082015281519182601d8301916020019161404592611ed5565b016010016c1116113ab83230ba32b2111d1160991b600d82015281519182601a8301916020019161407592611ed5565b01600d016e1116113b32b939b4b7b724b2111d1160891b600d82015281519182601c830191602001916140a792611ed5565b01600d016f1116113232b0b1ba34bb30ba32b2111d60811b600f82015281519182601f830191602001916140da92611ed5565b01600f017516113b32b934b334b1b0ba34b7b726b2ba3437b2111d60511b60108201528151918260268301916020019161411392611ed5565b01601001742c22617373657274696f6e734d6574686f64223a5b60581b601682015281519182602b8301916020019161414b92611ed5565b01601601735d2c2261757468656e7469636174696f6e223a5b60601b60158201528151918260298301916020019161418292611ed5565b01601501715d2c226b657941677265656d656e74223a5b60701b6014820152815191826026830191602001916141b792611ed5565b01601401601281017f5d2c226361706162696c697479496e766f636174696f6e223a5b000000000000905281519182602c830191602001916141f892611ed5565b01601201601a81017f5d2c226361706162696c69747944656c65676174696f6e223a5b00000000000090528151918260348301916020019161423992611ed5565b01601a016c2e961139b2b93b34b1b2b9911d60991b601a8201528151918260278301916020019161426992611ed5565b01601a01600d8101607d60f81b905203600d01601e19810182526001016120e8908261204b565b5060405161429f60408261204b565b600581526466616c736560d81b6020820152613f39565b83356001600160401b038111611e1b57828401019087601f198336030112611e1b57604051916142e583612015565b60208101356001600160401b038111611e1b5761430890602036918401016134b1565b835260408101356001600160401b038111611e1b5761432d90602036918401016134b1565b602084015288810135916001600160401b038311611e1b5760209361435a859493858095369201016134cc565b60408201528152019401939050613b07565b82356001600160401b038111611e1b578287010160a0601f198236030112611e1b576040519061439b82611f76565b60208101356001600160401b038111611e1b576143be90602036918401016134b1565b825260408101356003811015611e1b576020830152888101356001600160401b038111611e1b576143f590602036918401016134b1565b60408301526080810135906001600160401b038211611e1b5761442060a092602036918401016134b1565b8a84015201356003811015611e1b5760808201528152602092830192016139cc565b60405162461bcd60e51b815260206004820152601c60248201527f446f63756d656e7420726567697374726174696f6e206661696c6564000000006044820152606490fd5b9091506020813d6020116144bb575b816144a36020938361204b565b81010312611e1b576144b490612f6e565b903861379e565b3d9150614496565b86985061452460209294969891839261451661450b611be86144f36001999b9d8d601f198d88030190528c6124d0565b946144fe86806123da565b909180875286019161240b565b92604081019061247b565b916040818503910152612bb2565b98019401940191889695939491613774565b9193959092949650601f1982820301855261455187846124bc565b9061456d61455f83806123da565b60a0845260a084019161240b565b6020830135906003821015611e1b576145af6145c9918361458f6080956120eb565b60208601526145a160408701876123da565b90868303604088015261240b565b8d6145bc818701876123da565b918684039087015261240b565b920135906003821015611e1b57600192826080602094936145ea86956120eb565b015298019501930190918896959392613680565b60009061467c9260405161461181611fa7565b606081526060602082015260606040820152606080820152614631612c12565b608082015260405161464281612030565b6060815260a08201525060018060a01b03600154169060405180958194829363a5dba8d160e01b845260206004850152602484019161240b565b03915afa8091600091614715575b50906120e857614698612620565b6308c379a014614702575b60405162461bcd60e51b815260206004820152603160248201527f556e6b6e6f776e206572726f72206f6363757272656420647572696e67205643604482015270081cd8da195b58481c995d1c9a595d985b607a1b6064820152608490fd5b61470a61263e565b806108df57506146a3565b3d8083833e614724818361204b565b810190602081830312610437578051906001600160401b03821161043357019160c083830312610160576040519261475b84611fa7565b80516001600160401b038111610437578361477791830161250d565b845260208101516001600160401b038111610437578361479891830161250d565b602085015260408101516001600160401b03811161043757836147bc91830161250d565b604085015260608101516001600160401b03811161043757836147e091830161250d565b606085015260808101516001600160401b0381116104375783614804918301612c2b565b608085015260a0810151906001600160401b0382116104375701916020838203126107c7576040519261483684612030565b8051906001600160401b038211610433570181601f8201121561043757805161485e816126b1565b9361486c604051958661204b565b81855260208086019260051b840101928484116107c75760208101925b8484106148a357505050505050815260a08201523861468a565b83516001600160401b0381116104335782016040818803601f19011261043357604051906148d082611fc2565b60208101516001600160401b038111611ce15760209082010188601f82011215611ce15780516148ff816126b1565b9161490d604051938461204b565b81835260208084019260051b820101908b8211614ad55760208101925b8284106149e5575050505082526040810151906001600160401b038211611ce157906020910101606081890312610c28576040519061496882612015565b80516001600160401b0381116109eb578961498491830161250d565b825260208101516001600160401b0381116109eb57896149a591830161250d565b60208301526040810151906001600160401b0382116109eb57916149d18a60209694938796940161250d565b604082015283820152815201930192614889565b83516001600160401b038111614ad157820160a0818f03601f190112614ad15760405190614a1282611f76565b60208101516001600160401b038111614acd578f6020614a349284010161250d565b825260408101516001600160401b038111614acd578f6020614a589284010161250d565b6020830152614a6960608201612f6e565b604083015260808101516001600160401b038111614acd578f6020614a909284010161250d565b606083015260a0810151906001600160401b038211614acd57918f614abd9060208096948196010161250d565b608082015281520193019261492a565b8c80fd5b8a80fd5b8880fd5b6001600160a01b03168015614b3957600080516020614d6283398151915280546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b631e4fbdf760e01b600052600060045260246000fd5b600080516020614d62833981519152546001600160a01b03163303614b7057565b63118cdaa760e01b6000523360045260246000fd5b60405190614b9460408361204b565b60018252605b60f81b6020830152565b8051821015614bb85760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b60405190614bdd60408361204b565b60018252600b60fa1b6020830152565b90602091604051614bfe848261204b565b60008152926000935b8251851015614ccc57614c1a8584614ba4565b518351600019810192908311613d1c576001614cae9181946000908a10600014614cb6575081614c48614bce565b876040519684614c61899651809285808a019101611ed5565b8501601160f91b83820152614c7f8251809385602185019101611ed5565b0101601160f91b83820152614c9d825180938b600285019101611ed5565b01010301601f19810183528261204b565b940193614c07565b6040518391614cc5898361204b565b8152614c48565b93505050565b60ff600080516020614da28339815191525460401c1615614cef57565b631afcd79f60e31b60005260046000fd5b90614d265750805115614d1557805190602001fd5b63d6bda27560e01b60005260046000fd5b81511580614d58575b614d37575090565b639996b31560e01b60009081526001600160a01b0391909116600452602490fd5b50803b15614d2f56fe9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbcf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a26469706673582212206fc61507c8199ec7e1fdea7d49c495957d3ed9d701f0bf24b80023aed33cc00264736f6c634300081b0033";

  private static String librariesLinkedBinary;

  public static final String FUNC_UPGRADE_INTERFACE_VERSION = "UPGRADE_INTERFACE_VERSION";

  public static final String FUNC_GETDIDDOC = "getDidDoc";

  public static final String FUNC_GETDIDDOCSTATUS = "getDidDocStatus";

  public static final String FUNC_GETVCSCHEMA = "getVcSchema";

  public static final String FUNC_GETVCMETADATA = "getVcmetaData";

  public static final String FUNC_GETZKPCREDENTIAL = "getZKPCredential";

  public static final String FUNC_GETZKPCREDENTIALDEFINITION = "getZKPCredentialDefinition";

  public static final String FUNC_HASINITIALIZED = "hasInitialized";

  public static final String FUNC_INITIALIZE = "initialize";

  public static final String FUNC_OWNER = "owner";

  public static final String FUNC_PROXIABLEUUID = "proxiableUUID";

  public static final String FUNC_REGISTDIDDOC = "registDidDoc";

  public static final String FUNC_REGISTVCMETADATA = "registVcMetaData";

  public static final String FUNC_REGISTVCSCHEMA = "registVcSchema";

  public static final String FUNC_REGISTZKPCREDENTIAL = "registZKPCredential";

  public static final String FUNC_REGISTZKPCREDENTIALDEFINITION = "registZKPCredentialDefinition";

  public static final String FUNC_RENOUNCEOWNERSHIP = "renounceOwnership";

  public static final String FUNC_SETDOCUMENTSTORAGE = "setDocumentStorage";

  public static final String FUNC_SETVCMETASTORAGE = "setVcMetaStorage";

  public static final String FUNC_SETZKPSTORAGE = "setZKPStorage";

  public static final String FUNC_TRANSFEROWNERSHIP = "transferOwnership";

  public static final String FUNC_UPDATEDIDDOCSTATUSINSERVICE = "updateDidDocStatusInService";

  public static final String FUNC_UPDATEDIDDOCSTATUSREVOCATION = "updateDidDocStatusRevocation";

  public static final String FUNC_UPDATEVCSTATS = "updateVcStats";

  public static final String FUNC_UPGRADETOANDCALL = "upgradeToAndCall";

  public static final Event DIDCREATED_EVENT = new Event("DIDCreated",
      Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}));
  ;

  public static final Event DIDDEACTIVATED_EVENT = new Event("DIDDeactivated",
      Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}));
  ;

  public static final Event DIDUPDATED_EVENT = new Event("DIDUpdated",
      Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}));
  ;

  public static final Event INITIALIZED_EVENT = new Event("Initialized",
      Arrays.<TypeReference<?>>asList(new TypeReference<Uint64>() {}));
  ;

  public static final Event OWNERSHIPTRANSFERRED_EVENT = new Event("OwnershipTransferred",
      Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
  ;

  public static final Event SETUP_EVENT = new Event("Setup",
      Arrays.<TypeReference<?>>asList());
  ;

  public static final Event UPGRADED_EVENT = new Event("Upgraded",
      Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}));
  ;

  public static final Event VCISSUED_EVENT = new Event("VCIssued",
      Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}, new TypeReference<Utf8String>() {}));
  ;

  public static final Event VCSCHEMACREATED_EVENT = new Event("VCSchemaCreated",
      Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}));
  ;

  public static final Event VCSTATUS_EVENT = new Event("VCStatus",
      Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}, new TypeReference<Utf8String>() {}));
  ;

  @Deprecated
  protected OpenDID(String contractAddress, Web3j web3j, Credentials credentials,
                    BigInteger gasPrice, BigInteger gasLimit) {
    super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
  }

  protected OpenDID(String contractAddress, Web3j web3j, Credentials credentials,
                    ContractGasProvider contractGasProvider) {
    super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
  }

  @Deprecated
  protected OpenDID(String contractAddress, Web3j web3j, TransactionManager transactionManager,
                    BigInteger gasPrice, BigInteger gasLimit) {
    super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
  }

  protected OpenDID(String contractAddress, Web3j web3j, TransactionManager transactionManager,
                    ContractGasProvider contractGasProvider) {
    super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
  }

  public static List<DIDCreatedEventResponse> getDIDCreatedEvents(
      TransactionReceipt transactionReceipt) {
    List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(DIDCREATED_EVENT, transactionReceipt);
    ArrayList<DIDCreatedEventResponse> responses = new ArrayList<DIDCreatedEventResponse>(valueList.size());
    for (Contract.EventValuesWithLog eventValues : valueList) {
      DIDCreatedEventResponse typedResponse = new DIDCreatedEventResponse();
      typedResponse.log = eventValues.getLog();
      typedResponse.did = (String) eventValues.getNonIndexedValues().get(0).getValue();
      typedResponse.controller = (String) eventValues.getNonIndexedValues().get(1).getValue();
      responses.add(typedResponse);
    }
    return responses;
  }

  public static DIDCreatedEventResponse getDIDCreatedEventFromLog(Log log) {
    Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(DIDCREATED_EVENT, log);
    DIDCreatedEventResponse typedResponse = new DIDCreatedEventResponse();
    typedResponse.log = log;
    typedResponse.did = (String) eventValues.getNonIndexedValues().get(0).getValue();
    typedResponse.controller = (String) eventValues.getNonIndexedValues().get(1).getValue();
    return typedResponse;
  }

  public Flowable<DIDCreatedEventResponse> dIDCreatedEventFlowable(EthFilter filter) {
    return web3j.ethLogFlowable(filter).map(log -> getDIDCreatedEventFromLog(log));
  }

  public Flowable<DIDCreatedEventResponse> dIDCreatedEventFlowable(
      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
    EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
    filter.addSingleTopic(EventEncoder.encode(DIDCREATED_EVENT));
    return dIDCreatedEventFlowable(filter);
  }

  public static List<DIDDeactivatedEventResponse> getDIDDeactivatedEvents(
      TransactionReceipt transactionReceipt) {
    List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(DIDDEACTIVATED_EVENT, transactionReceipt);
    ArrayList<DIDDeactivatedEventResponse> responses = new ArrayList<DIDDeactivatedEventResponse>(valueList.size());
    for (Contract.EventValuesWithLog eventValues : valueList) {
      DIDDeactivatedEventResponse typedResponse = new DIDDeactivatedEventResponse();
      typedResponse.log = eventValues.getLog();
      typedResponse.did = (String) eventValues.getNonIndexedValues().get(0).getValue();
      typedResponse.controller = (String) eventValues.getNonIndexedValues().get(1).getValue();
      responses.add(typedResponse);
    }
    return responses;
  }

  public static DIDDeactivatedEventResponse getDIDDeactivatedEventFromLog(Log log) {
    Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(DIDDEACTIVATED_EVENT, log);
    DIDDeactivatedEventResponse typedResponse = new DIDDeactivatedEventResponse();
    typedResponse.log = log;
    typedResponse.did = (String) eventValues.getNonIndexedValues().get(0).getValue();
    typedResponse.controller = (String) eventValues.getNonIndexedValues().get(1).getValue();
    return typedResponse;
  }

  public Flowable<DIDDeactivatedEventResponse> dIDDeactivatedEventFlowable(EthFilter filter) {
    return web3j.ethLogFlowable(filter).map(log -> getDIDDeactivatedEventFromLog(log));
  }

  public Flowable<DIDDeactivatedEventResponse> dIDDeactivatedEventFlowable(
      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
    EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
    filter.addSingleTopic(EventEncoder.encode(DIDDEACTIVATED_EVENT));
    return dIDDeactivatedEventFlowable(filter);
  }

  public static List<DIDUpdatedEventResponse> getDIDUpdatedEvents(
      TransactionReceipt transactionReceipt) {
    List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(DIDUPDATED_EVENT, transactionReceipt);
    ArrayList<DIDUpdatedEventResponse> responses = new ArrayList<DIDUpdatedEventResponse>(valueList.size());
    for (Contract.EventValuesWithLog eventValues : valueList) {
      DIDUpdatedEventResponse typedResponse = new DIDUpdatedEventResponse();
      typedResponse.log = eventValues.getLog();
      typedResponse.did = (String) eventValues.getNonIndexedValues().get(0).getValue();
      typedResponse.controller = (String) eventValues.getNonIndexedValues().get(1).getValue();
      responses.add(typedResponse);
    }
    return responses;
  }

  public static DIDUpdatedEventResponse getDIDUpdatedEventFromLog(Log log) {
    Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(DIDUPDATED_EVENT, log);
    DIDUpdatedEventResponse typedResponse = new DIDUpdatedEventResponse();
    typedResponse.log = log;
    typedResponse.did = (String) eventValues.getNonIndexedValues().get(0).getValue();
    typedResponse.controller = (String) eventValues.getNonIndexedValues().get(1).getValue();
    return typedResponse;
  }

  public Flowable<DIDUpdatedEventResponse> dIDUpdatedEventFlowable(EthFilter filter) {
    return web3j.ethLogFlowable(filter).map(log -> getDIDUpdatedEventFromLog(log));
  }

  public Flowable<DIDUpdatedEventResponse> dIDUpdatedEventFlowable(
      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
    EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
    filter.addSingleTopic(EventEncoder.encode(DIDUPDATED_EVENT));
    return dIDUpdatedEventFlowable(filter);
  }

  public static List<InitializedEventResponse> getInitializedEvents(
      TransactionReceipt transactionReceipt) {
    List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(INITIALIZED_EVENT, transactionReceipt);
    ArrayList<InitializedEventResponse> responses = new ArrayList<InitializedEventResponse>(valueList.size());
    for (Contract.EventValuesWithLog eventValues : valueList) {
      InitializedEventResponse typedResponse = new InitializedEventResponse();
      typedResponse.log = eventValues.getLog();
      typedResponse.version = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
      responses.add(typedResponse);
    }
    return responses;
  }

  public static InitializedEventResponse getInitializedEventFromLog(Log log) {
    Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(INITIALIZED_EVENT, log);
    InitializedEventResponse typedResponse = new InitializedEventResponse();
    typedResponse.log = log;
    typedResponse.version = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
    return typedResponse;
  }

  public Flowable<InitializedEventResponse> initializedEventFlowable(EthFilter filter) {
    return web3j.ethLogFlowable(filter).map(log -> getInitializedEventFromLog(log));
  }

  public Flowable<InitializedEventResponse> initializedEventFlowable(
      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
    EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
    filter.addSingleTopic(EventEncoder.encode(INITIALIZED_EVENT));
    return initializedEventFlowable(filter);
  }

  public static List<OwnershipTransferredEventResponse> getOwnershipTransferredEvents(
      TransactionReceipt transactionReceipt) {
    List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(OWNERSHIPTRANSFERRED_EVENT, transactionReceipt);
    ArrayList<OwnershipTransferredEventResponse> responses = new ArrayList<OwnershipTransferredEventResponse>(valueList.size());
    for (Contract.EventValuesWithLog eventValues : valueList) {
      OwnershipTransferredEventResponse typedResponse = new OwnershipTransferredEventResponse();
      typedResponse.log = eventValues.getLog();
      typedResponse.previousOwner = (String) eventValues.getIndexedValues().get(0).getValue();
      typedResponse.newOwner = (String) eventValues.getIndexedValues().get(1).getValue();
      responses.add(typedResponse);
    }
    return responses;
  }

  public static OwnershipTransferredEventResponse getOwnershipTransferredEventFromLog(Log log) {
    Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(OWNERSHIPTRANSFERRED_EVENT, log);
    OwnershipTransferredEventResponse typedResponse = new OwnershipTransferredEventResponse();
    typedResponse.log = log;
    typedResponse.previousOwner = (String) eventValues.getIndexedValues().get(0).getValue();
    typedResponse.newOwner = (String) eventValues.getIndexedValues().get(1).getValue();
    return typedResponse;
  }

  public Flowable<OwnershipTransferredEventResponse> ownershipTransferredEventFlowable(
      EthFilter filter) {
    return web3j.ethLogFlowable(filter).map(log -> getOwnershipTransferredEventFromLog(log));
  }

  public Flowable<OwnershipTransferredEventResponse> ownershipTransferredEventFlowable(
      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
    EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
    filter.addSingleTopic(EventEncoder.encode(OWNERSHIPTRANSFERRED_EVENT));
    return ownershipTransferredEventFlowable(filter);
  }

  public static List<SetupEventResponse> getSetupEvents(TransactionReceipt transactionReceipt) {
    List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(SETUP_EVENT, transactionReceipt);
    ArrayList<SetupEventResponse> responses = new ArrayList<SetupEventResponse>(valueList.size());
    for (Contract.EventValuesWithLog eventValues : valueList) {
      SetupEventResponse typedResponse = new SetupEventResponse();
      typedResponse.log = eventValues.getLog();
      responses.add(typedResponse);
    }
    return responses;
  }

  public static SetupEventResponse getSetupEventFromLog(Log log) {
    Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(SETUP_EVENT, log);
    SetupEventResponse typedResponse = new SetupEventResponse();
    typedResponse.log = log;
    return typedResponse;
  }

  public Flowable<SetupEventResponse> setupEventFlowable(EthFilter filter) {
    return web3j.ethLogFlowable(filter).map(log -> getSetupEventFromLog(log));
  }

  public Flowable<SetupEventResponse> setupEventFlowable(DefaultBlockParameter startBlock,
                                                         DefaultBlockParameter endBlock) {
    EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
    filter.addSingleTopic(EventEncoder.encode(SETUP_EVENT));
    return setupEventFlowable(filter);
  }

  public static List<UpgradedEventResponse> getUpgradedEvents(
      TransactionReceipt transactionReceipt) {
    List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(UPGRADED_EVENT, transactionReceipt);
    ArrayList<UpgradedEventResponse> responses = new ArrayList<UpgradedEventResponse>(valueList.size());
    for (Contract.EventValuesWithLog eventValues : valueList) {
      UpgradedEventResponse typedResponse = new UpgradedEventResponse();
      typedResponse.log = eventValues.getLog();
      typedResponse.implementation = (String) eventValues.getIndexedValues().get(0).getValue();
      responses.add(typedResponse);
    }
    return responses;
  }

  public static UpgradedEventResponse getUpgradedEventFromLog(Log log) {
    Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(UPGRADED_EVENT, log);
    UpgradedEventResponse typedResponse = new UpgradedEventResponse();
    typedResponse.log = log;
    typedResponse.implementation = (String) eventValues.getIndexedValues().get(0).getValue();
    return typedResponse;
  }

  public Flowable<UpgradedEventResponse> upgradedEventFlowable(EthFilter filter) {
    return web3j.ethLogFlowable(filter).map(log -> getUpgradedEventFromLog(log));
  }

  public Flowable<UpgradedEventResponse> upgradedEventFlowable(DefaultBlockParameter startBlock,
                                                               DefaultBlockParameter endBlock) {
    EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
    filter.addSingleTopic(EventEncoder.encode(UPGRADED_EVENT));
    return upgradedEventFlowable(filter);
  }

  public static List<VCIssuedEventResponse> getVCIssuedEvents(
      TransactionReceipt transactionReceipt) {
    List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(VCISSUED_EVENT, transactionReceipt);
    ArrayList<VCIssuedEventResponse> responses = new ArrayList<VCIssuedEventResponse>(valueList.size());
    for (Contract.EventValuesWithLog eventValues : valueList) {
      VCIssuedEventResponse typedResponse = new VCIssuedEventResponse();
      typedResponse.log = eventValues.getLog();
      typedResponse.vcId = (String) eventValues.getNonIndexedValues().get(0).getValue();
      typedResponse.issuer = (String) eventValues.getNonIndexedValues().get(1).getValue();
      typedResponse.did = (String) eventValues.getNonIndexedValues().get(2).getValue();
      responses.add(typedResponse);
    }
    return responses;
  }

  public static VCIssuedEventResponse getVCIssuedEventFromLog(Log log) {
    Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(VCISSUED_EVENT, log);
    VCIssuedEventResponse typedResponse = new VCIssuedEventResponse();
    typedResponse.log = log;
    typedResponse.vcId = (String) eventValues.getNonIndexedValues().get(0).getValue();
    typedResponse.issuer = (String) eventValues.getNonIndexedValues().get(1).getValue();
    typedResponse.did = (String) eventValues.getNonIndexedValues().get(2).getValue();
    return typedResponse;
  }

  public Flowable<VCIssuedEventResponse> vCIssuedEventFlowable(EthFilter filter) {
    return web3j.ethLogFlowable(filter).map(log -> getVCIssuedEventFromLog(log));
  }

  public Flowable<VCIssuedEventResponse> vCIssuedEventFlowable(DefaultBlockParameter startBlock,
                                                               DefaultBlockParameter endBlock) {
    EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
    filter.addSingleTopic(EventEncoder.encode(VCISSUED_EVENT));
    return vCIssuedEventFlowable(filter);
  }

  public static List<VCSchemaCreatedEventResponse> getVCSchemaCreatedEvents(
      TransactionReceipt transactionReceipt) {
    List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(VCSCHEMACREATED_EVENT, transactionReceipt);
    ArrayList<VCSchemaCreatedEventResponse> responses = new ArrayList<VCSchemaCreatedEventResponse>(valueList.size());
    for (Contract.EventValuesWithLog eventValues : valueList) {
      VCSchemaCreatedEventResponse typedResponse = new VCSchemaCreatedEventResponse();
      typedResponse.log = eventValues.getLog();
      typedResponse.schemaId = (String) eventValues.getNonIndexedValues().get(0).getValue();
      typedResponse.issuer = (String) eventValues.getNonIndexedValues().get(1).getValue();
      responses.add(typedResponse);
    }
    return responses;
  }

  public static VCSchemaCreatedEventResponse getVCSchemaCreatedEventFromLog(Log log) {
    Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(VCSCHEMACREATED_EVENT, log);
    VCSchemaCreatedEventResponse typedResponse = new VCSchemaCreatedEventResponse();
    typedResponse.log = log;
    typedResponse.schemaId = (String) eventValues.getNonIndexedValues().get(0).getValue();
    typedResponse.issuer = (String) eventValues.getNonIndexedValues().get(1).getValue();
    return typedResponse;
  }

  public Flowable<VCSchemaCreatedEventResponse> vCSchemaCreatedEventFlowable(EthFilter filter) {
    return web3j.ethLogFlowable(filter).map(log -> getVCSchemaCreatedEventFromLog(log));
  }

  public Flowable<VCSchemaCreatedEventResponse> vCSchemaCreatedEventFlowable(
      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
    EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
    filter.addSingleTopic(EventEncoder.encode(VCSCHEMACREATED_EVENT));
    return vCSchemaCreatedEventFlowable(filter);
  }

  public static List<VCStatusEventResponse> getVCStatusEvents(
      TransactionReceipt transactionReceipt) {
    List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(VCSTATUS_EVENT, transactionReceipt);
    ArrayList<VCStatusEventResponse> responses = new ArrayList<VCStatusEventResponse>(valueList.size());
    for (Contract.EventValuesWithLog eventValues : valueList) {
      VCStatusEventResponse typedResponse = new VCStatusEventResponse();
      typedResponse.log = eventValues.getLog();
      typedResponse.vcId = (String) eventValues.getNonIndexedValues().get(0).getValue();
      typedResponse.player = (String) eventValues.getNonIndexedValues().get(1).getValue();
      typedResponse.status = (String) eventValues.getNonIndexedValues().get(2).getValue();
      responses.add(typedResponse);
    }
    return responses;
  }

  public static VCStatusEventResponse getVCStatusEventFromLog(Log log) {
    Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(VCSTATUS_EVENT, log);
    VCStatusEventResponse typedResponse = new VCStatusEventResponse();
    typedResponse.log = log;
    typedResponse.vcId = (String) eventValues.getNonIndexedValues().get(0).getValue();
    typedResponse.player = (String) eventValues.getNonIndexedValues().get(1).getValue();
    typedResponse.status = (String) eventValues.getNonIndexedValues().get(2).getValue();
    return typedResponse;
  }

  public Flowable<VCStatusEventResponse> vCStatusEventFlowable(EthFilter filter) {
    return web3j.ethLogFlowable(filter).map(log -> getVCStatusEventFromLog(log));
  }

  public Flowable<VCStatusEventResponse> vCStatusEventFlowable(DefaultBlockParameter startBlock,
                                                               DefaultBlockParameter endBlock) {
    EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
    filter.addSingleTopic(EventEncoder.encode(VCSTATUS_EVENT));
    return vCStatusEventFlowable(filter);
  }

  public RemoteFunctionCall<String> UPGRADE_INTERFACE_VERSION() {
    final Function function = new Function(FUNC_UPGRADE_INTERFACE_VERSION,
        Arrays.<Type>asList(),
        Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
    return executeRemoteCallSingleValueReturn(function, String.class);
  }

  public RemoteFunctionCall<Document> getDidDoc(String _did) {
    final Function function = new Function(FUNC_GETDIDDOC,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_did)),
        Arrays.<TypeReference<?>>asList(new TypeReference<Document>() {}));
    return executeRemoteCallSingleValueReturn(function, Document.class);
  }

  public RemoteFunctionCall<DocumentStatus> getDidDocStatus(String _did) {
    final Function function = new Function(FUNC_GETDIDDOCSTATUS,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_did)),
        Arrays.<TypeReference<?>>asList(new TypeReference<DocumentStatus>() {}));
    return executeRemoteCallSingleValueReturn(function, DocumentStatus.class);
  }

  public RemoteFunctionCall<VcSchema> getVcSchema(String _id) {
    final Function function = new Function(FUNC_GETVCSCHEMA,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_id)),
        Arrays.<TypeReference<?>>asList(new TypeReference<VcSchema>() {}));
    return executeRemoteCallSingleValueReturn(function, VcSchema.class);
  }

  public RemoteFunctionCall<VcMeta> getVcmetaData(String _id) {
    final Function function = new Function(FUNC_GETVCMETADATA,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_id)),
        Arrays.<TypeReference<?>>asList(new TypeReference<VcMeta>() {}));
    return executeRemoteCallSingleValueReturn(function, VcMeta.class);
  }

  public RemoteFunctionCall<ZKPLibrary_CredentialSchema> getZKPCredential(String _id) {
    final Function function = new Function(FUNC_GETZKPCREDENTIAL,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_id)),
        Arrays.<TypeReference<?>>asList(new TypeReference<ZKPLibrary_CredentialSchema>() {}));
    return executeRemoteCallSingleValueReturn(function, ZKPLibrary_CredentialSchema.class);
  }

  public RemoteFunctionCall<CredentialDefinition> getZKPCredentialDefinition(String _id) {
    final Function function = new Function(FUNC_GETZKPCREDENTIALDEFINITION,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_id)),
        Arrays.<TypeReference<?>>asList(new TypeReference<CredentialDefinition>() {}));
    return executeRemoteCallSingleValueReturn(function, CredentialDefinition.class);
  }

  public RemoteFunctionCall<Boolean> hasInitialized() {
    final Function function = new Function(FUNC_HASINITIALIZED,
        Arrays.<Type>asList(),
        Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
    return executeRemoteCallSingleValueReturn(function, Boolean.class);
  }

  public RemoteFunctionCall<TransactionReceipt> initialize(String _documentStorage,
                                                           String _vcMetaStorage, String _zkpStorage) {
    final Function function = new Function(
        FUNC_INITIALIZE,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _documentStorage),
            new org.web3j.abi.datatypes.Address(160, _vcMetaStorage),
            new org.web3j.abi.datatypes.Address(160, _zkpStorage)),
        Collections.<TypeReference<?>>emptyList());
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<String> owner() {
    final Function function = new Function(FUNC_OWNER,
        Arrays.<Type>asList(),
        Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
    return executeRemoteCallSingleValueReturn(function, String.class);
  }

  public RemoteFunctionCall<byte[]> proxiableUUID() {
    final Function function = new Function(FUNC_PROXIABLEUUID,
        Arrays.<Type>asList(),
        Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
    return executeRemoteCallSingleValueReturn(function, byte[].class);
  }

  public RemoteFunctionCall<TransactionReceipt> registDidDoc(Document _invokedDidDoc) {
    final Function function = new Function(
        FUNC_REGISTDIDDOC,
        Arrays.<Type>asList(_invokedDidDoc),
        Collections.<TypeReference<?>>emptyList());
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> registVcMetaData(VcMeta _vcMeta) {
    final Function function = new Function(
        FUNC_REGISTVCMETADATA,
        Arrays.<Type>asList(_vcMeta),
        Collections.<TypeReference<?>>emptyList());
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> registVcSchema(VcSchema _vcSchema) {
    final Function function = new Function(
        FUNC_REGISTVCSCHEMA,
        Arrays.<Type>asList(_vcSchema),
        Collections.<TypeReference<?>>emptyList());
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> registZKPCredential(
      ZKPLibrary_CredentialSchema _credentialSchema) {
    final Function function = new Function(
        FUNC_REGISTZKPCREDENTIAL,
        Arrays.<Type>asList(_credentialSchema),
        Collections.<TypeReference<?>>emptyList());
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> registZKPCredentialDefinition(
      CredentialDefinition _credentialDefinition) {
    final Function function = new Function(
        FUNC_REGISTZKPCREDENTIALDEFINITION,
        Arrays.<Type>asList(_credentialDefinition),
        Collections.<TypeReference<?>>emptyList());
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> renounceOwnership() {
    final Function function = new Function(
        FUNC_RENOUNCEOWNERSHIP,
        Arrays.<Type>asList(),
        Collections.<TypeReference<?>>emptyList());
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> setDocumentStorage(String _documentStorage) {
    final Function function = new Function(
        FUNC_SETDOCUMENTSTORAGE,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _documentStorage)),
        Collections.<TypeReference<?>>emptyList());
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> setVcMetaStorage(String _vcMetaStorage) {
    final Function function = new Function(
        FUNC_SETVCMETASTORAGE,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _vcMetaStorage)),
        Collections.<TypeReference<?>>emptyList());
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> setZKPStorage(String _zkpStorage) {
    final Function function = new Function(
        FUNC_SETZKPSTORAGE,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _zkpStorage)),
        Collections.<TypeReference<?>>emptyList());
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> transferOwnership(String newOwner) {
    final Function function = new Function(
        FUNC_TRANSFEROWNERSHIP,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, newOwner)),
        Collections.<TypeReference<?>>emptyList());
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> updateDidDocStatusInService(String _did,
                                                                            String _status, String _versionId) {
    final Function function = new Function(
        FUNC_UPDATEDIDDOCSTATUSINSERVICE,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_did),
            new org.web3j.abi.datatypes.Utf8String(_status),
            new org.web3j.abi.datatypes.Utf8String(_versionId)),
        Collections.<TypeReference<?>>emptyList());
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> updateDidDocStatusRevocation(String _did,
                                                                             String _status, String _terminatedTime) {
    final Function function = new Function(
        FUNC_UPDATEDIDDOCSTATUSREVOCATION,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_did),
            new org.web3j.abi.datatypes.Utf8String(_status),
            new org.web3j.abi.datatypes.Utf8String(_terminatedTime)),
        Collections.<TypeReference<?>>emptyList());
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> updateVcStats(String _vcId, String _status) {
    final Function function = new Function(
        FUNC_UPDATEVCSTATS,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_vcId),
            new org.web3j.abi.datatypes.Utf8String(_status)),
        Collections.<TypeReference<?>>emptyList());
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> upgradeToAndCall(String newImplementation,
                                                                 byte[] data, BigInteger weiValue) {
    final Function function = new Function(
        FUNC_UPGRADETOANDCALL,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, newImplementation),
            new org.web3j.abi.datatypes.DynamicBytes(data)),
        Collections.<TypeReference<?>>emptyList());
    return executeRemoteCallTransaction(function, weiValue);
  }

  @Deprecated
  public static OpenDID load(String contractAddress, Web3j web3j, Credentials credentials,
                             BigInteger gasPrice, BigInteger gasLimit) {
    return new OpenDID(contractAddress, web3j, credentials, gasPrice, gasLimit);
  }

  @Deprecated
  public static OpenDID load(String contractAddress, Web3j web3j,
                             TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
    return new OpenDID(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
  }

  public static OpenDID load(String contractAddress, Web3j web3j, Credentials credentials,
                             ContractGasProvider contractGasProvider) {
    return new OpenDID(contractAddress, web3j, credentials, contractGasProvider);
  }

  public static OpenDID load(String contractAddress, Web3j web3j,
                             TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
    return new OpenDID(contractAddress, web3j, transactionManager, contractGasProvider);
  }

  public static RemoteCall<OpenDID> deploy(Web3j web3j, Credentials credentials,
                                           ContractGasProvider contractGasProvider) {
    return deployRemoteCall(OpenDID.class, web3j, credentials, contractGasProvider, getDeploymentBinary(), "");
  }

  @Deprecated
  public static RemoteCall<OpenDID> deploy(Web3j web3j, Credentials credentials,
                                           BigInteger gasPrice, BigInteger gasLimit) {
    return deployRemoteCall(OpenDID.class, web3j, credentials, gasPrice, gasLimit, getDeploymentBinary(), "");
  }

  public static RemoteCall<OpenDID> deploy(Web3j web3j, TransactionManager transactionManager,
                                           ContractGasProvider contractGasProvider) {
    return deployRemoteCall(OpenDID.class, web3j, transactionManager, contractGasProvider, getDeploymentBinary(), "");
  }

  @Deprecated
  public static RemoteCall<OpenDID> deploy(Web3j web3j, TransactionManager transactionManager,
                                           BigInteger gasPrice, BigInteger gasLimit) {
    return deployRemoteCall(OpenDID.class, web3j, transactionManager, gasPrice, gasLimit, getDeploymentBinary(), "");
  }

  public static void linkLibraries(List<Contract.LinkReference> references) {
    librariesLinkedBinary = linkBinaryWithReferences(BINARY, references);
  }

  private static String getDeploymentBinary() {
    if (librariesLinkedBinary != null) {
      return librariesLinkedBinary;
    } else {
      return BINARY;
    }
  }

  public static class VerificationMethod extends DynamicStruct {
    public String id;

    public BigInteger keyType;

    public String controller;

    public String publicKeyMultibase;

    public BigInteger authType;

    public VerificationMethod(String id, BigInteger keyType, String controller,
                              String publicKeyMultibase, BigInteger authType) {
      super(new org.web3j.abi.datatypes.Utf8String(id),
          new org.web3j.abi.datatypes.generated.Uint8(keyType),
          new org.web3j.abi.datatypes.Utf8String(controller),
          new org.web3j.abi.datatypes.Utf8String(publicKeyMultibase),
          new org.web3j.abi.datatypes.generated.Uint8(authType));
      this.id = id;
      this.keyType = keyType;
      this.controller = controller;
      this.publicKeyMultibase = publicKeyMultibase;
      this.authType = authType;
    }

    public VerificationMethod(Utf8String id, Uint8 keyType, Utf8String controller,
                              Utf8String publicKeyMultibase, Uint8 authType) {
      super(id, keyType, controller, publicKeyMultibase, authType);
      this.id = id.getValue();
      this.keyType = keyType.getValue();
      this.controller = controller.getValue();
      this.publicKeyMultibase = publicKeyMultibase.getValue();
      this.authType = authType.getValue();
    }
  }

  public static class Service extends DynamicStruct {
    public String id;

    public String serviceEndpoint;

    public List<String> serviceType;

    public Service(String id, String serviceEndpoint, List<String> serviceType) {
      super(new org.web3j.abi.datatypes.Utf8String(id),
          new org.web3j.abi.datatypes.Utf8String(serviceEndpoint),
          new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
              org.web3j.abi.datatypes.Utf8String.class,
              org.web3j.abi.Utils.typeMap(serviceType, org.web3j.abi.datatypes.Utf8String.class)));
      this.id = id;
      this.serviceEndpoint = serviceEndpoint;
      this.serviceType = serviceType;
    }

    public Service(Utf8String id, Utf8String serviceEndpoint,
                   @Parameterized(type = Utf8String.class) DynamicArray<Utf8String> serviceType) {
      super(id, serviceEndpoint, serviceType);
      this.id = id.getValue();
      this.serviceEndpoint = serviceEndpoint.getValue();
      this.serviceType = serviceType.getValue().stream().map(v -> v.getValue()).collect(Collectors.toList());
    }
  }

  public static class DocumentStatus extends DynamicStruct {
    public String id;

    public BigInteger status;

    public String version;

    public String roleType;

    public String terminatedTime;

    public DocumentStatus(String id, BigInteger status, String version, String roleType,
                          String terminatedTime) {
      super(new org.web3j.abi.datatypes.Utf8String(id),
          new org.web3j.abi.datatypes.generated.Uint8(status),
          new org.web3j.abi.datatypes.Utf8String(version),
          new org.web3j.abi.datatypes.Utf8String(roleType),
          new org.web3j.abi.datatypes.Utf8String(terminatedTime));
      this.id = id;
      this.status = status;
      this.version = version;
      this.roleType = roleType;
      this.terminatedTime = terminatedTime;
    }

    public DocumentStatus(Utf8String id, Uint8 status, Utf8String version, Utf8String roleType,
                          Utf8String terminatedTime) {
      super(id, status, version, roleType, terminatedTime);
      this.id = id.getValue();
      this.status = status.getValue();
      this.version = version.getValue();
      this.roleType = roleType.getValue();
      this.terminatedTime = terminatedTime.getValue();
    }
  }

  public static class MetaData extends DynamicStruct {
    public String formatVersion;

    public String language;

    public MetaData(String formatVersion, String language) {
      super(new org.web3j.abi.datatypes.Utf8String(formatVersion),
          new org.web3j.abi.datatypes.Utf8String(language));
      this.formatVersion = formatVersion;
      this.language = language;
    }

    public MetaData(Utf8String formatVersion, Utf8String language) {
      super(formatVersion, language);
      this.formatVersion = formatVersion.getValue();
      this.language = language.getValue();
    }
  }

  public static class SchemaClaimItem extends DynamicStruct {
    public String caption;

    public String format;

    public Boolean hideValue;

    public String id;

    public String _type;

    public SchemaClaimItem(String caption, String format, Boolean hideValue, String id,
                           String _type) {
      super(new org.web3j.abi.datatypes.Utf8String(caption),
          new org.web3j.abi.datatypes.Utf8String(format),
          new org.web3j.abi.datatypes.Bool(hideValue),
          new org.web3j.abi.datatypes.Utf8String(id),
          new org.web3j.abi.datatypes.Utf8String(_type));
      this.caption = caption;
      this.format = format;
      this.hideValue = hideValue;
      this.id = id;
      this._type = _type;
    }

    public SchemaClaimItem(Utf8String caption, Utf8String format, Bool hideValue, Utf8String id,
                           Utf8String _type) {
      super(caption, format, hideValue, id, _type);
      this.caption = caption.getValue();
      this.format = format.getValue();
      this.hideValue = hideValue.getValue();
      this.id = id.getValue();
      this._type = _type.getValue();
    }
  }

  public static class ClaimNamespace extends DynamicStruct {
    public String id;

    public String name;

    public String ref;

    public ClaimNamespace(String id, String name, String ref) {
      super(new org.web3j.abi.datatypes.Utf8String(id),
          new org.web3j.abi.datatypes.Utf8String(name),
          new org.web3j.abi.datatypes.Utf8String(ref));
      this.id = id;
      this.name = name;
      this.ref = ref;
    }

    public ClaimNamespace(Utf8String id, Utf8String name, Utf8String ref) {
      super(id, name, ref);
      this.id = id.getValue();
      this.name = name.getValue();
      this.ref = ref.getValue();
    }
  }

  public static class Provider extends DynamicStruct {
    public String did;

    public String certVcReference;

    public Provider(String did, String certVcReference) {
      super(new org.web3j.abi.datatypes.Utf8String(did),
          new org.web3j.abi.datatypes.Utf8String(certVcReference));
      this.did = did;
      this.certVcReference = certVcReference;
    }

    public Provider(Utf8String did, Utf8String certVcReference) {
      super(did, certVcReference);
      this.did = did.getValue();
      this.certVcReference = certVcReference.getValue();
    }
  }

  public static class CredentialSchemaLibrary_CredentialSchema extends DynamicStruct {
    public String url;

    public String credentialSchemaType;

    public CredentialSchemaLibrary_CredentialSchema(String url, String credentialSchemaType) {
      super(new org.web3j.abi.datatypes.Utf8String(url),
          new org.web3j.abi.datatypes.Utf8String(credentialSchemaType));
      this.url = url;
      this.credentialSchemaType = credentialSchemaType;
    }

    public CredentialSchemaLibrary_CredentialSchema(Utf8String url,
                                                    Utf8String credentialSchemaType) {
      super(url, credentialSchemaType);
      this.url = url.getValue();
      this.credentialSchemaType = credentialSchemaType.getValue();
    }
  }

  public static class ZKPLibrary_CredentialSchema extends DynamicStruct {
    public String id;

    public String name;

    public String version;

    public List<String> attrNames;

    public String tag;

    public ZKPLibrary_CredentialSchema(String id, String name, String version,
                                       List<String> attrNames, String tag) {
      super(new org.web3j.abi.datatypes.Utf8String(id),
          new org.web3j.abi.datatypes.Utf8String(name),
          new org.web3j.abi.datatypes.Utf8String(version),
          new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
              org.web3j.abi.datatypes.Utf8String.class,
              org.web3j.abi.Utils.typeMap(attrNames, org.web3j.abi.datatypes.Utf8String.class)),
          new org.web3j.abi.datatypes.Utf8String(tag));
      this.id = id;
      this.name = name;
      this.version = version;
      this.attrNames = attrNames;
      this.tag = tag;
    }

    public ZKPLibrary_CredentialSchema(Utf8String id, Utf8String name, Utf8String version,
                                       @Parameterized(type = Utf8String.class) DynamicArray<Utf8String> attrNames,
                                       Utf8String tag) {
      super(id, name, version, attrNames, tag);
      this.id = id.getValue();
      this.name = name.getValue();
      this.version = version.getValue();
      this.attrNames = attrNames.getValue().stream().map(v -> v.getValue()).collect(Collectors.toList());
      this.tag = tag.getValue();
    }
  }

  public static class CredentialDefinition extends DynamicStruct {
    public String id;

    public String schemaId;

    public String ver;

    public String _type;

    public String value;

    public String tag;

    public CredentialDefinition(String id, String schemaId, String ver, String _type,
                                String value, String tag) {
      super(new org.web3j.abi.datatypes.Utf8String(id),
          new org.web3j.abi.datatypes.Utf8String(schemaId),
          new org.web3j.abi.datatypes.Utf8String(ver),
          new org.web3j.abi.datatypes.Utf8String(_type),
          new org.web3j.abi.datatypes.Utf8String(value),
          new org.web3j.abi.datatypes.Utf8String(tag));
      this.id = id;
      this.schemaId = schemaId;
      this.ver = ver;
      this._type = _type;
      this.value = value;
      this.tag = tag;
    }

    public CredentialDefinition(Utf8String id, Utf8String schemaId, Utf8String ver,
                                Utf8String _type, Utf8String value, Utf8String tag) {
      super(id, schemaId, ver, _type, value, tag);
      this.id = id.getValue();
      this.schemaId = schemaId.getValue();
      this.ver = ver.getValue();
      this._type = _type.getValue();
      this.value = value.getValue();
      this.tag = tag.getValue();
    }
  }

  public static class Document extends DynamicStruct {
    public List<String> context;

    public String id;

    public String controller;

    public String created;

    public String updated;

    public String versionId;

    public Boolean deactivated;

    public List<VerificationMethod> verificationMethod;

    public List<String> assertionsMethod;

    public List<String> authentication;

    public List<String> keyAgreement;

    public List<String> capabilityInvocation;

    public List<String> capabilityDelegation;

    public List<Service> services;

    public Document(List<String> context, String id, String controller, String created,
                    String updated, String versionId, Boolean deactivated,
                    List<VerificationMethod> verificationMethod, List<String> assertionsMethod,
                    List<String> authentication, List<String> keyAgreement,
                    List<String> capabilityInvocation, List<String> capabilityDelegation,
                    List<Service> services) {
      super(new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
              org.web3j.abi.datatypes.Utf8String.class,
              org.web3j.abi.Utils.typeMap(context, org.web3j.abi.datatypes.Utf8String.class)),
          new org.web3j.abi.datatypes.Utf8String(id),
          new org.web3j.abi.datatypes.Utf8String(controller),
          new org.web3j.abi.datatypes.Utf8String(created),
          new org.web3j.abi.datatypes.Utf8String(updated),
          new org.web3j.abi.datatypes.Utf8String(versionId),
          new org.web3j.abi.datatypes.Bool(deactivated),
          new org.web3j.abi.datatypes.DynamicArray<VerificationMethod>(VerificationMethod.class, verificationMethod),
          new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
              org.web3j.abi.datatypes.Utf8String.class,
              org.web3j.abi.Utils.typeMap(assertionsMethod, org.web3j.abi.datatypes.Utf8String.class)),
          new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
              org.web3j.abi.datatypes.Utf8String.class,
              org.web3j.abi.Utils.typeMap(authentication, org.web3j.abi.datatypes.Utf8String.class)),
          new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
              org.web3j.abi.datatypes.Utf8String.class,
              org.web3j.abi.Utils.typeMap(keyAgreement, org.web3j.abi.datatypes.Utf8String.class)),
          new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
              org.web3j.abi.datatypes.Utf8String.class,
              org.web3j.abi.Utils.typeMap(capabilityInvocation, org.web3j.abi.datatypes.Utf8String.class)),
          new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
              org.web3j.abi.datatypes.Utf8String.class,
              org.web3j.abi.Utils.typeMap(capabilityDelegation, org.web3j.abi.datatypes.Utf8String.class)),
          new org.web3j.abi.datatypes.DynamicArray<Service>(Service.class, services));
      this.context = context;
      this.id = id;
      this.controller = controller;
      this.created = created;
      this.updated = updated;
      this.versionId = versionId;
      this.deactivated = deactivated;
      this.verificationMethod = verificationMethod;
      this.assertionsMethod = assertionsMethod;
      this.authentication = authentication;
      this.keyAgreement = keyAgreement;
      this.capabilityInvocation = capabilityInvocation;
      this.capabilityDelegation = capabilityDelegation;
      this.services = services;
    }

    public Document(@Parameterized(type = Utf8String.class) DynamicArray<Utf8String> context,
                    Utf8String id, Utf8String controller, Utf8String created, Utf8String updated,
                    Utf8String versionId, Bool deactivated,
                    @Parameterized(type = VerificationMethod.class) DynamicArray<VerificationMethod> verificationMethod,
                    @Parameterized(type = Utf8String.class) DynamicArray<Utf8String> assertionsMethod,
                    @Parameterized(type = Utf8String.class) DynamicArray<Utf8String> authentication,
                    @Parameterized(type = Utf8String.class) DynamicArray<Utf8String> keyAgreement,
                    @Parameterized(type = Utf8String.class) DynamicArray<Utf8String> capabilityInvocation,
                    @Parameterized(type = Utf8String.class) DynamicArray<Utf8String> capabilityDelegation,
                    @Parameterized(type = Service.class) DynamicArray<Service> services) {
      super(context, id, controller, created, updated, versionId, deactivated, verificationMethod, assertionsMethod, authentication, keyAgreement, capabilityInvocation, capabilityDelegation, services);
      this.context = context.getValue().stream().map(v -> v.getValue()).collect(Collectors.toList());
      this.id = id.getValue();
      this.controller = controller.getValue();
      this.created = created.getValue();
      this.updated = updated.getValue();
      this.versionId = versionId.getValue();
      this.deactivated = deactivated.getValue();
      this.verificationMethod = verificationMethod.getValue();
      this.assertionsMethod = assertionsMethod.getValue().stream().map(v -> v.getValue()).collect(Collectors.toList());
      this.authentication = authentication.getValue().stream().map(v -> v.getValue()).collect(Collectors.toList());
      this.keyAgreement = keyAgreement.getValue().stream().map(v -> v.getValue()).collect(Collectors.toList());
      this.capabilityInvocation = capabilityInvocation.getValue().stream().map(v -> v.getValue()).collect(Collectors.toList());
      this.capabilityDelegation = capabilityDelegation.getValue().stream().map(v -> v.getValue()).collect(Collectors.toList());
      this.services = services.getValue();
    }
  }

  public static class VCSchemaClaim extends DynamicStruct {
    public List<SchemaClaimItem> items;

    public ClaimNamespace namespace;

    public VCSchemaClaim(List<SchemaClaimItem> items, ClaimNamespace namespace) {
      super(new org.web3j.abi.datatypes.DynamicArray<SchemaClaimItem>(SchemaClaimItem.class, items),
          namespace);
      this.items = items;
      this.namespace = namespace;
    }

    public VCSchemaClaim(
        @Parameterized(type = SchemaClaimItem.class) DynamicArray<SchemaClaimItem> items,
        ClaimNamespace namespace) {
      super(items, namespace);
      this.items = items.getValue();
      this.namespace = namespace;
    }
  }

  public static class VcMeta extends DynamicStruct {
    public String id;

    public Provider issuer;

    public String subject;

    public CredentialSchemaLibrary_CredentialSchema credentialSchema;

    public String status;

    public String issuanceDate;

    public String validFrom;

    public String validUntil;

    public String formatVersion;

    public String language;

    public VcMeta(String id, Provider issuer, String subject,
                  CredentialSchemaLibrary_CredentialSchema credentialSchema, String status,
                  String issuanceDate, String validFrom, String validUntil, String formatVersion,
                  String language) {
      super(new org.web3j.abi.datatypes.Utf8String(id),
          issuer,
          new org.web3j.abi.datatypes.Utf8String(subject),
          credentialSchema,
          new org.web3j.abi.datatypes.Utf8String(status),
          new org.web3j.abi.datatypes.Utf8String(issuanceDate),
          new org.web3j.abi.datatypes.Utf8String(validFrom),
          new org.web3j.abi.datatypes.Utf8String(validUntil),
          new org.web3j.abi.datatypes.Utf8String(formatVersion),
          new org.web3j.abi.datatypes.Utf8String(language));
      this.id = id;
      this.issuer = issuer;
      this.subject = subject;
      this.credentialSchema = credentialSchema;
      this.status = status;
      this.issuanceDate = issuanceDate;
      this.validFrom = validFrom;
      this.validUntil = validUntil;
      this.formatVersion = formatVersion;
      this.language = language;
    }

    public VcMeta(Utf8String id, Provider issuer, Utf8String subject,
                  CredentialSchemaLibrary_CredentialSchema credentialSchema, Utf8String status,
                  Utf8String issuanceDate, Utf8String validFrom, Utf8String validUntil,
                  Utf8String formatVersion, Utf8String language) {
      super(id, issuer, subject, credentialSchema, status, issuanceDate, validFrom, validUntil, formatVersion, language);
      this.id = id.getValue();
      this.issuer = issuer;
      this.subject = subject.getValue();
      this.credentialSchema = credentialSchema;
      this.status = status.getValue();
      this.issuanceDate = issuanceDate.getValue();
      this.validFrom = validFrom.getValue();
      this.validUntil = validUntil.getValue();
      this.formatVersion = formatVersion.getValue();
      this.language = language.getValue();
    }
  }

  public static class CredentialSubject extends DynamicStruct {
    public List<VCSchemaClaim> claims;

    public CredentialSubject(List<VCSchemaClaim> claims) {
      super(new org.web3j.abi.datatypes.DynamicArray<VCSchemaClaim>(VCSchemaClaim.class, claims));
      this.claims = claims;
    }

    public CredentialSubject(
        @Parameterized(type = VCSchemaClaim.class) DynamicArray<VCSchemaClaim> claims) {
      super(claims);
      this.claims = claims.getValue();
    }
  }

  public static class VcSchema extends DynamicStruct {
    public String id;

    public String schema;

    public String title;

    public String description;

    public MetaData metadata;

    public CredentialSubject credentialSubject;

    public VcSchema(String id, String schema, String title, String description,
                    MetaData metadata, CredentialSubject credentialSubject) {
      super(new org.web3j.abi.datatypes.Utf8String(id),
          new org.web3j.abi.datatypes.Utf8String(schema),
          new org.web3j.abi.datatypes.Utf8String(title),
          new org.web3j.abi.datatypes.Utf8String(description),
          metadata,
          credentialSubject);
      this.id = id;
      this.schema = schema;
      this.title = title;
      this.description = description;
      this.metadata = metadata;
      this.credentialSubject = credentialSubject;
    }

    public VcSchema(Utf8String id, Utf8String schema, Utf8String title, Utf8String description,
                    MetaData metadata, CredentialSubject credentialSubject) {
      super(id, schema, title, description, metadata, credentialSubject);
      this.id = id.getValue();
      this.schema = schema.getValue();
      this.title = title.getValue();
      this.description = description.getValue();
      this.metadata = metadata;
      this.credentialSubject = credentialSubject;
    }
  }

  public static class DIDCreatedEventResponse extends BaseEventResponse {
    public String did;

    public String controller;
  }

  public static class DIDDeactivatedEventResponse extends BaseEventResponse {
    public String did;

    public String controller;
  }

  public static class DIDUpdatedEventResponse extends BaseEventResponse {
    public String did;

    public String controller;
  }

  public static class InitializedEventResponse extends BaseEventResponse {
    public BigInteger version;
  }

  public static class OwnershipTransferredEventResponse extends BaseEventResponse {
    public String previousOwner;

    public String newOwner;
  }

  public static class SetupEventResponse extends BaseEventResponse {
  }

  public static class UpgradedEventResponse extends BaseEventResponse {
    public String implementation;
  }

  public static class VCIssuedEventResponse extends BaseEventResponse {
    public String vcId;

    public String issuer;

    public String did;
  }

  public static class VCSchemaCreatedEventResponse extends BaseEventResponse {
    public String schemaId;

    public String issuer;
  }

  public static class VCStatusEventResponse extends BaseEventResponse {
    public String vcId;

    public String player;

    public String status;
  }
}
