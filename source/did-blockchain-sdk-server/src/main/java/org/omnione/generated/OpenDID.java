package org.omnione.generated;

import io.reactivex.Flowable;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.stream.Collectors;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.DynamicStruct;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Bytes32;
import org.web3j.abi.datatypes.generated.Uint64;
import org.web3j.abi.datatypes.generated.Uint8;
import org.web3j.abi.datatypes.reflection.Parameterized;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line
 * tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the
 * <a href="https://github.com/hyperledger-web3j/web3j/tree/main/codegen">codegen module</a> to
 * update.
 *
 * <p>Generated with web3j version 1.6.3.
 */
@SuppressWarnings("rawtypes")
public class OpenDID extends Contract {
  public static final String BINARY =
      "60a0806040523460295730608052615ce1908161002f823960805181818161112a01526113100152f35b600080fdfe61024080604052600436101561001457600080fd5b600090813560e01c90816301ffc9a714612366575080630803fac01461233057806315a9802a14611eed57806320a6ab5514611df35780632361f6af14611b70578063248a9ca314611b3a5780632f2ff15d14611af9578063342b5ed814611ab957806336568abe14611a745780633764831c1461184457806339a75ce714611804578063437c6c241461172e57806347bf65bc146114e05780634f1ef286146112c05780635213be261461117f57806352d1902d1461111757806362ee4a56146110ad578063671a8ebe1461103757806368fcbbbb14610f485780636b59d95014610c71578063804225b61461091157806391d14854146108c6578063a217fddf146108aa578063a5dba8d11461068d578063ac92f71814610540578063ad3cb1cc146104f5578063b65ef606146104b5578063d547741f1461046b5763f8c8765e1461016157600080fd5b346104685760803660031901126104685761017a6124ac565b610182612496565b906044356001600160a01b03811690819003610466576064356001600160a01b038116919082900361046257600080516020615c8c833981519152549360ff8560401c1615946001600160401b0381168015908161045a575b6001149081610450575b159081610447575b506104385767ffffffffffffffff198116600117600080516020615c8c833981519152558561040b575b50610221336158f2565b50600080516020615c8c833981519152549360ff8560401c16156103fc576001600160a01b03169081156103b7576001600160a01b031690811561037257821561032d576001600160601b0360a01b60015416176001556001600160601b0360a01b60025416176002556001600160601b0360a01b60035416176003556001600160601b0360a01b6004541617600455604051917f587930504fa5b1062f394d90f9dac9ecadd354ed23a97af9ea4e44dff4870a848480a16102e1578280f35b68ff00000000000000001916600080516020615c8c83398151915255600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a138808280f35b60405162461bcd60e51b815260206004820152601a60248201527f496e76616c6964205a4b5053746f7261676520616464726573730000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601d60248201527f496e76616c69642056634d65746153746f7261676520616464726573730000006044820152606490fd5b60405162461bcd60e51b815260206004820152601f60248201527f496e76616c696420446f63756d656e7453746f726167652061646472657373006044820152606490fd5b631afcd79f60e31b8752600487fd5b68ffffffffffffffffff19166801000000000000000117600080516020615c8c8339815191525538610217565b63f92ee8a960e01b8752600487fd5b905015386101ed565b303b1591506101e5565b8791506101db565b8480fd5b835b80fd5b5034610468576040366003190112610468576104b160043561048b612496565b906104ac6104a782600052600060205260016040600020015490565b6158b7565b615a51565b5080f35b5034610468576020366003190112610468576104cf6124ac565b6104d7615845565b60018060a01b03166001600160601b0360a01b600354161760035580f35b503461046857806003193601126104685761053c60408051906105188183612665565b60058252640352e302e360dc1b6020830152519182916020835260208301906124e5565b0390f35b5034610468576020366003190112610468576004356001600160401b038111610689576105719036906004016123f7565b6060608060405161058181612590565b82815285602082015282604082015282808201520152801561062f57600154604051630fe3478b60e31b81526020600482015292849284926001600160a01b031691839182916105d5916024840191612a02565b03915afa908115610624578261053c9392610601575b505060405191829160208352602083019061294a565b61061d92503d8091833e6106158183612665565b810190612b55565b38806105eb565b6040513d84823e3d90fd5b60405162461bcd60e51b815260206004820152602c60248201527f446f63756d656e7453746f726167653a20446f63756d656e742049442063616e60448201526b6e6f7420626520656d70747960a01b6064820152608490fd5b5080fd5b5034610468576020366003190112610468576004356001600160401b038111610689576106c16106c79136906004016123f7565b9061536e565b604051906020825260a061074a61073561071f6107096106f3865160c060208a015260e08901906124e5565b6020870151888203601f190160408a01526124e5565b6040860151878203601f190160608901526124e5565b6060850151868203601f190160808801526124e5565b6080840151858203601f190184870152612563565b910151601f198383030160c08401526020820190519160208152825180925260408101602060408460051b84010194019580925b84841061078b5786860387f35b9091929394603f198282030184528751604082019080519160408452825180915260608401602060608360051b870101940191875b81811061082b575050505061081a6001936020938480940151918481830391015260406108096107f984516060855260608501906124e5565b86850151848203888601526124e5565b9201519060408184039101526124e5565b99019401940192969493919061077e565b9091929460208061089e600193605f198b8203018852895190608061088d61086f61085f855160a0865260a08601906124e5565b87860151858203898701526124e5565b604085015115156040850152606085015184820360608601526124e5565b9201519060808184039101526124e5565b970194019291016107c0565b5034610468578060031936011261046857602090604051908152f35b50346104685760403660031901126104685760406108e2612496565b91600435815280602052209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b50346104685761092036612424565b6001546040516353ec871160e01b815293969593946001600160a01b03909116929088868061095586868a8d60048601615347565b0381875afa899681610c2a575b50610a145761096f612c26565b6308c379a0146109dd575b60405162461bcd60e51b815260206004820152603060248201527f556e6b6e6f776e206572726f72206f6363757272656420647572696e6720646f60448201526f18dd5b595b9d081c995d1c9a595d985b60821b606482015280608481015b0390fd5b6109e5612c44565b806109f0575061097a565b60405162461bcd60e51b8152602060048201529081906109d99060248301906124e5565b8415610bd0578715610b72578897604051602081019082848337610a4c6020828d86820190838201520301601f198101835282612665565b5190206040516020810190681050d512559055115160ba1b825260098152610a75602982612665565b51902003610b0c5750508660c08601525b823b15610b08578694610ae48692610ac094610ad26040519a8b998a98899763270766fb60e11b8952606060048a015260648901906126f8565b87810360031901602489015291612a02565b84810360031901604486015291612a02565b03925af1801561062457610af757505080f35b81610b0191612665565b6104685780f35b8680fd5b610b33602060405183819483830196873781018c838201520301601f198101835282612665565b51902060405160208101906a11115050d512559055115160aa1b8252600b8152610b5e602b82612665565b51902003610a8657600160c0860152610a86565b60405162461bcd60e51b815260206004820152603060248201527f446f63756d656e7453746f726167653a20446f63756d656e742073746174757360448201526f2063616e6e6f7420626520656d70747960801b6064820152608490fd5b60405162461bcd60e51b815260206004820152602c60248201527f446f63756d656e7453746f726167653a20446f63756d656e742069642063616e60448201526b6e6f7420626520656d70747960a01b6064820152608490fd5b9096503d808b833e610c3c8183612665565b8101602082820312610c6d5781516001600160401b038111610c6957610c629201613a85565b9538610962565b8b80fd5b8a80fd5b50346104685780610c81366123bf565b6003546001600160a01b0316803b15610f445760405163af76274960e01b8152602060048201529183918391610d31610d12610cf3610cd4610cc385806129d1565b60c060248a015260e4890191612a02565b610ce160208601866129d1565b8883036023190160448a015290612a02565b610d0060408501856129d1565b87830360231901606489015290612a02565b610d1f6060840184612a72565b86830360231901608488015290613ff1565b90610d3f6080820182612a72565b6023198685030160a4870152808452602084019360208260051b820101948389925b848410610da65750505050505083610d958193610d838460a08a9601906129d1565b8483036023190160c486015290612a02565b03925af1801561062457610af75750f35b9295979950929590939750601f198282030184528a610dc58985612a23565b610dee610de3610dd58380612a23565b604086526040860190612a37565b916020810190612a72565b90936020818403910152808252602082019160208260051b820101948094905b838210610e36575050505050506020806001929901940194019093899795928b999795610d61565b9091929394959c9f9e9d9c601f19848203018652607e198236030187351215610f40578f8288350191610ec4610eb9610e9e610e83610e7587806129d1565b608087526080870191612a02565b610e9060208801886129d1565b908683036020880152612a02565b610eab60408701876129d1565b908583036040870152612a02565b936060810190612a72565b916060818603910152818452602084019160208160051b860101948294925b828410610f0b575050505050509e9f9c9d9e6020806001929801960192019093929193610e0e565b909192939495602080610f32600193601f19878203018a52610f2d8b87612a23565b612a37565b980196019401929190610ee3565b8f80fd5b5050fd5b5034610468576040366003190112610468576004356001600160401b03811161068957610f799036906004016123f7565b906024356001600160401b03811161046657610f999036906004016123f7565b6002549093919085906001600160a01b0316803b156106895760405163301150f760e21b81529082908290818381610fd78c8a8c8e60048601615347565b03925af1801561062457611022575b50507ff958d2c8ca179cb3614546dff74d0aa57c6d18424cf2b171c9a3f6c5e18681079361101c91604051948594339186613743565b0390a180f35b8161102c91612665565b610462578438610fe6565b503461046857604036600319011261046857600435906001600160401b038211610468576101c0600319833603011261046857602435906001600160401b0382116104685761053c6110998461109036600487016123f7565b916004016140ea565b6040519182916020835260208301906124e5565b503461046857602036600319011261046857600435906001600160401b038211610468576110e76110e136600485016123f7565b90613e9b565b60405180916020825261053c602061110a835160408387015260608601906126f8565b920151604084019061293d565b50346104685780600319360112610468577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003611170576020604051600080516020615c6c8339815191528152f35b63703e46dd60e11b8152600490fd5b503461046857602036600319011261046857600435906001600160401b0382116104685761053c6111bc6111b636600486016123f7565b90613794565b604051918291602083526101206112ab61129561127e61126861125261123c6112266112106111fa8c6101608c5191610140602082015201906124e5565b60208b01518d8203601f190160408f0152612563565b60408a01518c8203601f190160608e01526124e5565b60608901518b8203601f190160808d0152612563565b60808801518a8203601f190160a08c01526124e5565b60a0870151898203601f190160c08b01526124e5565b60c0860151888203601f190160e08a01526124e5565b60e0850151878203601f19016101008901526124e5565b610100840151868203601f1901848801526124e5565b910151838203601f19016101408501526124e5565b506040366003190112610468576112d56124ac565b906024356001600160401b0381116106895736602382011215610689576113069036906024816004013591016126a1565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163081149081156114bd575b506114ae57611348615845565b6040516352d1902d60e01b8152926001600160a01b0381169190602085600481865afa8095859661147a575b5061138d57634c9c8ce360e01b84526004839052602484fd5b909184600080516020615c6c83398151915281036114685750813b1561145657600080516020615c6c83398151915280546001600160a01b031916821790557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8480a2815183901561143c57808360206104b195519101845af43d15611434573d9161141883612686565b926114266040519485612665565b83523d85602085013e615c0a565b606091615c0a565b505050346114475780f35b63b398979f60e01b8152600490fd5b634c9c8ce360e01b8452600452602483fd5b632a87526960e21b8552600452602484fd5b9095506020813d6020116114a6575b8161149660209383612665565b8101031261046257519438611374565b3d9150611489565b63703e46dd60e11b8252600482fd5b600080516020615c6c833981519152546001600160a01b0316141590503861133b565b5034610468576020366003190112610468576004356001600160401b038111610689578060040181360391610140600319840112610466576002546001600160a01b031691823b1561046257604051631214df6960e31b8152602060048201528590818161154e85806129d1565b60248301610140905261016483019061156692612a02565b9681838160248a019a6115798c8b612a23565b82820360231901604484015261158f9190612a37565b61159c60448c018b6129d1565b8383036023190160648501526115b29291612a02565b6115bf60648c018b612a23565b8282036023190160848401526115d59190612a37565b6115e260848c018b6129d1565b8383036023190160a48501526115f89291612a02565b61160560a48c018b6129d1565b8383036023190160c485015261161b9291612a02565b61162860c48c018b6129d1565b8383036023190160e485015261163e9291612a02565b61164b60e48c018b6129d1565b838303602319016101048501526116629291612a02565b6116706101048c018b6129d1565b838303602319016101248501526116879291612a02565b6116956101248c018b6129d1565b838303602319016101448501526116ac9291612a02565b03925af1801561062457611719575b5050806116c79161299f565b9190923593604219018412156104625761170a60047f711312583a392d65179bf949665a44f0e2c18f41e42330eae5d9103df6b7918d9561101c9301018061299f565b90604051948594339186613743565b8161172391612665565b6104625784386116bb565b503461046857602036600319011261046857600435906001600160401b0382116104685761053c61176b61176536600486016123f7565b90613530565b6040519182916020835260a06117f06117db6117c56117af611799865160c060208b015260e08a01906124e5565b6020870151898203601f190160408b01526124e5565b6040860151888203601f190160608a01526124e5565b6060850151878203601f190160808901526124e5565b6080840151868203601f1901848801526124e5565b910151838203601f190160c08501526124e5565b50346104685760203660031901126104685761181e6124ac565b611826615845565b60018060a01b03166001600160601b0360a01b600154161760015580f35b5034610468576020366003190112610468576004356001600160401b0381116106895761187861187e9136906004016123f7565b90612ddb565b604051918291602083526118e96118d36118bd6118a7845160c0602089015260e08801906124e5565b6020850151878203601f190160408901526124e5565b6040840151868203601f190160608801526124e5565b6060830151858203601f1901608087015261250a565b91608082015192601f198582030160a0860152835190818152602081016020808460051b84010196019380925b84841061193957888061053c8a60a08b0151601f198483030160c08501526124e5565b919395969092949750601f19828203018452875160206119628251604085526040850190612563565b910151916020818303910152815180825260208201906020808260051b850101940192865b8281106119ac5750505050506020806001929901940194019188979695939491611916565b9091929394601f9d9c9d19838203018552855160606119fe6119ec6119da84516080875260808701906124e5565b602085015186820360208801526124e5565b604084015185820360408701526124e5565b91015191606081830391015281519081815260208101906020808460051b8301019401928b915b818310611a495750505050506020809d9e9d60019297019501910192919092611987565b9091929394602080611a67600193601f198682030189528951612563565b9701950193019190611a25565b503461046857604036600319011261046857611a8e612496565b336001600160a01b03821603611aaa576104b190600435615a51565b63334bd91960e11b8252600482fd5b503461046857602036600319011261046857611ad36124ac565b611adb615845565b60018060a01b03166001600160601b0360a01b600254161760025580f35b5034610468576040366003190112610468576104b1600435611b19612496565b90611b356104a782600052600060205260016040600020015490565b6159c6565b5034610468576020366003190112610468576020611b68600435600052600060205260016040600020015490565b604051908152f35b503461046857611b7f36612424565b600154604051630fe3478b60e31b81526020600482015293969593946001600160a01b039091169290888680611bb960248201898c612a02565b0381875afa899681611dd7575b50611bd35761096f612c26565b8897604051602081019082848337611bff6020828d86820190838201520301601f198101835282612665565b5190206040516020810190681050d512559055115160ba1b825260098152611c28602982612665565b51902003611c8257505050508460208401525b803b1561046257611c70858094610ae460405197889687958694633d5758e160e01b865260406004870152604486019061294a565b84810360031901602486015291612a02565b604051602081019082848337611cac6020828d86820190838201520301601f198101835282612665565b51902060405160208101906a11115050d512559055115160aa1b8252600b8152611cd7602b82612665565b51902003611cef575050505060016020840152611c3b565b604051602081019082848337611d196020828d86820190838201520301601f198101835282612665565b51902060405160208101906614915593d2d15160ca1b825260078152611d40602782612665565b51902003611d58575050505060026020840152611c3b565b611d7f602060405183819483830196873781018c838201520301601f198101835282612665565b5190206040516020810190691511549352539055115160b21b8252600a8152611da9602a82612665565b51902014611db9575b5050611c3b565b611dcb916003602087015236916126a1565b60808401523880611db2565b611dec9197503d808c833e6106158183612665565b9538611bc6565b50346104685780611e03366123bf565b6003546001600160a01b0316803b15610f445760405163037f39e160e51b8152602060048201529183918391829084908290610d9590610d83611ee2611ec3611ea4611e85611e66611e5587806129d1565b60c060248c015260e48b0191612a02565b611e7360208801886129d1565b8a83036023190160448c015290612a02565b611e9260408701876129d1565b8983036023190160648b015290612a02565b611eb160608601866129d1565b8883036023190160848a015290612a02565b611ed060808501856129d1565b8783036023190160a489015290612a02565b9160a08101906129d1565b503461046857611efc366123bf565b611f06818061299f565b9050156122eb5760208101611f1b818361299f565b9050156122a6576040820190611f31828461299f565b905015612261576002546001600160a01b031690813b1561046257611fc4611fa5611f8894610d00611f9e611fe295611e73611f978b602460c06040519d8e93636f13867560e01b855260206004860152806129d1565b929093015260e48d0191612a02565b918b6129d1565b91886129d1565b611fb260608701876129d1565b86830360231901608488015290612a02565b611fd16080860186612a23565b8482036023190160a4860152612a37565b60a0840135601e198536030181121561225d57918391858794016023198483030160c4850152612016602083019180612a72565b8091926020855252604083019260408260051b820101938388925b8484106120d1575050505050508383809203925af180156120c65761208e575b5061207d817fb80b7feb5ab77629f88e8592b0889291da376e92b36781b4bf60a256c2af59929261299f565b61101c604051928392339184612adb565b826120be7fb80b7feb5ab77629f88e8592b0889291da376e92b36781b4bf60a256c2af5992939461207d93612665565b929150612051565b6040513d85823e3d90fd5b92959194975092959750603f198282030184526120ee8784612a23565b60408201908c6120fe8280612a72565b8091946040875252606085019060608160051b8701019480935b8281106121aa57505050505061219660019360209361213b848680960190612ac7565b918481830391015261218861217d61216461215685806129d1565b606086526060860191612a02565b612170878601866129d1565b9085830389870152612a02565b9260408101906129d1565b916040818503910152612a02565b98019401940190938a979592899795612031565b9091929395602080612250600193605f198c82030189526121cb8b88612ab3565b906122426122376122096121f06121e286806129d1565b60a0875260a0870191612a02565b6121fc888701876129d1565b908683038a880152612a02565b61221560408601612aa6565b1515604085015261222960608601866129d1565b908583036060870152612a02565b9260808101906129d1565b916080818503910152612a02565b9801950193929101612118565b8580fd5b60405162461bcd60e51b815260206004820152601c60248201527f536368656d61207469746c652063616e6e6f7420626520656d707479000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601a60248201527f536368656d612055524c2063616e6e6f7420626520656d7074790000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601960248201527f536368656d612049442063616e6e6f7420626520656d707479000000000000006044820152606490fd5b503461046857806003193601126104685760206001600160401b03600080516020615c8c83398151915254161515604051908152f35b9050346106895760203660031901126106895760043563ffffffff60e01b81168091036123bb5760209250637965db0b60e01b81149081156123aa575b5015158152f35b6301ffc9a760e01b149050386123a3565b8280fd5b60206003198201126123f257600435906001600160401b0382116123f25760c09082900360031901126123f25760040190565b600080fd5b9181601f840112156123f2578235916001600160401b0383116123f257602083818601950101116123f257565b60606003198201126123f2576004356001600160401b0381116123f2578161244e916004016123f7565b929092916024356001600160401b0381116123f25781612470916004016123f7565b92909291604435906001600160401b0382116123f257612492916004016123f7565b9091565b602435906001600160a01b03821682036123f257565b600435906001600160a01b03821682036123f257565b60005b8381106124d55750506000910152565b81810151838201526020016124c5565b906020916124fe815180928185528580860191016124c2565b601f01601f1916010190565b9080602083519182815201916020808360051b8301019401926000915b83831061253657505050505090565b9091929394602080612554600193601f1986820301875289516124e5565b97019301930191939290612527565b61258d91602061257c83516040845260408401906124e5565b9201519060208184039101526124e5565b90565b60a081019081106001600160401b038211176125ab57604052565b634e487b7160e01b600052604160045260246000fd5b60c081019081106001600160401b038211176125ab57604052565b604081019081106001600160401b038211176125ab57604052565b61014081019081106001600160401b038211176125ab57604052565b6101c081019081106001600160401b038211176125ab57604052565b606081019081106001600160401b038211176125ab57604052565b602081019081106001600160401b038211176125ab57604052565b90601f801991011681019081106001600160401b038211176125ab57604052565b6001600160401b0381116125ab57601f01601f191660200190565b9291926126ad82612686565b916126bb6040519384612665565b8294818452818301116123f2578281602093846000960137010152565b600311156126e257565b634e487b7160e01b600052602160045260246000fd5b61277661276461275261274061272e61271c86516101c089526101c089019061250a565b602087015188820360208a01526124e5565b604086015187820360408901526124e5565b606085015186820360608801526124e5565b608084015185820360808701526124e5565b60a083015184820360a08601526124e5565b60c0820151151560c084015260e08201519083810360e0850152815180825260208201916020808360051b8301019401926000915b8383106128b757505050505061282e61281a6128066127f26127de6101a0956101008801518982036101008b015261250a565b6101208701518882036101208a015261250a565b61014086015187820361014089015261250a565b61016085015186820361016088015261250a565b61018084015185820361018087015261250a565b910151916101a0818303910152815180825260208201916020808360051b8301019401926000915b83831061286557505050505090565b90919293946020806128a8600193601f1986820301875289519060406128976107f984516060855260608501906124e5565b92015190604081840391015261250a565b97019301930191939290612856565b9091929394602080600192601f1985820301865288519060808061291f61290d6128ea865160a0875260a08701906124e5565b878701516128f7816126d8565b88870152604087015186820360408801526124e5565b606086015185820360608701526124e5565b9301519161292c836126d8565b0152970193019301919392906127ab565b9060048210156126e25752565b61258d91608061088d61298d612969855160a0865260a08601906124e5565b61297b6020870151602087019061293d565b604086015185820360408701526124e5565b606085015184820360608601526124e5565b903590601e19813603018212156123f257018035906001600160401b0382116123f2576020019181360383136123f257565b9035601e19823603018112156123f25701602081359101916001600160401b0382116123f25781360383136123f257565b908060209392818452848401376000828201840152601f01601f1916010190565b9035603e19823603018112156123f2570190565b61258d91612a64612a59612a4b84806129d1565b604085526040850191612a02565b9260208101906129d1565b916020818503910152612a02565b9035601e19823603018112156123f25701602081359101916001600160401b0382116123f2578160051b360383136123f257565b359081151582036123f257565b9035609e19823603018112156123f2570190565b9035605e19823603018112156123f2570190565b91602091612af491959495604085526040850191612a02565b6001600160a01b03909416910152565b90929192612b1181612686565b91612b1f6040519384612665565b8294828452828201116123f2576020612b399301906124c2565b565b9080601f830112156123f257815161258d92602001612b04565b6020818303126123f2578051906001600160401b0382116123f2570160a0818303126123f25760405191612b8883612590565b81516001600160401b0381116123f25781612ba4918401612b3b565b8352602082015160048110156123f257602084015260408201516001600160401b0381116123f25781612bd8918401612b3b565b604084015260608201516001600160401b0381116123f25781612bfc918401612b3b565b606084015260808201516001600160401b0381116123f257612c1e9201612b3b565b608082015290565b60009060033d11612c3357565b905060046000803e60005160e01c90565b600060443d1061258d576040513d600319016004823e8051913d60248401116001600160401b03841117612cb157828201928351916001600160401b038311612ca9573d84016003190185840160200111612ca9575061258d92910160200190612665565b949350505050565b92915050565b60405190612cc4826125c1565b606060a08382815282602082015282604082015282808201528260808201520152565b6001600160401b0381116125ab5760051b60200190565b9080601f830112156123f2578151612d1581612ce7565b92612d236040519485612665565b81845260208085019260051b820101918383116123f25760208201905b838210612d4f57505050505090565b81516001600160401b0381116123f257602091612d7187848094880101612b3b565b815201910190612d40565b91906040838203126123f25760405190612d95826125dc565b819380516001600160401b0381116123f25782612db3918301612b3b565b83526020810151916001600160401b0383116123f257602092612dd69201612b3b565b910152565b600091612de6612cb7565b5060018060a01b0360035416906040516102205263f1a03f1b60e01b610220515260206004610220510152612e2b610220519361022051926024610220510191612a02565b039061022051905afa80600091612ecb575b61258d57612e49612c26565b6308c379a014612eb8575b60405162461bcd60e51b815260206004820152603660248201527f556e6b6e6f776e206572726f72206f6363757272656420647572696e67205a4b604482015275140818dc9959195b9d1a585b081c995d1c9a595d985b60521b6064820152608490fd5b612ec0612c44565b806109f05750612e54565b903d610200526102005181610220513e612eeb6102005161022051612665565b60206102205161020051610220510103126104685761022051516101e0526001600160401b036101e051116104685760c06101e051610220510161020051610220510103126104685760405190612f41826125c1565b6101e0516102205101516001600160401b03811161068957612f7690610200516102205101906101e051610220510101612b3b565b825260206101e051610220510101516001600160401b03811161068957612fb090610200516102205101906101e051610220510101612b3b565b602083015260406101e051610220510101516001600160401b03811161068957612fed90610200516102205101906101e051610220510101612b3b565b604083015260606101e051610220510101516001600160401b0381116106895761302a90610200516102205101906101e051610220510101612cfe565b606083015260806101e05161022051010151610160526001600160401b03610160511161046857610200516102205101601f610160516101e05161022051010101121561046857610160516101e051610220510101516101a0526130a36130936101a051612ce7565b6040516101c0526101c051612665565b6101c051610140526101a0516101c0515260206101c051016101405261020051610220510160206101a05160051b610160516101e051610220510101010111610468576020610160516101e05161022051010101610180525b60206101a05160051b610160516101e0516102205101010101610180511061316c576101c051608083015260a06101e05161022051010151906001600160401b038211610468575061316190610200516102205101906101e051610220510101612b3b565b60a082015290612e3d565b61018051516001600160401b03811161068957610160516101e0516102205101010160a0526040601f1960a05161020051610220510103011261046857604051610120526131bc610120516125dc565b602060a05101516001600160401b038111610689576131eb9060206102005161022051019160a0510101612d7c565b6101205152604060a05101516080526001600160401b036080511161046857610200516102205101601f602060805160a051010101121561046857602060805160a05101015160e05261325261324260e051612ce7565b6040516101005261010051612665565b610100515060e051610100515260206101005101610200516102205101602060e05160051b8160805160a05101010101116106895760805160a0510160400160c0525b602060e05160051b8160805160a0510101010160c051106132e15750610100516020610120510152610120516101405152602061014051016101405260206101805101610180526130fc565b60c051516001600160401b0381116123bb576080601f19826020835160a0510101016102005161022051010301126123bb5760405190608082018281106001600160401b0382111761351c57604090815260805160a05101820101516001600160401b0381116104625761336d90602061020051610220510191848260805160a0510101010101612b3b565b825260805160a051018101606001516001600160401b038111610462576133ac90602061020051610220510191848260805160a0510101010101612b3b565b60208301526080805160a05101820101516001600160401b038111610462576133ed90602061020051610220510191848260805160a0510101010101612b3b565b60408301526080816020825160a0510101010151906001600160401b03821161046257610200516102205101601f602084848260805160a05101010101010112156104625760805160a05101810182016040015161344a81612ce7565b926134586040519485612665565b818452602084019061020051610220510160208460051b8184888260805160a05101010101010101116135185760805160a0510184018101606001915b60805160a0516060910186018301600586901b010183106134d057505050505090602092916060820152815201602060c0510160c052613295565b82516001600160401b038111613514576020916135098392836102005161022051019181888c8260805160a05101010101010101612d7c565b815201920191613495565b8980fd5b8780fd5b634e487b7160e01b85526041600452602485fd5b6000906135759261353f612cb7565b5060035460405163533b3a9560e01b8152602060048201529485936001600160a01b039092169284928392916024840191612a02565b03915afa8091600091613624575b509061258d57613591612c26565b6308c379a014613611575b60405162461bcd60e51b815260206004820152604160248201527f556e6b6e6f776e206572726f72206f6363757272656420647572696e67205a4b60448201527f502063726564656e7469616c20646566696e6974696f6e2072657472696576616064820152601b60fa1b608482015260a490fd5b613619612c44565b806109f0575061359c565b3d8083833e6136338183612665565b8101906020818303126123bb578051906001600160401b03821161046657019160c083830312610468576040519261366a846125c1565b80516001600160401b0381116123bb5783613686918301612b3b565b845260208101516001600160401b0381116123bb57836136a7918301612b3b565b602085015260408101516001600160401b0381116123bb57836136cb918301612b3b565b604085015260608101516001600160401b0381116123bb57836136ef918301612b3b565b606085015260808101516001600160401b0381116123bb5783613713918301612b3b565b608085015260a0810151916001600160401b0383116104685750613738929101612b3b565b60a082015238613583565b9061375d9061258d96949593606084526060840191612a02565b6001600160a01b039094166020820152808403604090910152612a02565b60405190613788826125dc565b60606020838281520152565b600090613829926040516137a7816125f7565b606081526137b361377b565b6020820152606060408201526137c761377b565b606082015260606080820152606060a0820152606060c0820152606060e0820152606061010082015260606101208201525060018060a01b036002541690604051809581948293633ab74f4360e21b8452602060048501526024840191612a02565b03915afa80916000916138c4575b509061258d57613845612c26565b6308c379a0146138b1575b60405162461bcd60e51b815260206004820152603360248201527f556e6b6e6f776e206572726f72206f6363757272656420647572696e67205643604482015272081b595d1859185d18481c995d1c9a595d985b606a1b6064820152608490fd5b6138b9612c44565b806109f05750613850565b3d8083833e6138d38183612665565b8101906020818303126123bb578051906001600160401b03821161046657019161014083830312610468576040519261390b846125f7565b80516001600160401b0381116123bb5783613927918301612b3b565b845260208101516001600160401b0381116123bb5783613948918301612d7c565b602085015260408101516001600160401b0381116123bb578361396c918301612b3b565b604085015260608101516001600160401b0381116123bb5783613990918301612d7c565b606085015260808101516001600160401b0381116123bb57836139b4918301612b3b565b608085015260a08101516001600160401b0381116123bb57836139d8918301612b3b565b60a085015260c08101516001600160401b0381116123bb57836139fc918301612b3b565b60c085015260e08101516001600160401b0381116123bb5783613a20918301612b3b565b60e08501526101008101516001600160401b0381116123bb5783613a45918301612b3b565b610100850152610120810151916001600160401b0383116104685750613a6c929101612b3b565b61012082015238613837565b519081151582036123f257565b91906101c0838203126123f257604051613a9e81612613565b809380516001600160401b0381116123f25783613abc918301612cfe565b825260208101516001600160401b0381116123f25783613add918301612b3b565b602083015260408101516001600160401b0381116123f25783613b01918301612b3b565b604083015260608101516001600160401b0381116123f25783613b25918301612b3b565b606083015260808101516001600160401b0381116123f25783613b49918301612b3b565b608083015260a08101516001600160401b0381116123f25783613b6d918301612b3b565b60a0830152613b7e60c08201613a78565b60c083015260e08101516001600160401b0381116123f257810183601f820112156123f257805190613baf82612ce7565b91613bbd6040519384612665565b80835260208084019160051b830101918683116123f25760208101915b838310613dc3575050505060e08301526101008101516001600160401b0381116123f25783613c0a918301612cfe565b6101008301526101208101516001600160401b0381116123f25783613c30918301612cfe565b6101208301526101408101516001600160401b0381116123f25783613c56918301612cfe565b6101408301526101608101516001600160401b0381116123f25783613c7c918301612cfe565b6101608301526101808101516001600160401b0381116123f25783613ca2918301612cfe565b6101808301526101a0810151906001600160401b0382116123f257019180601f840112156123f257825192613cd684612ce7565b93613ce46040519586612665565b80855260208086019160051b830101918383116123f25760208101915b838310613d145750505050506101a00152565b82516001600160401b0381116123f2578201906060828703601f1901126123f25760405190613d428261262f565b60208301516001600160401b0381116123f257876020613d6492860101612b3b565b825260408301516001600160401b0381116123f257876020613d8892860101612b3b565b60208301526060830151916001600160401b0383116123f257613db388602080969581960101612cfe565b6040820152815201920191613d01565b82516001600160401b0381116123f25782019060a0828a03601f1901126123f25760405191613df183612590565b60208101516001600160401b0381116123f2578a6020613e1392840101612b3b565b8352604081015160038110156123f257602084015260608101516001600160401b0381116123f2578a6020613e4a92840101612b3b565b60408401526080810151906001600160401b0382116123f257613e748b602060a094840101612b3b565b606085015201519060038210156123f2578260209392608085940152815201920191613bda565b600090613f5692604051613eae816125dc565b604051613eba81612613565b60608152606060208201526060604082015260608082015260606080820152606060a08201528460c0820152606060e08201526060610100820152606061012082015260606101408201526060610160820152606061018082015260606101a082015281528360208201525060018060a01b036001541690604051809581948293631f32da9960e21b8452602060048501526024840191612a02565b03915afa60009181613f70575b5061258d5761096f612c26565b90913d8082843e613f818184612665565b820191602081840312610689578051906001600160401b0382116123bb57016040818403126106895760405192613fb7846125dc565b81516001600160401b038111610466578291613fd69160209401613a85565b84520151906004821015610468575060208201529038613f63565b90602083828152019260208260051b82010193836000925b8484106140195750505050505090565b909192939495602080614041600193601f1986820301885261403b8b886129d1565b90612a02565b9801940194019294939190614009565b9080601f830112156123f25781602061258d933591016126a1565b9080601f830112156123f257813561408381612ce7565b926140916040519485612665565b81845260208085019260051b820101918383116123f25760208201905b8382106140bd57505050505090565b81356001600160401b0381116123f2576020916140df87848094880101614051565b8152019101906140ae565b60045490939260609290916001600160a01b031636869003601e190160e087013512156123f2576001600160401b0360e0870135870135116123f25760e08601358601803560051b36036020909101136123f25760e0860135860135156153315760e08601358601602081013590360360be19018112156123f2576141ac9161418460009260e08a01358a0101602060808201910161299f565b604051639eb0710560e01b815260206004820152948593928492839291602484019190612a02565b03915afa908115615325576000916152d4575b508051602090910120600154604080516310a2351160e11b815260048101919091526001600160a01b03928316939290911681886142bc61429d61427e61426061424161422261420f8780612a72565b6101c060448b01526102048a0191613ff1565b61422f60208801886129d1565b8983036043190160648b015290612a02565b61424e60408701876129d1565b8883036043190160848a015290612a02565b61426c8c8601866129d1565b8783036043190160a489015290612a02565b61428b60808501856129d1565b8683036043190160c488015290612a02565b6142aa60a08401846129d1565b8583036043190160e487015290612a02565b6142c860c08301612aa6565b15156101048401526142dd60e0830183612a72565b604319858403016101248601528083526020830160208260051b85010193836000915b848310615209575050505050506143826143618361434e6143426143a39561432f6101006143c4990185612a72565b8a8303604319016101448c015290613ff1565b91610120810190612a72565b8783036043190161016489015290613ff1565b61436f6101408e018e612a72565b8683036043190161018488015290613ff1565b6143906101608d018d612a72565b858303604319016101a487015290613ff1565b6143b16101808c018c612a72565b848303604319016101c486015290613ff1565b6143d26101a08b018b612a72565b604319848403016101e4850152808352602083019260208260051b82010193836000925b8d8585106151965750505050505050918160008160209533602483015203925af16000918161515a575b506144ac5761442d612c26565b6308c379a014614499575b60405162461bcd60e51b815260206004820152603360248201527f556e6b6e6f776e206572726f72206f6363757272656420647572696e6720646f60448201527231bab6b2b73a103932b3b4b9ba3930ba34b7b760691b6064820152608490fd5b6144a1612c44565b806109f05750614438565b1561511557614527927f44ca9609d2fe597457041d7e98533a969452ef425c10a46d0dd9f074497ea1ba6144e3602089018961299f565b6144f4604051928392339184612adb565b0390a161451f602060405183819483830196873781016000838201520301601f198101835282612665565b5190206159c6565b506101c0833603126123f2576040519261454084612613565b80356001600160401b0381116123f25761455d903690830161406c565b845260208101356001600160401b0381116123f25761457f9036908301614051565b602085015260408101356001600160401b0381116123f2576145a49036908301614051565b6040850152818101356001600160401b0381116123f2576145c89036908301614051565b8285015260808101356001600160401b0381116123f2576145ec9036908301614051565b608085015260a08101356001600160401b0381116123f2576146119036908301614051565b60a085015261462260c08201612aa6565b60c08501526001600160401b0360e0820135116123f25736601f60e083013583010112156123f25761465a60e0820135820135612ce7565b6146676040519182612665565b60e0820135820180358083526020808401923660059390931b0101116123f257602060e0840135840101905b60e08401358401803560051b01602001821061503657505060e08501526101008101356001600160401b0381116123f2576146d1903690830161406c565b6101008501526101208101356001600160401b0381116123f2576146f8903690830161406c565b6101208501526101408101356001600160401b0381116123f25761471f903690830161406c565b6101408501526101608101356001600160401b0381116123f257614746903690830161406c565b6101608501526101808101356001600160401b0381116123f25761476d903690830161406c565b6101808501526101a08101356001600160401b0381116123f25736601f8284010112156123f25780820135906147a282612ce7565b926147b06040519485612665565b82845260208401913660208560051b8385010101116123f257602081830101925b60208560051b83850101018410614f805750505050506101a08401526147f5615ad3565b926000935b60e082015180518610156149fc578561481291615af2565b51805161494860116018602085015161482a816126d8565b604086015195601e60808b83015192015191614845836126d8565b6027604051998a95602087019a663d9134b2111d1160c91b8c52614872815180926020878c0191016124c2565b8701906c11161135b2bcaa3cb832911d1160991b84830152614893816126d8565b60f81b60348201526f11161131b7b73a3937b63632b9111d1160811b60358201526148c88251809360206045850191016124c2565b01017f222c227075626c69634b65794d756c746962617365223a220000000000000000838201526149038251809360206036850191016124c2565b0101906d11161130baba342a3cb832911d1160911b84830152614925816126d8565b60f81b602682015261227d60f01b60278201520301600e19810185520183612665565b60e0840151516000198101939084116149e65760206149aa936149b9826149c8958c600199600091106000146149d05750614981615b06565b935b604051988761499b8b9951809287808d0191016124c2565b880191518093858401906124c2565b010191828151948592016124c2565b0103601f198101835282612665565b9401936147fa565b604051906149de8483612665565b815293614983565b634e487b7160e01b600052601160045260246000fd5b5092935090614a3a6001602060405186614a1f82985180928580860191016124c2565b8101605d60f81b838201520301601e19810186520184612665565b614a42615ad3565b936000945b6101a08401518051871015614b6c57614a6287602792615af2565b51614b2a600260118351936015614a8160406020840151930151615b25565b6040519788936020850198663d9134b2111d1160c91b8a52614aac815180926020868a0191016124c2565b85017411161139b2b93b34b1b2a2b7323837b4b73a111d1160591b83820152614adf825180936020603c850191016124c2565b010170222c227365727669636554797065223a5b60781b83820152614b0e8251809360206026850191016124c2565b0101615d7d60f01b838201520301601d19810185520183612665565b6101a0860151516000198101939084116149e65760206149aa936149b982614b64958d600199600091106000146149d05750614981615b06565b950194614a47565b5091909450614baa6001602060405185614b8f82975180928580860191016124c2565b8101605d60f81b838201520301601e19810185520183612665565b614bb48351615b25565b926020810151946040820151928201519060808301519060a08401519060c08501511515600090600014614f5a5750604051614bf1604082612665565b60048152637472756560e01b60208201525b610100860151614c1290615b25565b92610120870151614c2290615b25565b94610140880151614c3290615b25565b96610160890151614c4290615b25565b986101800151614c5190615b25565b996040519d8e9d8e6b7b22636f6e74657874223a5b60a01b602082015281519182602c83019160200191614c84926124c2565b01672e961134b2111d1160c11b602c82015281519182603483019160200191614cac926124c2565b01602c016f11161131b7b73a3937b63632b9111d1160811b600882015281519182601883019160200191614cdf926124c2565b016008016c11161131b932b0ba32b2111d1160991b601082015281519182601d83019160200191614d0f926124c2565b016010016c1116113ab83230ba32b2111d1160991b600d82015281519182601a83019160200191614d3f926124c2565b01600d016e1116113b32b939b4b7b724b2111d1160891b600d82015281519182601c83019160200191614d71926124c2565b01600d016f1116113232b0b1ba34bb30ba32b2111d60811b600f82015281519182601f83019160200191614da4926124c2565b01600f017516113b32b934b334b1b0ba34b7b726b2ba3437b2111d60511b601082015281519182602683019160200191614ddd926124c2565b01601001742c22617373657274696f6e734d6574686f64223a5b60581b601682015281519182602b83019160200191614e15926124c2565b01601601735d2c2261757468656e7469636174696f6e223a5b60601b601582015281519182602983019160200191614e4c926124c2565b01601501715d2c226b657941677265656d656e74223a5b60701b601482015281519182602683019160200191614e81926124c2565b01601401601281017f5d2c226361706162696c697479496e766f636174696f6e223a5b000000000000905281519182602c83019160200191614ec2926124c2565b01601201601a81017f5d2c226361706162696c69747944656c65676174696f6e223a5b000000000000905281519182603483019160200191614f03926124c2565b01601a016c2e961139b2b93b34b1b2b9911d60991b601a82015281519182602783019160200191614f33926124c2565b01601a01600d8101607d60f81b905203600d01601e198101825260010161258d9082612665565b50604051614f69604082612665565b600581526466616c736560d81b6020820152614c03565b83356001600160401b0381116123f257828401019087601f1983360301126123f25760405191614faf8361262f565b60208101356001600160401b0381116123f257614fd29060203691840101614051565b835260408101356001600160401b0381116123f257614ff79060203691840101614051565b602084015288810135916001600160401b0383116123f2576020936150248594938580953692010161406c565b604082015281520194019390506147d1565b81356001600160401b0381116123f25760e08501358501019060a0601f1983360301126123f2576040519161506a83612590565b60208101356001600160401b0381116123f25761508d9060203691840101614051565b8352604081013560038110156123f2576020840152868101356001600160401b0381116123f2576150c49060203691840101614051565b60408401526080810135906001600160401b0382116123f2576150ef60a09260203691840101614051565b8885015201359060038210156123f2578260209392608085940152815201910190614693565b60405162461bcd60e51b815260206004820152601c60248201527f446f63756d656e7420726567697374726174696f6e206661696c6564000000006044820152606490fd5b9091506020813d60201161518e575b8161517660209383612665565b810103126123f25761518790613a78565b9038614420565b3d9150615169565b8698506151f76020929496989183926151e96151de6121646151c66001999b9d8d601f198d88030190528c612ac7565b946151d186806129d1565b9091808752860191612a02565b926040810190612a72565b916040818503910152613ff1565b980194019401918896959394916143f6565b929591949750929550601f198282030185526152258784612ab3565b9061524161523383806129d1565b60a0845260a0840191612a02565b60208301359060038210156123f2578f61528461529e92846152646080966126d8565b602087015261527660408801886129d1565b908783036040890152612a02565b90615291818701876129d1565b9186840390870152612a02565b9201359060038210156123f257600192826080602094936152bf86956126d8565b01529801950193018e95928997959492614300565b903d8082843e6152e48184612665565b820191602081840312610689578051906001600160401b0382116123bb57019082601f830112156104685750805161531f9291602001612b04565b386141bf565b6040513d6000823e3d90fd5b634e487b7160e01b600052603260045260246000fd5b92906153609061258d9593604086526040860191612a02565b926020818503910152612a02565b6000906153ec92604051615381816125c1565b6060815260606020820152606060408201526060808201526153a161377b565b60808201526040516153b28161264a565b6060815260a08201525060018060a01b03600254169060405180958194829363a5dba8d160e01b8452602060048501526024840191612a02565b03915afa8091600091615485575b509061258d57615408612c26565b6308c379a014615472575b60405162461bcd60e51b815260206004820152603160248201527f556e6b6e6f776e206572726f72206f6363757272656420647572696e67205643604482015270081cd8da195b58481c995d1c9a595d985b607a1b6064820152608490fd5b61547a612c44565b806109f05750615413565b3d8083833e6154948183612665565b8101906020818303126123bb578051906001600160401b03821161046657019160c08383031261046857604051926154cb846125c1565b80516001600160401b0381116123bb57836154e7918301612b3b565b845260208101516001600160401b0381116123bb5783615508918301612b3b565b602085015260408101516001600160401b0381116123bb578361552c918301612b3b565b604085015260608101516001600160401b0381116123bb5783615550918301612b3b565b606085015260808101516001600160401b0381116123bb5783615574918301612d7c565b608085015260a0810151906001600160401b0382116123bb57019160208382031261068957604051926155a68461264a565b8051906001600160401b038211610466570181601f820112156123bb5780516155ce81612ce7565b936155dc6040519586612665565b81855260208086019260051b840101928484116106895760208101925b84841061561357505050505050815260a0820152386153fa565b83516001600160401b0381116104665782016040818803601f1901126104665760405190615640826125dc565b60208101516001600160401b03811161225d5760209082010188601f8201121561225d57805161566f81612ce7565b9161567d6040519384612665565b81835260208084019260051b820101908b82116158415760208101925b828410615755575050505082526040810151906001600160401b03821161225d5790602091010160608189031261046257604051906156d88261262f565b80516001600160401b038111610b0857896156f4918301612b3b565b825260208101516001600160401b038111610b085789615715918301612b3b565b60208301526040810151906001600160401b038211610b0857916157418a602096949387969401612b3b565b6040820152838201528152019301926155f9565b83516001600160401b038111610c6d57820160a0818f03601f190112610c6d576040519061578282612590565b60208101516001600160401b03811161583d578f60206157a492840101612b3b565b825260408101516001600160401b03811161583d578f60206157c892840101612b3b565b60208301526157d960608201613a78565b604083015260808101516001600160401b03811161583d578f602061580092840101612b3b565b606083015260a0810151906001600160401b03821161583d57918f61582d90602080969481960101612b3b565b608082015281520193019261569a565b8c80fd5b8880fd5b3360009081527f7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec602052604090205460ff161561587e57565b63e2517d3f60e01b600052336004527fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177560245260446000fd5b60008181526020818152604080832033845290915290205460ff16156158da5750565b63e2517d3f60e01b6000523360045260245260446000fd5b6001600160a01b03811660009081527f7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec602052604090205460ff166159c0576001600160a01b031660008181527f7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec60205260408120805460ff191660011790553391907fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b50600090565b6000818152602081815260408083206001600160a01b038616845290915290205460ff16615a4a576000818152602081815260408083206001600160a01b0395909516808452949091528120805460ff19166001179055339291907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b5050600090565b6000818152602081815260408083206001600160a01b038616845290915290205460ff1615615a4a576000818152602081815260408083206001600160a01b0395909516808452949091528120805460ff19169055339291907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9080a4600190565b60405190615ae2604083612665565b60018252605b60f81b6020830152565b80518210156153315760209160051b010190565b60405190615b15604083612665565b60018252600b60fa1b6020830152565b90602091604051615b368482612665565b60008152926000935b8251851015615c0457615b528584615af2565b5183516000198101929083116149e6576001615be69181946000908a10600014615bee575081615b80615b06565b876040519684615b99899651809285808a0191016124c2565b8501601160f91b83820152615bb782518093856021850191016124c2565b0101601160f91b83820152615bd5825180938b6002850191016124c2565b01010301601f198101835282612665565b940193615b3f565b6040518391615bfd8983612665565b8152615b80565b93505050565b90615c305750805115615c1f57805190602001fd5b63d6bda27560e01b60005260046000fd5b81511580615c62575b615c41575090565b639996b31560e01b60009081526001600160a01b0391909116600452602490fd5b50803b15615c3956fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbcf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a26469706673582212205ef24bb36409af31fcf9d00c4a1e47b861c157f3833d0102bed426be61b6b97764736f6c634300081b0033";
  public static final String FUNC_DEFAULT_ADMIN_ROLE = "DEFAULT_ADMIN_ROLE";
  public static final String FUNC_UPGRADE_INTERFACE_VERSION = "UPGRADE_INTERFACE_VERSION";
  public static final String FUNC_GETDIDDOC = "getDidDoc";
  public static final String FUNC_GETDIDDOCSTATUS = "getDidDocStatus";
  public static final String FUNC_GETROLEADMIN = "getRoleAdmin";
  public static final String FUNC_GETVCSCHEMA = "getVcSchema";
  public static final String FUNC_GETVCMETADATA = "getVcmetaData";
  public static final String FUNC_GETZKPCREDENTIAL = "getZKPCredential";
  public static final String FUNC_GETZKPCREDENTIALDEFINITION = "getZKPCredentialDefinition";
  public static final String FUNC_GRANTROLE = "grantRole";
  public static final String FUNC_HASINITIALIZED = "hasInitialized";
  public static final String FUNC_HASROLE = "hasRole";
  public static final String FUNC_INITIALIZE = "initialize";
  public static final String FUNC_PROXIABLEUUID = "proxiableUUID";
  public static final String FUNC_REGISTDIDDOC = "registDidDoc";
  public static final String FUNC_REGISTVCMETADATA = "registVcMetaData";
  public static final String FUNC_REGISTVCSCHEMA = "registVcSchema";
  public static final String FUNC_REGISTZKPCREDENTIAL = "registZKPCredential";
  public static final String FUNC_REGISTZKPCREDENTIALDEFINITION = "registZKPCredentialDefinition";
  public static final String FUNC_RENOUNCEROLE = "renounceRole";
  public static final String FUNC_REVOKEROLE = "revokeRole";
  public static final String FUNC_SETDOCUMENTSTORAGE = "setDocumentStorage";
  public static final String FUNC_SETVCMETASTORAGE = "setVcMetaStorage";
  public static final String FUNC_SETZKPSTORAGE = "setZKPStorage";
  public static final String FUNC_SUPPORTSINTERFACE = "supportsInterface";
  public static final String FUNC_UPDATEDIDDOCSTATUSINSERVICE = "updateDidDocStatusInService";
  public static final String FUNC_UPDATEDIDDOCSTATUSREVOCATION = "updateDidDocStatusRevocation";
  public static final String FUNC_UPDATEVCSTATS = "updateVcStats";
  public static final String FUNC_UPGRADETOANDCALL = "upgradeToAndCall";
  public static final Event DIDCREATED_EVENT = new Event(
      "DIDCreated",
      Arrays.<TypeReference<?>>asList(
          new TypeReference<Utf8String>() {
          },
          new TypeReference<Address>() {
          }
      )
  );
  public static final Event DIDDEACTIVATED_EVENT = new Event(
      "DIDDeactivated",
      Arrays.<TypeReference<?>>asList(
          new TypeReference<Utf8String>() {
          },
          new TypeReference<Address>() {
          }
      )
  );
  ;
  public static final Event DIDUPDATED_EVENT = new Event(
      "DIDUpdated",
      Arrays.<TypeReference<?>>asList(
          new TypeReference<Utf8String>() {
          },
          new TypeReference<Address>() {
          }
      )
  );
  ;
  public static final Event INITIALIZED_EVENT = new Event(
      "Initialized",
      Arrays.<TypeReference<?>>asList(new TypeReference<Uint64>() {
      })
  );
  ;
  public static final Event ROLEADMINCHANGED_EVENT = new Event(
      "RoleAdminChanged",
      Arrays.<TypeReference<?>>asList(
          new TypeReference<Bytes32>(true) {
          },
          new TypeReference<Bytes32>(true) {
          },
          new TypeReference<Bytes32>(true) {
          }
      )
  );
  ;
  public static final Event ROLEGRANTED_EVENT = new Event(
      "RoleGranted",
      Arrays.<TypeReference<?>>asList(
          new TypeReference<Bytes32>(true) {
          },
          new TypeReference<Address>(true) {
          },
          new TypeReference<Address>(true) {
          }
      )
  );
  ;
  public static final Event ROLEREVOKED_EVENT = new Event(
      "RoleRevoked",
      Arrays.<TypeReference<?>>asList(
          new TypeReference<Bytes32>(true) {
          },
          new TypeReference<Address>(true) {
          },
          new TypeReference<Address>(true) {
          }
      )
  );
  ;
  public static final Event SETUP_EVENT = new Event(
      "Setup",
      Arrays.<TypeReference<?>>asList()
  );
  ;
  public static final Event UPGRADED_EVENT = new Event(
      "Upgraded",
      Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {
      })
  );
  ;
  public static final Event VCISSUED_EVENT = new Event(
      "VCIssued",
      Arrays.<TypeReference<?>>asList(
          new TypeReference<Utf8String>() {
          },
          new TypeReference<Address>() {
          },
          new TypeReference<Utf8String>() {
          }
      )
  );
  ;
  public static final Event VCSCHEMACREATED_EVENT = new Event(
      "VCSchemaCreated",
      Arrays.<TypeReference<?>>asList(
          new TypeReference<Utf8String>() {
          },
          new TypeReference<Address>() {
          }
      )
  );
  ;
  public static final Event VCSTATUS_EVENT = new Event(
      "VCStatus",
      Arrays.<TypeReference<?>>asList(
          new TypeReference<Utf8String>() {
          },
          new TypeReference<Address>() {
          },
          new TypeReference<Utf8String>() {
          }
      )
  );
  ;
  private static String librariesLinkedBinary;
  ;

  @Deprecated
  protected OpenDID(String contractAddress, Web3j web3j, Credentials credentials,
                    BigInteger gasPrice, BigInteger gasLimit
  ) {
    super(
        BINARY,
        contractAddress,
        web3j,
        credentials,
        gasPrice,
        gasLimit
    );
  }

  protected OpenDID(String contractAddress, Web3j web3j, Credentials credentials,
                    ContractGasProvider contractGasProvider
  ) {
    super(
        BINARY,
        contractAddress,
        web3j,
        credentials,
        contractGasProvider
    );
  }

  @Deprecated
  protected OpenDID(String contractAddress, Web3j web3j, TransactionManager transactionManager,
                    BigInteger gasPrice, BigInteger gasLimit
  ) {
    super(
        BINARY,
        contractAddress,
        web3j,
        transactionManager,
        gasPrice,
        gasLimit
    );
  }

  protected OpenDID(String contractAddress, Web3j web3j, TransactionManager transactionManager,
                    ContractGasProvider contractGasProvider
  ) {
    super(
        BINARY,
        contractAddress,
        web3j,
        transactionManager,
        contractGasProvider
    );
  }

  public static List<DIDCreatedEventResponse> getDIDCreatedEvents(
      TransactionReceipt transactionReceipt
  ) {
    List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(
        DIDCREATED_EVENT,
        transactionReceipt
    );
    ArrayList<DIDCreatedEventResponse> responses =
        new ArrayList<DIDCreatedEventResponse>(valueList.size());
    for (Contract.EventValuesWithLog eventValues : valueList) {
      DIDCreatedEventResponse typedResponse = new DIDCreatedEventResponse();
      typedResponse.log = eventValues.getLog();
      typedResponse.did = (String) eventValues.getNonIndexedValues()
          .get(0)
          .getValue();
      typedResponse.controller = (String) eventValues.getNonIndexedValues()
          .get(1)
          .getValue();
      responses.add(typedResponse);
    }
    return responses;
  }

  public static DIDCreatedEventResponse getDIDCreatedEventFromLog(Log log) {
    Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(
        DIDCREATED_EVENT,
        log
    );
    DIDCreatedEventResponse typedResponse = new DIDCreatedEventResponse();
    typedResponse.log = log;
    typedResponse.did = (String) eventValues.getNonIndexedValues()
        .get(0)
        .getValue();
    typedResponse.controller = (String) eventValues.getNonIndexedValues()
        .get(1)
        .getValue();
    return typedResponse;
  }

  public static List<DIDDeactivatedEventResponse> getDIDDeactivatedEvents(
      TransactionReceipt transactionReceipt
  ) {
    List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(
        DIDDEACTIVATED_EVENT,
        transactionReceipt
    );
    ArrayList<DIDDeactivatedEventResponse> responses =
        new ArrayList<DIDDeactivatedEventResponse>(valueList.size());
    for (Contract.EventValuesWithLog eventValues : valueList) {
      DIDDeactivatedEventResponse typedResponse = new DIDDeactivatedEventResponse();
      typedResponse.log = eventValues.getLog();
      typedResponse.did = (String) eventValues.getNonIndexedValues()
          .get(0)
          .getValue();
      typedResponse.controller = (String) eventValues.getNonIndexedValues()
          .get(1)
          .getValue();
      responses.add(typedResponse);
    }
    return responses;
  }

  public static DIDDeactivatedEventResponse getDIDDeactivatedEventFromLog(Log log) {
    Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(
        DIDDEACTIVATED_EVENT,
        log
    );
    DIDDeactivatedEventResponse typedResponse = new DIDDeactivatedEventResponse();
    typedResponse.log = log;
    typedResponse.did = (String) eventValues.getNonIndexedValues()
        .get(0)
        .getValue();
    typedResponse.controller = (String) eventValues.getNonIndexedValues()
        .get(1)
        .getValue();
    return typedResponse;
  }

  public static List<DIDUpdatedEventResponse> getDIDUpdatedEvents(
      TransactionReceipt transactionReceipt
  ) {
    List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(
        DIDUPDATED_EVENT,
        transactionReceipt
    );
    ArrayList<DIDUpdatedEventResponse> responses =
        new ArrayList<DIDUpdatedEventResponse>(valueList.size());
    for (Contract.EventValuesWithLog eventValues : valueList) {
      DIDUpdatedEventResponse typedResponse = new DIDUpdatedEventResponse();
      typedResponse.log = eventValues.getLog();
      typedResponse.did = (String) eventValues.getNonIndexedValues()
          .get(0)
          .getValue();
      typedResponse.controller = (String) eventValues.getNonIndexedValues()
          .get(1)
          .getValue();
      responses.add(typedResponse);
    }
    return responses;
  }

  public static DIDUpdatedEventResponse getDIDUpdatedEventFromLog(Log log) {
    Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(
        DIDUPDATED_EVENT,
        log
    );
    DIDUpdatedEventResponse typedResponse = new DIDUpdatedEventResponse();
    typedResponse.log = log;
    typedResponse.did = (String) eventValues.getNonIndexedValues()
        .get(0)
        .getValue();
    typedResponse.controller = (String) eventValues.getNonIndexedValues()
        .get(1)
        .getValue();
    return typedResponse;
  }

  public static List<InitializedEventResponse> getInitializedEvents(
      TransactionReceipt transactionReceipt
  ) {
    List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(
        INITIALIZED_EVENT,
        transactionReceipt
    );
    ArrayList<InitializedEventResponse> responses =
        new ArrayList<InitializedEventResponse>(valueList.size());
    for (Contract.EventValuesWithLog eventValues : valueList) {
      InitializedEventResponse typedResponse = new InitializedEventResponse();
      typedResponse.log = eventValues.getLog();
      typedResponse.version = (BigInteger) eventValues.getNonIndexedValues()
          .get(0)
          .getValue();
      responses.add(typedResponse);
    }
    return responses;
  }

  public static InitializedEventResponse getInitializedEventFromLog(Log log) {
    Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(
        INITIALIZED_EVENT,
        log
    );
    InitializedEventResponse typedResponse = new InitializedEventResponse();
    typedResponse.log = log;
    typedResponse.version = (BigInteger) eventValues.getNonIndexedValues()
        .get(0)
        .getValue();
    return typedResponse;
  }

  public static List<RoleAdminChangedEventResponse> getRoleAdminChangedEvents(
      TransactionReceipt transactionReceipt
  ) {
    List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(
        ROLEADMINCHANGED_EVENT,
        transactionReceipt
    );
    ArrayList<RoleAdminChangedEventResponse> responses =
        new ArrayList<RoleAdminChangedEventResponse>(valueList.size());
    for (Contract.EventValuesWithLog eventValues : valueList) {
      RoleAdminChangedEventResponse typedResponse = new RoleAdminChangedEventResponse();
      typedResponse.log = eventValues.getLog();
      typedResponse.role = (byte[]) eventValues.getIndexedValues()
          .get(0)
          .getValue();
      typedResponse.previousAdminRole = (byte[]) eventValues.getIndexedValues()
          .get(1)
          .getValue();
      typedResponse.newAdminRole = (byte[]) eventValues.getIndexedValues()
          .get(2)
          .getValue();
      responses.add(typedResponse);
    }
    return responses;
  }

  public static RoleAdminChangedEventResponse getRoleAdminChangedEventFromLog(Log log) {
    Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(
        ROLEADMINCHANGED_EVENT,
        log
    );
    RoleAdminChangedEventResponse typedResponse = new RoleAdminChangedEventResponse();
    typedResponse.log = log;
    typedResponse.role = (byte[]) eventValues.getIndexedValues()
        .get(0)
        .getValue();
    typedResponse.previousAdminRole = (byte[]) eventValues.getIndexedValues()
        .get(1)
        .getValue();
    typedResponse.newAdminRole = (byte[]) eventValues.getIndexedValues()
        .get(2)
        .getValue();
    return typedResponse;
  }

  public static List<RoleGrantedEventResponse> getRoleGrantedEvents(
      TransactionReceipt transactionReceipt
  ) {
    List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(
        ROLEGRANTED_EVENT,
        transactionReceipt
    );
    ArrayList<RoleGrantedEventResponse> responses =
        new ArrayList<RoleGrantedEventResponse>(valueList.size());
    for (Contract.EventValuesWithLog eventValues : valueList) {
      RoleGrantedEventResponse typedResponse = new RoleGrantedEventResponse();
      typedResponse.log = eventValues.getLog();
      typedResponse.role = (byte[]) eventValues.getIndexedValues()
          .get(0)
          .getValue();
      typedResponse.account = (String) eventValues.getIndexedValues()
          .get(1)
          .getValue();
      typedResponse.sender = (String) eventValues.getIndexedValues()
          .get(2)
          .getValue();
      responses.add(typedResponse);
    }
    return responses;
  }

  public static RoleGrantedEventResponse getRoleGrantedEventFromLog(Log log) {
    Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(
        ROLEGRANTED_EVENT,
        log
    );
    RoleGrantedEventResponse typedResponse = new RoleGrantedEventResponse();
    typedResponse.log = log;
    typedResponse.role = (byte[]) eventValues.getIndexedValues()
        .get(0)
        .getValue();
    typedResponse.account = (String) eventValues.getIndexedValues()
        .get(1)
        .getValue();
    typedResponse.sender = (String) eventValues.getIndexedValues()
        .get(2)
        .getValue();
    return typedResponse;
  }

  public static List<RoleRevokedEventResponse> getRoleRevokedEvents(
      TransactionReceipt transactionReceipt
  ) {
    List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(
        ROLEREVOKED_EVENT,
        transactionReceipt
    );
    ArrayList<RoleRevokedEventResponse> responses =
        new ArrayList<RoleRevokedEventResponse>(valueList.size());
    for (Contract.EventValuesWithLog eventValues : valueList) {
      RoleRevokedEventResponse typedResponse = new RoleRevokedEventResponse();
      typedResponse.log = eventValues.getLog();
      typedResponse.role = (byte[]) eventValues.getIndexedValues()
          .get(0)
          .getValue();
      typedResponse.account = (String) eventValues.getIndexedValues()
          .get(1)
          .getValue();
      typedResponse.sender = (String) eventValues.getIndexedValues()
          .get(2)
          .getValue();
      responses.add(typedResponse);
    }
    return responses;
  }

  public static RoleRevokedEventResponse getRoleRevokedEventFromLog(Log log) {
    Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(
        ROLEREVOKED_EVENT,
        log
    );
    RoleRevokedEventResponse typedResponse = new RoleRevokedEventResponse();
    typedResponse.log = log;
    typedResponse.role = (byte[]) eventValues.getIndexedValues()
        .get(0)
        .getValue();
    typedResponse.account = (String) eventValues.getIndexedValues()
        .get(1)
        .getValue();
    typedResponse.sender = (String) eventValues.getIndexedValues()
        .get(2)
        .getValue();
    return typedResponse;
  }

  public static List<SetupEventResponse> getSetupEvents(TransactionReceipt transactionReceipt) {
    List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(
        SETUP_EVENT,
        transactionReceipt
    );
    ArrayList<SetupEventResponse> responses = new ArrayList<SetupEventResponse>(valueList.size());
    for (Contract.EventValuesWithLog eventValues : valueList) {
      SetupEventResponse typedResponse = new SetupEventResponse();
      typedResponse.log = eventValues.getLog();
      responses.add(typedResponse);
    }
    return responses;
  }

  public static SetupEventResponse getSetupEventFromLog(Log log) {
    Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(
        SETUP_EVENT,
        log
    );
    SetupEventResponse typedResponse = new SetupEventResponse();
    typedResponse.log = log;
    return typedResponse;
  }

  public static List<UpgradedEventResponse> getUpgradedEvents(TransactionReceipt transactionReceipt
  ) {
    List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(
        UPGRADED_EVENT,
        transactionReceipt
    );
    ArrayList<UpgradedEventResponse> responses =
        new ArrayList<UpgradedEventResponse>(valueList.size());
    for (Contract.EventValuesWithLog eventValues : valueList) {
      UpgradedEventResponse typedResponse = new UpgradedEventResponse();
      typedResponse.log = eventValues.getLog();
      typedResponse.implementation = (String) eventValues.getIndexedValues()
          .get(0)
          .getValue();
      responses.add(typedResponse);
    }
    return responses;
  }

  public static UpgradedEventResponse getUpgradedEventFromLog(Log log) {
    Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(
        UPGRADED_EVENT,
        log
    );
    UpgradedEventResponse typedResponse = new UpgradedEventResponse();
    typedResponse.log = log;
    typedResponse.implementation = (String) eventValues.getIndexedValues()
        .get(0)
        .getValue();
    return typedResponse;
  }

  public static List<VCIssuedEventResponse> getVCIssuedEvents(TransactionReceipt transactionReceipt
  ) {
    List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(
        VCISSUED_EVENT,
        transactionReceipt
    );
    ArrayList<VCIssuedEventResponse> responses =
        new ArrayList<VCIssuedEventResponse>(valueList.size());
    for (Contract.EventValuesWithLog eventValues : valueList) {
      VCIssuedEventResponse typedResponse = new VCIssuedEventResponse();
      typedResponse.log = eventValues.getLog();
      typedResponse.vcId = (String) eventValues.getNonIndexedValues()
          .get(0)
          .getValue();
      typedResponse.issuer = (String) eventValues.getNonIndexedValues()
          .get(1)
          .getValue();
      typedResponse.did = (String) eventValues.getNonIndexedValues()
          .get(2)
          .getValue();
      responses.add(typedResponse);
    }
    return responses;
  }

  public static VCIssuedEventResponse getVCIssuedEventFromLog(Log log) {
    Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(
        VCISSUED_EVENT,
        log
    );
    VCIssuedEventResponse typedResponse = new VCIssuedEventResponse();
    typedResponse.log = log;
    typedResponse.vcId = (String) eventValues.getNonIndexedValues()
        .get(0)
        .getValue();
    typedResponse.issuer = (String) eventValues.getNonIndexedValues()
        .get(1)
        .getValue();
    typedResponse.did = (String) eventValues.getNonIndexedValues()
        .get(2)
        .getValue();
    return typedResponse;
  }

  public static List<VCSchemaCreatedEventResponse> getVCSchemaCreatedEvents(
      TransactionReceipt transactionReceipt
  ) {
    List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(
        VCSCHEMACREATED_EVENT,
        transactionReceipt
    );
    ArrayList<VCSchemaCreatedEventResponse> responses =
        new ArrayList<VCSchemaCreatedEventResponse>(valueList.size());
    for (Contract.EventValuesWithLog eventValues : valueList) {
      VCSchemaCreatedEventResponse typedResponse = new VCSchemaCreatedEventResponse();
      typedResponse.log = eventValues.getLog();
      typedResponse.schemaId = (String) eventValues.getNonIndexedValues()
          .get(0)
          .getValue();
      typedResponse.issuer = (String) eventValues.getNonIndexedValues()
          .get(1)
          .getValue();
      responses.add(typedResponse);
    }
    return responses;
  }

  public static VCSchemaCreatedEventResponse getVCSchemaCreatedEventFromLog(Log log) {
    Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(
        VCSCHEMACREATED_EVENT,
        log
    );
    VCSchemaCreatedEventResponse typedResponse = new VCSchemaCreatedEventResponse();
    typedResponse.log = log;
    typedResponse.schemaId = (String) eventValues.getNonIndexedValues()
        .get(0)
        .getValue();
    typedResponse.issuer = (String) eventValues.getNonIndexedValues()
        .get(1)
        .getValue();
    return typedResponse;
  }

  public static List<VCStatusEventResponse> getVCStatusEvents(TransactionReceipt transactionReceipt
  ) {
    List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(
        VCSTATUS_EVENT,
        transactionReceipt
    );
    ArrayList<VCStatusEventResponse> responses =
        new ArrayList<VCStatusEventResponse>(valueList.size());
    for (Contract.EventValuesWithLog eventValues : valueList) {
      VCStatusEventResponse typedResponse = new VCStatusEventResponse();
      typedResponse.log = eventValues.getLog();
      typedResponse.vcId = (String) eventValues.getNonIndexedValues()
          .get(0)
          .getValue();
      typedResponse.player = (String) eventValues.getNonIndexedValues()
          .get(1)
          .getValue();
      typedResponse.status = (String) eventValues.getNonIndexedValues()
          .get(2)
          .getValue();
      responses.add(typedResponse);
    }
    return responses;
  }

  public static VCStatusEventResponse getVCStatusEventFromLog(Log log) {
    Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(
        VCSTATUS_EVENT,
        log
    );
    VCStatusEventResponse typedResponse = new VCStatusEventResponse();
    typedResponse.log = log;
    typedResponse.vcId = (String) eventValues.getNonIndexedValues()
        .get(0)
        .getValue();
    typedResponse.player = (String) eventValues.getNonIndexedValues()
        .get(1)
        .getValue();
    typedResponse.status = (String) eventValues.getNonIndexedValues()
        .get(2)
        .getValue();
    return typedResponse;
  }

  @Deprecated
  public static OpenDID load(String contractAddress, Web3j web3j, Credentials credentials,
                             BigInteger gasPrice, BigInteger gasLimit
  ) {
    return new OpenDID(
        contractAddress,
        web3j,
        credentials,
        gasPrice,
        gasLimit
    );
  }

  @Deprecated
  public static OpenDID load(String contractAddress, Web3j web3j,
                             TransactionManager transactionManager, BigInteger gasPrice,
                             BigInteger gasLimit
  ) {
    return new OpenDID(
        contractAddress,
        web3j,
        transactionManager,
        gasPrice,
        gasLimit
    );
  }

  public static OpenDID load(String contractAddress, Web3j web3j, Credentials credentials,
                             ContractGasProvider contractGasProvider
  ) {
    return new OpenDID(
        contractAddress,
        web3j,
        credentials,
        contractGasProvider
    );
  }

  public static OpenDID load(String contractAddress, Web3j web3j,
                             TransactionManager transactionManager,
                             ContractGasProvider contractGasProvider
  ) {
    return new OpenDID(
        contractAddress,
        web3j,
        transactionManager,
        contractGasProvider
    );
  }

  public static RemoteCall<OpenDID> deploy(Web3j web3j, Credentials credentials,
                                           ContractGasProvider contractGasProvider
  ) {
    return deployRemoteCall(
        OpenDID.class,
        web3j,
        credentials,
        contractGasProvider,
        getDeploymentBinary(),
        ""
    );
  }

  @Deprecated
  public static RemoteCall<OpenDID> deploy(Web3j web3j, Credentials credentials,
                                           BigInteger gasPrice, BigInteger gasLimit
  ) {
    return deployRemoteCall(
        OpenDID.class,
        web3j,
        credentials,
        gasPrice,
        gasLimit,
        getDeploymentBinary(),
        ""
    );
  }

  public static RemoteCall<OpenDID> deploy(Web3j web3j, TransactionManager transactionManager,
                                           ContractGasProvider contractGasProvider
  ) {
    return deployRemoteCall(
        OpenDID.class,
        web3j,
        transactionManager,
        contractGasProvider,
        getDeploymentBinary(),
        ""
    );
  }

  @Deprecated
  public static RemoteCall<OpenDID> deploy(Web3j web3j, TransactionManager transactionManager,
                                           BigInteger gasPrice, BigInteger gasLimit
  ) {
    return deployRemoteCall(
        OpenDID.class,
        web3j,
        transactionManager,
        gasPrice,
        gasLimit,
        getDeploymentBinary(),
        ""
    );
  }

  public static void linkLibraries(List<Contract.LinkReference> references) {
    librariesLinkedBinary = linkBinaryWithReferences(
        BINARY,
        references
    );
  }

  private static String getDeploymentBinary() {
    if (librariesLinkedBinary != null) {
      return librariesLinkedBinary;
    } else {
      return BINARY;
    }
  }

  public Flowable<DIDCreatedEventResponse> dIDCreatedEventFlowable(EthFilter filter) {
    return web3j.ethLogFlowable(filter)
        .map(log -> getDIDCreatedEventFromLog(log));
  }

  public Flowable<DIDCreatedEventResponse> dIDCreatedEventFlowable(DefaultBlockParameter startBlock,
                                                                   DefaultBlockParameter endBlock
  ) {
    EthFilter filter = new EthFilter(
        startBlock,
        endBlock,
        getContractAddress()
    );
    filter.addSingleTopic(EventEncoder.encode(DIDCREATED_EVENT));
    return dIDCreatedEventFlowable(filter);
  }

  public Flowable<DIDDeactivatedEventResponse> dIDDeactivatedEventFlowable(EthFilter filter) {
    return web3j.ethLogFlowable(filter)
        .map(log -> getDIDDeactivatedEventFromLog(log));
  }

  public Flowable<DIDDeactivatedEventResponse> dIDDeactivatedEventFlowable(
      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
    EthFilter filter = new EthFilter(
        startBlock,
        endBlock,
        getContractAddress()
    );
    filter.addSingleTopic(EventEncoder.encode(DIDDEACTIVATED_EVENT));
    return dIDDeactivatedEventFlowable(filter);
  }

  public Flowable<DIDUpdatedEventResponse> dIDUpdatedEventFlowable(EthFilter filter) {
    return web3j.ethLogFlowable(filter)
        .map(log -> getDIDUpdatedEventFromLog(log));
  }

  public Flowable<DIDUpdatedEventResponse> dIDUpdatedEventFlowable(DefaultBlockParameter startBlock,
                                                                   DefaultBlockParameter endBlock
  ) {
    EthFilter filter = new EthFilter(
        startBlock,
        endBlock,
        getContractAddress()
    );
    filter.addSingleTopic(EventEncoder.encode(DIDUPDATED_EVENT));
    return dIDUpdatedEventFlowable(filter);
  }

  public Flowable<InitializedEventResponse> initializedEventFlowable(EthFilter filter) {
    return web3j.ethLogFlowable(filter)
        .map(log -> getInitializedEventFromLog(log));
  }

  public Flowable<InitializedEventResponse> initializedEventFlowable(
      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
    EthFilter filter = new EthFilter(
        startBlock,
        endBlock,
        getContractAddress()
    );
    filter.addSingleTopic(EventEncoder.encode(INITIALIZED_EVENT));
    return initializedEventFlowable(filter);
  }

  public Flowable<RoleAdminChangedEventResponse> roleAdminChangedEventFlowable(EthFilter filter) {
    return web3j.ethLogFlowable(filter)
        .map(log -> getRoleAdminChangedEventFromLog(log));
  }

  public Flowable<RoleAdminChangedEventResponse> roleAdminChangedEventFlowable(
      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
    EthFilter filter = new EthFilter(
        startBlock,
        endBlock,
        getContractAddress()
    );
    filter.addSingleTopic(EventEncoder.encode(ROLEADMINCHANGED_EVENT));
    return roleAdminChangedEventFlowable(filter);
  }

  public Flowable<RoleGrantedEventResponse> roleGrantedEventFlowable(EthFilter filter) {
    return web3j.ethLogFlowable(filter)
        .map(log -> getRoleGrantedEventFromLog(log));
  }

  public Flowable<RoleGrantedEventResponse> roleGrantedEventFlowable(
      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
    EthFilter filter = new EthFilter(
        startBlock,
        endBlock,
        getContractAddress()
    );
    filter.addSingleTopic(EventEncoder.encode(ROLEGRANTED_EVENT));
    return roleGrantedEventFlowable(filter);
  }

  public Flowable<RoleRevokedEventResponse> roleRevokedEventFlowable(EthFilter filter) {
    return web3j.ethLogFlowable(filter)
        .map(log -> getRoleRevokedEventFromLog(log));
  }

  public Flowable<RoleRevokedEventResponse> roleRevokedEventFlowable(
      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
    EthFilter filter = new EthFilter(
        startBlock,
        endBlock,
        getContractAddress()
    );
    filter.addSingleTopic(EventEncoder.encode(ROLEREVOKED_EVENT));
    return roleRevokedEventFlowable(filter);
  }

  public Flowable<SetupEventResponse> setupEventFlowable(EthFilter filter) {
    return web3j.ethLogFlowable(filter)
        .map(log -> getSetupEventFromLog(log));
  }

  public Flowable<SetupEventResponse> setupEventFlowable(DefaultBlockParameter startBlock,
                                                         DefaultBlockParameter endBlock
  ) {
    EthFilter filter = new EthFilter(
        startBlock,
        endBlock,
        getContractAddress()
    );
    filter.addSingleTopic(EventEncoder.encode(SETUP_EVENT));
    return setupEventFlowable(filter);
  }

  public Flowable<UpgradedEventResponse> upgradedEventFlowable(EthFilter filter) {
    return web3j.ethLogFlowable(filter)
        .map(log -> getUpgradedEventFromLog(log));
  }

  public Flowable<UpgradedEventResponse> upgradedEventFlowable(DefaultBlockParameter startBlock,
                                                               DefaultBlockParameter endBlock
  ) {
    EthFilter filter = new EthFilter(
        startBlock,
        endBlock,
        getContractAddress()
    );
    filter.addSingleTopic(EventEncoder.encode(UPGRADED_EVENT));
    return upgradedEventFlowable(filter);
  }

  public Flowable<VCIssuedEventResponse> vCIssuedEventFlowable(EthFilter filter) {
    return web3j.ethLogFlowable(filter)
        .map(log -> getVCIssuedEventFromLog(log));
  }

  public Flowable<VCIssuedEventResponse> vCIssuedEventFlowable(DefaultBlockParameter startBlock,
                                                               DefaultBlockParameter endBlock
  ) {
    EthFilter filter = new EthFilter(
        startBlock,
        endBlock,
        getContractAddress()
    );
    filter.addSingleTopic(EventEncoder.encode(VCISSUED_EVENT));
    return vCIssuedEventFlowable(filter);
  }

  public Flowable<VCSchemaCreatedEventResponse> vCSchemaCreatedEventFlowable(EthFilter filter) {
    return web3j.ethLogFlowable(filter)
        .map(log -> getVCSchemaCreatedEventFromLog(log));
  }

  public Flowable<VCSchemaCreatedEventResponse> vCSchemaCreatedEventFlowable(
      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
    EthFilter filter = new EthFilter(
        startBlock,
        endBlock,
        getContractAddress()
    );
    filter.addSingleTopic(EventEncoder.encode(VCSCHEMACREATED_EVENT));
    return vCSchemaCreatedEventFlowable(filter);
  }

  public Flowable<VCStatusEventResponse> vCStatusEventFlowable(EthFilter filter) {
    return web3j.ethLogFlowable(filter)
        .map(log -> getVCStatusEventFromLog(log));
  }

  public Flowable<VCStatusEventResponse> vCStatusEventFlowable(DefaultBlockParameter startBlock,
                                                               DefaultBlockParameter endBlock
  ) {
    EthFilter filter = new EthFilter(
        startBlock,
        endBlock,
        getContractAddress()
    );
    filter.addSingleTopic(EventEncoder.encode(VCSTATUS_EVENT));
    return vCStatusEventFlowable(filter);
  }

  public RemoteFunctionCall<byte[]> DEFAULT_ADMIN_ROLE() {
    final Function function = new Function(
        FUNC_DEFAULT_ADMIN_ROLE,
        Arrays.<Type>asList(),
        Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {
        })
    );
    return executeRemoteCallSingleValueReturn(
        function,
        byte[].class
    );
  }

  public RemoteFunctionCall<String> UPGRADE_INTERFACE_VERSION() {
    final Function function = new Function(
        FUNC_UPGRADE_INTERFACE_VERSION,
        Arrays.<Type>asList(),
        Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {
        })
    );
    return executeRemoteCallSingleValueReturn(
        function,
        String.class
    );
  }

  public RemoteFunctionCall<DocumentAndStatus> getDidDoc(String _did) {
    final Function function = new Function(
        FUNC_GETDIDDOC,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_did)),
        Arrays.<TypeReference<?>>asList(new TypeReference<DocumentAndStatus>() {
        })
    );
    return executeRemoteCallSingleValueReturn(
        function,
        DocumentAndStatus.class
    );
  }

  public RemoteFunctionCall<DocumentStatus> getDidDocStatus(String _did) {
    final Function function = new Function(
        FUNC_GETDIDDOCSTATUS,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_did)),
        Arrays.<TypeReference<?>>asList(new TypeReference<DocumentStatus>() {
        })
    );
    return executeRemoteCallSingleValueReturn(
        function,
        DocumentStatus.class
    );
  }

  public RemoteFunctionCall<byte[]> getRoleAdmin(byte[] role) {
    final Function function = new Function(
        FUNC_GETROLEADMIN,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role)),
        Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {
        })
    );
    return executeRemoteCallSingleValueReturn(
        function,
        byte[].class
    );
  }

  public RemoteFunctionCall<VcSchema> getVcSchema(String _id) {
    final Function function = new Function(
        FUNC_GETVCSCHEMA,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_id)),
        Arrays.<TypeReference<?>>asList(new TypeReference<VcSchema>() {
        })
    );
    return executeRemoteCallSingleValueReturn(
        function,
        VcSchema.class
    );
  }

  public RemoteFunctionCall<VcMeta> getVcmetaData(String _id) {
    final Function function = new Function(
        FUNC_GETVCMETADATA,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_id)),
        Arrays.<TypeReference<?>>asList(new TypeReference<VcMeta>() {
        })
    );
    return executeRemoteCallSingleValueReturn(
        function,
        VcMeta.class
    );
  }

  public RemoteFunctionCall<ZKPLibrary_CredentialSchema> getZKPCredential(String _id) {
    final Function function = new Function(
        FUNC_GETZKPCREDENTIAL,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_id)),
        Arrays.<TypeReference<?>>asList(new TypeReference<ZKPLibrary_CredentialSchema>() {
        })
    );
    return executeRemoteCallSingleValueReturn(
        function,
        ZKPLibrary_CredentialSchema.class
    );
  }

  public RemoteFunctionCall<CredentialDefinition> getZKPCredentialDefinition(String _id) {
    final Function function = new Function(
        FUNC_GETZKPCREDENTIALDEFINITION,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_id)),
        Arrays.<TypeReference<?>>asList(new TypeReference<CredentialDefinition>() {
        })
    );
    return executeRemoteCallSingleValueReturn(
        function,
        CredentialDefinition.class
    );
  }

  public RemoteFunctionCall<TransactionReceipt> grantRole(byte[] role, String account) {
    final Function function = new Function(
        FUNC_GRANTROLE,
        Arrays.<Type>asList(
            new org.web3j.abi.datatypes.generated.Bytes32(role),
            new org.web3j.abi.datatypes.Address(
                160,
                account
            )
        ),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<Boolean> hasInitialized() {
    final Function function = new Function(
        FUNC_HASINITIALIZED,
        Arrays.<Type>asList(),
        Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {
        })
    );
    return executeRemoteCallSingleValueReturn(
        function,
        Boolean.class
    );
  }

  public RemoteFunctionCall<Boolean> hasRole(byte[] role, String account) {
    final Function function = new Function(
        FUNC_HASROLE,
        Arrays.<Type>asList(
            new org.web3j.abi.datatypes.generated.Bytes32(role),
            new org.web3j.abi.datatypes.Address(
                160,
                account
            )
        ),
        Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {
        })
    );
    return executeRemoteCallSingleValueReturn(
        function,
        Boolean.class
    );
  }

  public RemoteFunctionCall<TransactionReceipt> initialize(String _documentStorage,
                                                           String _vcMetaStorage,
                                                           String _zkpStorage,
                                                           String _multibaseContract
  ) {
    final Function function = new Function(
        FUNC_INITIALIZE,
        Arrays.<Type>asList(
            new org.web3j.abi.datatypes.Address(
                160,
                _documentStorage
            ),
            new org.web3j.abi.datatypes.Address(
                160,
                _vcMetaStorage
            ),
            new org.web3j.abi.datatypes.Address(
                160,
                _zkpStorage
            ),
            new org.web3j.abi.datatypes.Address(
                160,
                _multibaseContract
            )
        ),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<byte[]> proxiableUUID() {
    final Function function = new Function(
        FUNC_PROXIABLEUUID,
        Arrays.<Type>asList(),
        Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {
        })
    );
    return executeRemoteCallSingleValueReturn(
        function,
        byte[].class
    );
  }

  public RemoteFunctionCall<TransactionReceipt> registDidDoc(Document _invokedDidDoc,
                                                             String roleType
  ) {
    final Function function = new Function(
        FUNC_REGISTDIDDOC,
        Arrays.<Type>asList(
            _invokedDidDoc,
            new org.web3j.abi.datatypes.Utf8String(roleType)
        ),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> registVcMetaData(VcMeta _vcMeta) {
    final Function function = new Function(
        FUNC_REGISTVCMETADATA,
        Arrays.<Type>asList(_vcMeta),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> registVcSchema(VcSchema _vcSchema) {
    final Function function = new Function(
        FUNC_REGISTVCSCHEMA,
        Arrays.<Type>asList(_vcSchema),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> registZKPCredential(
      ZKPLibrary_CredentialSchema _credentialSchema
  ) {
    final Function function = new Function(
        FUNC_REGISTZKPCREDENTIAL,
        Arrays.<Type>asList(_credentialSchema),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> registZKPCredentialDefinition(
      CredentialDefinition _credentialDefinition
  ) {
    final Function function = new Function(
        FUNC_REGISTZKPCREDENTIALDEFINITION,
        Arrays.<Type>asList(_credentialDefinition),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> renounceRole(byte[] role,
                                                             String callerConfirmation
  ) {
    final Function function = new Function(
        FUNC_RENOUNCEROLE,
        Arrays.<Type>asList(
            new org.web3j.abi.datatypes.generated.Bytes32(role),
            new org.web3j.abi.datatypes.Address(
                160,
                callerConfirmation
            )
        ),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> revokeRole(byte[] role, String account) {
    final Function function = new Function(
        FUNC_REVOKEROLE,
        Arrays.<Type>asList(
            new org.web3j.abi.datatypes.generated.Bytes32(role),
            new org.web3j.abi.datatypes.Address(
                160,
                account
            )
        ),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> setDocumentStorage(String _documentStorage) {
    final Function function = new Function(
        FUNC_SETDOCUMENTSTORAGE,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(
            160,
            _documentStorage
        )),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> setVcMetaStorage(String _vcMetaStorage) {
    final Function function = new Function(
        FUNC_SETVCMETASTORAGE,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(
            160,
            _vcMetaStorage
        )),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> setZKPStorage(String _zkpStorage) {
    final Function function = new Function(
        FUNC_SETZKPSTORAGE,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(
            160,
            _zkpStorage
        )),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<Boolean> supportsInterface(byte[] interfaceId) {
    final Function function = new Function(
        FUNC_SUPPORTSINTERFACE,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes4(interfaceId)),
        Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {
        })
    );
    return executeRemoteCallSingleValueReturn(
        function,
        Boolean.class
    );
  }

  public RemoteFunctionCall<TransactionReceipt> updateDidDocStatusInService(String _did,
                                                                            String _status,
                                                                            String _versionId
  ) {
    final Function function = new Function(
        FUNC_UPDATEDIDDOCSTATUSINSERVICE,
        Arrays.<Type>asList(
            new org.web3j.abi.datatypes.Utf8String(_did),
            new org.web3j.abi.datatypes.Utf8String(_status),
            new org.web3j.abi.datatypes.Utf8String(_versionId)
        ),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> updateDidDocStatusRevocation(String _did,
                                                                             String _status,
                                                                             String _terminatedTime
  ) {
    final Function function = new Function(
        FUNC_UPDATEDIDDOCSTATUSREVOCATION,
        Arrays.<Type>asList(
            new org.web3j.abi.datatypes.Utf8String(_did),
            new org.web3j.abi.datatypes.Utf8String(_status),
            new org.web3j.abi.datatypes.Utf8String(_terminatedTime)
        ),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> updateVcStats(String _vcId, String _status) {
    final Function function = new Function(
        FUNC_UPDATEVCSTATS,
        Arrays.<Type>asList(
            new org.web3j.abi.datatypes.Utf8String(_vcId),
            new org.web3j.abi.datatypes.Utf8String(_status)
        ),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> upgradeToAndCall(String newImplementation,
                                                                 byte[] data, BigInteger weiValue
  ) {
    final Function function = new Function(
        FUNC_UPGRADETOANDCALL,
        Arrays.<Type>asList(
            new org.web3j.abi.datatypes.Address(
                160,
                newImplementation
            ),
            new org.web3j.abi.datatypes.DynamicBytes(data)
        ),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(
        function,
        weiValue
    );
  }


  public static class VerificationMethod extends DynamicStruct {
    public String id;

    public BigInteger keyType;

    public String controller;

    public String publicKeyMultibase;

    public BigInteger authType;

    public VerificationMethod(String id, BigInteger keyType, String controller,
                              String publicKeyMultibase, BigInteger authType
    ) {
      super(
          new org.web3j.abi.datatypes.Utf8String(id),
          new org.web3j.abi.datatypes.generated.Uint8(keyType),
          new org.web3j.abi.datatypes.Utf8String(controller),
          new org.web3j.abi.datatypes.Utf8String(publicKeyMultibase),
          new org.web3j.abi.datatypes.generated.Uint8(authType)
      );
      this.id = id;
      this.keyType = keyType;
      this.controller = controller;
      this.publicKeyMultibase = publicKeyMultibase;
      this.authType = authType;
    }

    public VerificationMethod(Utf8String id, Uint8 keyType, Utf8String controller,
                              Utf8String publicKeyMultibase, Uint8 authType
    ) {
      super(
          id,
          keyType,
          controller,
          publicKeyMultibase,
          authType
      );
      this.id = id.getValue();
      this.keyType = keyType.getValue();
      this.controller = controller.getValue();
      this.publicKeyMultibase = publicKeyMultibase.getValue();
      this.authType = authType.getValue();
    }
  }


  public static class Service extends DynamicStruct {
    public String id;

    public String serviceEndpoint;

    public List<String> serviceType;

    public Service(String id, String serviceEndpoint, List<String> serviceType) {
      super(
          new org.web3j.abi.datatypes.Utf8String(id),
          new org.web3j.abi.datatypes.Utf8String(serviceEndpoint),
          new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
              org.web3j.abi.datatypes.Utf8String.class,
              org.web3j.abi.Utils.typeMap(
                  serviceType,
                  org.web3j.abi.datatypes.Utf8String.class
              )
          )
      );
      this.id = id;
      this.serviceEndpoint = serviceEndpoint;
      this.serviceType = serviceType;
    }

    public Service(Utf8String id, Utf8String serviceEndpoint,
                   @Parameterized(type = Utf8String.class) DynamicArray<Utf8String> serviceType
    ) {
      super(
          id,
          serviceEndpoint,
          serviceType
      );
      this.id = id.getValue();
      this.serviceEndpoint = serviceEndpoint.getValue();
      this.serviceType = serviceType.getValue()
          .stream()
          .map(v -> v.getValue())
          .collect(Collectors.toList());
    }
  }


  public static class DocumentStatus extends DynamicStruct {
    public String id;

    public BigInteger status;

    public String version;

    public String roleType;

    public String terminatedTime;

    public DocumentStatus(String id, BigInteger status, String version, String roleType,
                          String terminatedTime
    ) {
      super(
          new org.web3j.abi.datatypes.Utf8String(id),
          new org.web3j.abi.datatypes.generated.Uint8(status),
          new org.web3j.abi.datatypes.Utf8String(version),
          new org.web3j.abi.datatypes.Utf8String(roleType),
          new org.web3j.abi.datatypes.Utf8String(terminatedTime)
      );
      this.id = id;
      this.status = status;
      this.version = version;
      this.roleType = roleType;
      this.terminatedTime = terminatedTime;
    }

    public DocumentStatus(Utf8String id, Uint8 status, Utf8String version, Utf8String roleType,
                          Utf8String terminatedTime
    ) {
      super(
          id,
          status,
          version,
          roleType,
          terminatedTime
      );
      this.id = id.getValue();
      this.status = status.getValue();
      this.version = version.getValue();
      this.roleType = roleType.getValue();
      this.terminatedTime = terminatedTime.getValue();
    }
  }


  public static class MetaData extends DynamicStruct {
    public String formatVersion;

    public String language;

    public MetaData(String formatVersion, String language) {
      super(
          new org.web3j.abi.datatypes.Utf8String(formatVersion),
          new org.web3j.abi.datatypes.Utf8String(language)
      );
      this.formatVersion = formatVersion;
      this.language = language;
    }

    public MetaData(Utf8String formatVersion, Utf8String language) {
      super(
          formatVersion,
          language
      );
      this.formatVersion = formatVersion.getValue();
      this.language = language.getValue();
    }
  }


  public static class SchemaClaimItem extends DynamicStruct {
    public String caption;

    public String format;

    public Boolean hideValue;

    public String id;

    public String _type;

    public SchemaClaimItem(String caption, String format, Boolean hideValue, String id,
                           String _type
    ) {
      super(
          new org.web3j.abi.datatypes.Utf8String(caption),
          new org.web3j.abi.datatypes.Utf8String(format),
          new org.web3j.abi.datatypes.Bool(hideValue),
          new org.web3j.abi.datatypes.Utf8String(id),
          new org.web3j.abi.datatypes.Utf8String(_type)
      );
      this.caption = caption;
      this.format = format;
      this.hideValue = hideValue;
      this.id = id;
      this._type = _type;
    }

    public SchemaClaimItem(Utf8String caption, Utf8String format, Bool hideValue, Utf8String id,
                           Utf8String _type
    ) {
      super(
          caption,
          format,
          hideValue,
          id,
          _type
      );
      this.caption = caption.getValue();
      this.format = format.getValue();
      this.hideValue = hideValue.getValue();
      this.id = id.getValue();
      this._type = _type.getValue();
    }
  }


  public static class ClaimNamespace extends DynamicStruct {
    public String id;

    public String name;

    public String ref;

    public ClaimNamespace(String id, String name, String ref) {
      super(
          new org.web3j.abi.datatypes.Utf8String(id),
          new org.web3j.abi.datatypes.Utf8String(name),
          new org.web3j.abi.datatypes.Utf8String(ref)
      );
      this.id = id;
      this.name = name;
      this.ref = ref;
    }

    public ClaimNamespace(Utf8String id, Utf8String name, Utf8String ref) {
      super(
          id,
          name,
          ref
      );
      this.id = id.getValue();
      this.name = name.getValue();
      this.ref = ref.getValue();
    }
  }


  public static class Provider extends DynamicStruct {
    public String did;

    public String certVcReference;

    public Provider(String did, String certVcReference) {
      super(
          new org.web3j.abi.datatypes.Utf8String(did),
          new org.web3j.abi.datatypes.Utf8String(certVcReference)
      );
      this.did = did;
      this.certVcReference = certVcReference;
    }

    public Provider(Utf8String did, Utf8String certVcReference) {
      super(
          did,
          certVcReference
      );
      this.did = did.getValue();
      this.certVcReference = certVcReference.getValue();
    }
  }


  public static class CredentialSchemaLibrary_CredentialSchema extends DynamicStruct {
    public String id;

    public String credentialSchemaType;

    public CredentialSchemaLibrary_CredentialSchema(String id, String credentialSchemaType) {
      super(
          new org.web3j.abi.datatypes.Utf8String(id),
          new org.web3j.abi.datatypes.Utf8String(credentialSchemaType)
      );
      this.id = id;
      this.credentialSchemaType = credentialSchemaType;
    }

    public CredentialSchemaLibrary_CredentialSchema(Utf8String id,
                                                    Utf8String credentialSchemaType
    ) {
      super(
          id,
          credentialSchemaType
      );
      this.id = id.getValue();
      this.credentialSchemaType = credentialSchemaType.getValue();
    }
  }


  public static class AttributeNamespace extends DynamicStruct {
    public String id;

    public String ref;

    public AttributeNamespace(String id, String ref) {
      super(
          new org.web3j.abi.datatypes.Utf8String(id),
          new org.web3j.abi.datatypes.Utf8String(ref)
      );
      this.id = id;
      this.ref = ref;
    }

    public AttributeNamespace(Utf8String id, Utf8String ref) {
      super(
          id,
          ref
      );
      this.id = id.getValue();
      this.ref = ref.getValue();
    }
  }


  public static class Internationalization extends DynamicStruct {
    public String languageType;

    public String value;

    public Internationalization(String languageType, String value) {
      super(
          new org.web3j.abi.datatypes.Utf8String(languageType),
          new org.web3j.abi.datatypes.Utf8String(value)
      );
      this.languageType = languageType;
      this.value = value;
    }

    public Internationalization(Utf8String languageType, Utf8String value) {
      super(
          languageType,
          value
      );
      this.languageType = languageType.getValue();
      this.value = value.getValue();
    }
  }


  public static class CredentialDefinition extends DynamicStruct {
    public String id;

    public String schemaId;

    public String ver;

    public String _type;

    public String value;

    public String tag;

    public CredentialDefinition(String id, String schemaId, String ver, String _type, String value,
                                String tag
    ) {
      super(
          new org.web3j.abi.datatypes.Utf8String(id),
          new org.web3j.abi.datatypes.Utf8String(schemaId),
          new org.web3j.abi.datatypes.Utf8String(ver),
          new org.web3j.abi.datatypes.Utf8String(_type),
          new org.web3j.abi.datatypes.Utf8String(value),
          new org.web3j.abi.datatypes.Utf8String(tag)
      );
      this.id = id;
      this.schemaId = schemaId;
      this.ver = ver;
      this._type = _type;
      this.value = value;
      this.tag = tag;
    }

    public CredentialDefinition(Utf8String id, Utf8String schemaId, Utf8String ver,
                                Utf8String _type, Utf8String value, Utf8String tag
    ) {
      super(
          id,
          schemaId,
          ver,
          _type,
          value,
          tag
      );
      this.id = id.getValue();
      this.schemaId = schemaId.getValue();
      this.ver = ver.getValue();
      this._type = _type.getValue();
      this.value = value.getValue();
      this.tag = tag.getValue();
    }
  }


  public static class Document extends DynamicStruct {
    public List<String> context;

    public String id;

    public String controller;

    public String created;

    public String updated;

    public String versionId;

    public Boolean deactivated;

    public List<VerificationMethod> verificationMethod;

    public List<String> assertionsMethod;

    public List<String> authentication;

    public List<String> keyAgreement;

    public List<String> capabilityInvocation;

    public List<String> capabilityDelegation;

    public List<Service> services;

    public Document(List<String> context, String id, String controller, String created,
                    String updated, String versionId, Boolean deactivated,
                    List<VerificationMethod> verificationMethod, List<String> assertionsMethod,
                    List<String> authentication, List<String> keyAgreement,
                    List<String> capabilityInvocation, List<String> capabilityDelegation,
                    List<Service> services
    ) {
      super(
          new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
              org.web3j.abi.datatypes.Utf8String.class,
              org.web3j.abi.Utils.typeMap(
                  context,
                  org.web3j.abi.datatypes.Utf8String.class
              )
          ),
          new org.web3j.abi.datatypes.Utf8String(id),
          new org.web3j.abi.datatypes.Utf8String(controller),
          new org.web3j.abi.datatypes.Utf8String(created),
          new org.web3j.abi.datatypes.Utf8String(updated),
          new org.web3j.abi.datatypes.Utf8String(versionId),
          new org.web3j.abi.datatypes.Bool(deactivated),
          new org.web3j.abi.datatypes.DynamicArray<VerificationMethod>(
              VerificationMethod.class,
              verificationMethod
          ),
          new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
              org.web3j.abi.datatypes.Utf8String.class,
              org.web3j.abi.Utils.typeMap(
                  assertionsMethod,
                  org.web3j.abi.datatypes.Utf8String.class
              )
          ),
          new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
              org.web3j.abi.datatypes.Utf8String.class,
              org.web3j.abi.Utils.typeMap(
                  authentication,
                  org.web3j.abi.datatypes.Utf8String.class
              )
          ),
          new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
              org.web3j.abi.datatypes.Utf8String.class,
              org.web3j.abi.Utils.typeMap(
                  keyAgreement,
                  org.web3j.abi.datatypes.Utf8String.class
              )
          ),
          new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
              org.web3j.abi.datatypes.Utf8String.class,
              org.web3j.abi.Utils.typeMap(
                  capabilityInvocation,
                  org.web3j.abi.datatypes.Utf8String.class
              )
          ),
          new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
              org.web3j.abi.datatypes.Utf8String.class,
              org.web3j.abi.Utils.typeMap(
                  capabilityDelegation,
                  org.web3j.abi.datatypes.Utf8String.class
              )
          ),
          new org.web3j.abi.datatypes.DynamicArray<Service>(
              Service.class,
              services
          )
      );
      this.context = context;
      this.id = id;
      this.controller = controller;
      this.created = created;
      this.updated = updated;
      this.versionId = versionId;
      this.deactivated = deactivated;
      this.verificationMethod = verificationMethod;
      this.assertionsMethod = assertionsMethod;
      this.authentication = authentication;
      this.keyAgreement = keyAgreement;
      this.capabilityInvocation = capabilityInvocation;
      this.capabilityDelegation = capabilityDelegation;
      this.services = services;
    }

    public Document(@Parameterized(type = Utf8String.class) DynamicArray<Utf8String> context,
                    Utf8String id, Utf8String controller, Utf8String created, Utf8String updated,
                    Utf8String versionId, Bool deactivated,
                    @Parameterized(type = VerificationMethod.class)
                    DynamicArray<VerificationMethod> verificationMethod,
                    @Parameterized(type = Utf8String.class)
                    DynamicArray<Utf8String> assertionsMethod,
                    @Parameterized(type = Utf8String.class) DynamicArray<Utf8String> authentication,
                    @Parameterized(type = Utf8String.class) DynamicArray<Utf8String> keyAgreement,
                    @Parameterized(type = Utf8String.class)
                    DynamicArray<Utf8String> capabilityInvocation,
                    @Parameterized(type = Utf8String.class)
                    DynamicArray<Utf8String> capabilityDelegation,
                    @Parameterized(type = Service.class) DynamicArray<Service> services
    ) {
      super(
          context,
          id,
          controller,
          created,
          updated,
          versionId,
          deactivated,
          verificationMethod,
          assertionsMethod,
          authentication,
          keyAgreement,
          capabilityInvocation,
          capabilityDelegation,
          services
      );
      this.context = context.getValue()
          .stream()
          .map(v -> v.getValue())
          .collect(Collectors.toList());
      this.id = id.getValue();
      this.controller = controller.getValue();
      this.created = created.getValue();
      this.updated = updated.getValue();
      this.versionId = versionId.getValue();
      this.deactivated = deactivated.getValue();
      this.verificationMethod = verificationMethod.getValue();
      this.assertionsMethod = assertionsMethod.getValue()
          .stream()
          .map(v -> v.getValue())
          .collect(Collectors.toList());
      this.authentication = authentication.getValue()
          .stream()
          .map(v -> v.getValue())
          .collect(Collectors.toList());
      this.keyAgreement = keyAgreement.getValue()
          .stream()
          .map(v -> v.getValue())
          .collect(Collectors.toList());
      this.capabilityInvocation = capabilityInvocation.getValue()
          .stream()
          .map(v -> v.getValue())
          .collect(Collectors.toList());
      this.capabilityDelegation = capabilityDelegation.getValue()
          .stream()
          .map(v -> v.getValue())
          .collect(Collectors.toList());
      this.services = services.getValue();
    }
  }


  public static class VCSchemaClaim extends DynamicStruct {
    public List<SchemaClaimItem> items;

    public ClaimNamespace namespace;

    public VCSchemaClaim(List<SchemaClaimItem> items, ClaimNamespace namespace) {
      super(
          new org.web3j.abi.datatypes.DynamicArray<SchemaClaimItem>(
              SchemaClaimItem.class,
              items
          ),
          namespace
      );
      this.items = items;
      this.namespace = namespace;
    }

    public VCSchemaClaim(
        @Parameterized(type = SchemaClaimItem.class) DynamicArray<SchemaClaimItem> items,
        ClaimNamespace namespace
    ) {
      super(
          items,
          namespace
      );
      this.items = items.getValue();
      this.namespace = namespace;
    }
  }


  public static class VcMeta extends DynamicStruct {
    public String id;

    public Provider issuer;

    public String subject;

    public CredentialSchemaLibrary_CredentialSchema credentialSchema;

    public String status;

    public String issuanceDate;

    public String validFrom;

    public String validUntil;

    public String formatVersion;

    public String language;

    public VcMeta(String id, Provider issuer, String subject,
                  CredentialSchemaLibrary_CredentialSchema credentialSchema, String status,
                  String issuanceDate, String validFrom, String validUntil, String formatVersion,
                  String language
    ) {
      super(
          new org.web3j.abi.datatypes.Utf8String(id),
          issuer,
          new org.web3j.abi.datatypes.Utf8String(subject),
          credentialSchema,
          new org.web3j.abi.datatypes.Utf8String(status),
          new org.web3j.abi.datatypes.Utf8String(issuanceDate),
          new org.web3j.abi.datatypes.Utf8String(validFrom),
          new org.web3j.abi.datatypes.Utf8String(validUntil),
          new org.web3j.abi.datatypes.Utf8String(formatVersion),
          new org.web3j.abi.datatypes.Utf8String(language)
      );
      this.id = id;
      this.issuer = issuer;
      this.subject = subject;
      this.credentialSchema = credentialSchema;
      this.status = status;
      this.issuanceDate = issuanceDate;
      this.validFrom = validFrom;
      this.validUntil = validUntil;
      this.formatVersion = formatVersion;
      this.language = language;
    }

    public VcMeta(Utf8String id, Provider issuer, Utf8String subject,
                  CredentialSchemaLibrary_CredentialSchema credentialSchema, Utf8String status,
                  Utf8String issuanceDate, Utf8String validFrom, Utf8String validUntil,
                  Utf8String formatVersion, Utf8String language
    ) {
      super(
          id,
          issuer,
          subject,
          credentialSchema,
          status,
          issuanceDate,
          validFrom,
          validUntil,
          formatVersion,
          language
      );
      this.id = id.getValue();
      this.issuer = issuer;
      this.subject = subject.getValue();
      this.credentialSchema = credentialSchema;
      this.status = status.getValue();
      this.issuanceDate = issuanceDate.getValue();
      this.validFrom = validFrom.getValue();
      this.validUntil = validUntil.getValue();
      this.formatVersion = formatVersion.getValue();
      this.language = language.getValue();
    }
  }


  public static class AttributeItem extends DynamicStruct {
    public String label;

    public String caption;

    public String _type;

    public List<Internationalization> i18n;

    public AttributeItem(String label, String caption, String _type,
                         List<Internationalization> i18n
    ) {
      super(
          new org.web3j.abi.datatypes.Utf8String(label),
          new org.web3j.abi.datatypes.Utf8String(caption),
          new org.web3j.abi.datatypes.Utf8String(_type),
          new org.web3j.abi.datatypes.DynamicArray<Internationalization>(
              Internationalization.class,
              i18n
          )
      );
      this.label = label;
      this.caption = caption;
      this._type = _type;
      this.i18n = i18n;
    }

    public AttributeItem(Utf8String label, Utf8String caption, Utf8String _type,
                         @Parameterized(type = Internationalization.class)
                         DynamicArray<Internationalization> i18n
    ) {
      super(
          label,
          caption,
          _type,
          i18n
      );
      this.label = label.getValue();
      this.caption = caption.getValue();
      this._type = _type.getValue();
      this.i18n = i18n.getValue();
    }
  }


  public static class DocumentAndStatus extends DynamicStruct {
    public Document diddoc;

    public BigInteger status;

    public DocumentAndStatus(Document diddoc, BigInteger status) {
      super(
          diddoc,
          new org.web3j.abi.datatypes.generated.Uint8(status)
      );
      this.diddoc = diddoc;
      this.status = status;
    }

    public DocumentAndStatus(Document diddoc, Uint8 status) {
      super(
          diddoc,
          status
      );
      this.diddoc = diddoc;
      this.status = status.getValue();
    }
  }


  public static class CredentialSubject extends DynamicStruct {
    public List<VCSchemaClaim> claims;

    public CredentialSubject(List<VCSchemaClaim> claims) {
      super(new org.web3j.abi.datatypes.DynamicArray<VCSchemaClaim>(
          VCSchemaClaim.class,
          claims
      ));
      this.claims = claims;
    }

    public CredentialSubject(
        @Parameterized(type = VCSchemaClaim.class) DynamicArray<VCSchemaClaim> claims
    ) {
      super(claims);
      this.claims = claims.getValue();
    }
  }


  public static class AttributeType extends DynamicStruct {
    public AttributeNamespace namespace;

    public List<AttributeItem> items;

    public AttributeType(AttributeNamespace namespace, List<AttributeItem> items) {
      super(
          namespace,
          new org.web3j.abi.datatypes.DynamicArray<AttributeItem>(
              AttributeItem.class,
              items
          )
      );
      this.namespace = namespace;
      this.items = items;
    }

    public AttributeType(AttributeNamespace namespace, @Parameterized(type = AttributeItem.class)
                         DynamicArray<AttributeItem> items
    ) {
      super(
          namespace,
          items
      );
      this.namespace = namespace;
      this.items = items.getValue();
    }
  }


  public static class VcSchema extends DynamicStruct {
    public String id;

    public String schema;

    public String title;

    public String description;

    public MetaData metadata;

    public CredentialSubject credentialSubject;

    public VcSchema(String id, String schema, String title, String description, MetaData metadata,
                    CredentialSubject credentialSubject
    ) {
      super(
          new org.web3j.abi.datatypes.Utf8String(id),
          new org.web3j.abi.datatypes.Utf8String(schema),
          new org.web3j.abi.datatypes.Utf8String(title),
          new org.web3j.abi.datatypes.Utf8String(description),
          metadata,
          credentialSubject
      );
      this.id = id;
      this.schema = schema;
      this.title = title;
      this.description = description;
      this.metadata = metadata;
      this.credentialSubject = credentialSubject;
    }

    public VcSchema(Utf8String id, Utf8String schema, Utf8String title, Utf8String description,
                    MetaData metadata, CredentialSubject credentialSubject
    ) {
      super(
          id,
          schema,
          title,
          description,
          metadata,
          credentialSubject
      );
      this.id = id.getValue();
      this.schema = schema.getValue();
      this.title = title.getValue();
      this.description = description.getValue();
      this.metadata = metadata;
      this.credentialSubject = credentialSubject;
    }
  }


  public static class ZKPLibrary_CredentialSchema extends DynamicStruct {
    public String id;

    public String name;

    public String version;

    public List<String> attrNames;

    public List<AttributeType> attrTypes;

    public String tag;

    public ZKPLibrary_CredentialSchema(String id, String name, String version,
                                       List<String> attrNames, List<AttributeType> attrTypes,
                                       String tag
    ) {
      super(
          new org.web3j.abi.datatypes.Utf8String(id),
          new org.web3j.abi.datatypes.Utf8String(name),
          new org.web3j.abi.datatypes.Utf8String(version),
          new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
              org.web3j.abi.datatypes.Utf8String.class,
              org.web3j.abi.Utils.typeMap(
                  attrNames,
                  org.web3j.abi.datatypes.Utf8String.class
              )
          ),
          new org.web3j.abi.datatypes.DynamicArray<AttributeType>(
              AttributeType.class,
              attrTypes
          ),
          new org.web3j.abi.datatypes.Utf8String(tag)
      );
      this.id = id;
      this.name = name;
      this.version = version;
      this.attrNames = attrNames;
      this.attrTypes = attrTypes;
      this.tag = tag;
    }

    public ZKPLibrary_CredentialSchema(Utf8String id, Utf8String name, Utf8String version,
                                       @Parameterized(type = Utf8String.class)
                                       DynamicArray<Utf8String> attrNames,
                                       @Parameterized(type = AttributeType.class)
                                       DynamicArray<AttributeType> attrTypes, Utf8String tag
    ) {
      super(
          id,
          name,
          version,
          attrNames,
          attrTypes,
          tag
      );
      this.id = id.getValue();
      this.name = name.getValue();
      this.version = version.getValue();
      this.attrNames = attrNames.getValue()
          .stream()
          .map(v -> v.getValue())
          .collect(Collectors.toList());
      this.attrTypes = attrTypes.getValue();
      this.tag = tag.getValue();
    }
  }


  public static class DIDCreatedEventResponse extends BaseEventResponse {
    public String did;

    public String controller;
  }


  public static class DIDDeactivatedEventResponse extends BaseEventResponse {
    public String did;

    public String controller;
  }


  public static class DIDUpdatedEventResponse extends BaseEventResponse {
    public String did;

    public String controller;
  }


  public static class InitializedEventResponse extends BaseEventResponse {
    public BigInteger version;
  }


  public static class RoleAdminChangedEventResponse extends BaseEventResponse {
    public byte[] role;

    public byte[] previousAdminRole;

    public byte[] newAdminRole;
  }


  public static class RoleGrantedEventResponse extends BaseEventResponse {
    public byte[] role;

    public String account;

    public String sender;
  }


  public static class RoleRevokedEventResponse extends BaseEventResponse {
    public byte[] role;

    public String account;

    public String sender;
  }


  public static class SetupEventResponse extends BaseEventResponse {
  }


  public static class UpgradedEventResponse extends BaseEventResponse {
    public String implementation;
  }


  public static class VCIssuedEventResponse extends BaseEventResponse {
    public String vcId;

    public String issuer;

    public String did;
  }


  public static class VCSchemaCreatedEventResponse extends BaseEventResponse {
    public String schemaId;

    public String issuer;
  }


  public static class VCStatusEventResponse extends BaseEventResponse {
    public String vcId;

    public String player;

    public String status;
  }
}
