package org.omnione.generated;

import io.reactivex.Flowable;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.stream.Collectors;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.DynamicStruct;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Bytes32;
import org.web3j.abi.datatypes.generated.Uint64;
import org.web3j.abi.datatypes.generated.Uint8;
import org.web3j.abi.datatypes.reflection.Parameterized;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line
 * tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the
 * <a href="https://github.com/hyperledger-web3j/web3j/tree/main/codegen">codegen module</a> to
 * update.
 *
 * <p>Generated with web3j version 1.6.3.
 */
@SuppressWarnings("rawtypes")
public class OpenDID extends Contract {
  public static final String BINARY =
      "60a0806040523460295730608052615f22908161002f823960805181818161110301526112e90152f35b600080fdfe61024080604052600436101561001457600080fd5b600090813560e01c90816301ffc9a71461233f575080630803fac01461230957806315a9802a14611ec657806320a6ab5514611dcc5780632361f6af14611b49578063248a9ca314611b135780632f2ff15d14611ad2578063342b5ed814611a9257806336568abe14611a4d5780633764831c1461181d57806339a75ce7146117dd578063437c6c241461170757806347bf65bc146114b95780634f1ef286146112995780635213be261461115857806352d1902d146110f057806362ee4a5614611086578063671a8ebe1461101057806368fcbbbb14610f1d5780636b59d95014610c46578063804225b6146108e657806391d148541461089b578063a217fddf1461087f578063a5dba8d114610662578063ac92f71814610515578063ad3cb1cc146104ca578063b65ef6061461048a578063c0c53b8b146101ad5763d547741f1461016157600080fd5b346101aa5760403660031901126101aa576101a660043561018061246f565b906101a161019c82600052600060205260016040600020015490565b6157e4565b61597e565b5080f35b80fd5b50346101aa5760603660031901126101aa576101c7612485565b6101cf61246f565b906044356001600160a01b0381169081900361048657600080516020615ecd833981519152549260ff8460401c1615936001600160401b0381168015908161047e575b6001149081610474575b15908161046b575b5061045c5767ffffffffffffffff198116600117600080516020615ecd833981519152558461042f575b506102583361581f565b50600080516020615ecd833981519152549260ff8460401c1615610420576001600160a01b03169081156103db576001600160a01b0316908115610396578215610351576001600160601b0360a01b60015416176001556001600160601b0360a01b60025416176002556001600160601b0360a01b6003541617600355604051917f587930504fa5b1062f394d90f9dac9ecadd354ed23a97af9ea4e44dff4870a848480a1610305578280f35b68ff00000000000000001916600080516020615ecd83398151915255600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a138808280f35b60405162461bcd60e51b815260206004820152601a60248201527f496e76616c6964205a4b5053746f7261676520616464726573730000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601d60248201527f496e76616c69642056634d65746153746f7261676520616464726573730000006044820152606490fd5b60405162461bcd60e51b815260206004820152601f60248201527f496e76616c696420446f63756d656e7453746f726167652061646472657373006044820152606490fd5b631afcd79f60e31b8652600486fd5b68ffffffffffffffffff19166801000000000000000117600080516020615ecd833981519152553861024e565b63f92ee8a960e01b8652600486fd5b90501538610224565b303b15915061021c565b869150610212565b8380fd5b50346101aa5760203660031901126101aa576104a4612485565b6104ac615772565b60018060a01b03166001600160601b0360a01b600354161760035580f35b50346101aa57806003193601126101aa5761051160408051906104ed818361263e565b60058252640352e302e360dc1b6020830152519182916020835260208301906124be565b0390f35b50346101aa5760203660031901126101aa576004356001600160401b03811161065e576105469036906004016123d0565b6060608060405161055681612569565b82815285602082015282604082015282808201520152801561060457600154604051630fe3478b60e31b81526020600482015292849284926001600160a01b031691839182916105aa9160248401916129db565b03915afa9081156105f9578261051193926105d6575b5050604051918291602083526020830190612923565b6105f292503d8091833e6105ea818361263e565b810190612b1f565b38806105c0565b6040513d84823e3d90fd5b60405162461bcd60e51b815260206004820152602c60248201527f446f63756d656e7453746f726167653a20446f63756d656e742049442063616e60448201526b6e6f7420626520656d70747960a01b6064820152608490fd5b5080fd5b50346101aa5760203660031901126101aa576004356001600160401b03811161065e5761069661069c9136906004016123d0565b9061529b565b604051906020825260a061071f61070a6106f46106de6106c8865160c060208a015260e08901906124be565b6020870151888203601f190160408a01526124be565b6040860151878203601f190160608901526124be565b6060850151868203601f190160808801526124be565b6080840151858203601f19018487015261253c565b910151601f198383030160c08401526020820190519160208152825180925260408101602060408460051b84010194019580925b8484106107605786860387f35b9091929394603f198282030184528751604082019080519160408452825180915260608401602060608360051b870101940191875b81811061080057505050506107ef6001936020938480940151918481830391015260406107de6107ce84516060855260608501906124be565b86850151848203888601526124be565b9201519060408184039101526124be565b990194019401929694939190610753565b90919294602080610873600193605f198b82030188528951906080610862610844610834855160a0865260a08601906124be565b87860151858203898701526124be565b604085015115156040850152606085015184820360608601526124be565b9201519060808184039101526124be565b97019401929101610795565b50346101aa57806003193601126101aa57602090604051908152f35b50346101aa5760403660031901126101aa5760406108b761246f565b91600435815280602052209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b50346101aa576108f5366123fd565b6001546040516353ec871160e01b815293969593946001600160a01b03909116929088868061092a86868a8d60048601615274565b0381875afa899681610bff575b506109e957610944612bf0565b6308c379a0146109b2575b60405162461bcd60e51b815260206004820152603060248201527f556e6b6e6f776e206572726f72206f6363757272656420647572696e6720646f60448201526f18dd5b595b9d081c995d1c9a595d985b60821b606482015280608481015b0390fd5b6109ba612c0e565b806109c5575061094f565b60405162461bcd60e51b8152602060048201529081906109ae9060248301906124be565b8415610ba5578715610b47578897604051602081019082848337610a216020828d86820190838201520301601f19810183528261263e565b5190206040516020810190681050d512559055115160ba1b825260098152610a4a60298261263e565b51902003610ae15750508660c08601525b823b15610add578694610ab98692610a9594610aa76040519a8b998a98899763270766fb60e11b8952606060048a015260648901906126d1565b878103600319016024890152916129db565b848103600319016044860152916129db565b03925af180156105f957610acc57505080f35b81610ad69161263e565b6101aa5780f35b8680fd5b610b08602060405183819483830196873781018c838201520301601f19810183528261263e565b51902060405160208101906a11115050d512559055115160aa1b8252600b8152610b33602b8261263e565b51902003610a5b57600160c0860152610a5b565b60405162461bcd60e51b815260206004820152603060248201527f446f63756d656e7453746f726167653a20446f63756d656e742073746174757360448201526f2063616e6e6f7420626520656d70747960801b6064820152608490fd5b60405162461bcd60e51b815260206004820152602c60248201527f446f63756d656e7453746f726167653a20446f63756d656e742069642063616e60448201526b6e6f7420626520656d70747960a01b6064820152608490fd5b9096503d808b833e610c11818361263e565b8101602082820312610c425781516001600160401b038111610c3e57610c379201613a4f565b9538610937565b8b80fd5b8a80fd5b50346101aa5780610c5636612398565b6003546001600160a01b0316803b15610f195760405163af76274960e01b8152602060048201529183918391610d06610ce7610cc8610ca9610c9885806129aa565b60c060248a015260e48901916129db565b610cb660208601866129aa565b8883036023190160448a0152906129db565b610cd560408501856129aa565b878303602319016064890152906129db565b610cf46060840184612a4b565b86830360231901608488015290613fbb565b90610d146080820182612a4b565b6023198685030160a4870152808452602084019360208260051b820101948389925b848410610d7b5750505050505083610d6a8193610d588460a08a9601906129aa565b8483036023190160c4860152906129db565b03925af180156105f957610acc5750f35b9295979950929590939750601f198282030184528a610d9a89856129fc565b610dc3610db8610daa83806129fc565b604086526040860190612a10565b916020810190612a4b565b90936020818403910152808252602082019160208260051b820101948094905b838210610e0b575050505050506020806001929901940194019093899795928b999795610d36565b9091929394959c9f9e9d9c601f19848203018652607e198236030187351215610f15578f8288350191610e99610e8e610e73610e58610e4a87806129aa565b6080875260808701916129db565b610e6560208801886129aa565b9086830360208801526129db565b610e8060408701876129aa565b9085830360408701526129db565b936060810190612a4b565b916060818603910152818452602084019160208160051b860101948294925b828410610ee0575050505050509e9f9c9d9e6020806001929801960192019093929193610de3565b909192939495602080610f07600193601f19878203018a52610f028b876129fc565b612a10565b980196019401929190610eb8565b8f80fd5b5050fd5b50346101aa5760403660031901126101aa576004356001600160401b03811161065e57610f4e9036906004016123d0565b906024356001600160401b03811161048657610f6e9036906004016123d0565b6002549093919085906001600160a01b0316803b1561065e5760405163301150f760e21b81529082908290818381610fac8c8a8c8e60048601615274565b03925af180156105f957610ff7575b50507ff958d2c8ca179cb3614546dff74d0aa57c6d18424cf2b171c9a3f6c5e186810793610ff19160405194859433918661370d565b0390a180f35b816110019161263e565b61100c578438610fbb565b8480fd5b50346101aa5760403660031901126101aa57600435906001600160401b0382116101aa576101c060031983360301126101aa57602435906001600160401b0382116101aa576105116110728461106936600487016123d0565b916004016140b4565b6040519182916020835260208301906124be565b50346101aa5760203660031901126101aa57600435906001600160401b0382116101aa576110c06110ba36600485016123d0565b90613e65565b60405180916020825261051160206110e3835160408387015260608601906126d1565b9201516040840190612916565b50346101aa57806003193601126101aa577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003611149576020604051600080516020615ead8339815191528152f35b63703e46dd60e11b8152600490fd5b50346101aa5760203660031901126101aa57600435906001600160401b0382116101aa5761051161119561118f36600486016123d0565b9061375e565b6040519182916020835261012061128461126e61125761124161122b6112156111ff6111e96111d38c6101608c5191610140602082015201906124be565b60208b01518d8203601f190160408f015261253c565b60408a01518c8203601f190160608e01526124be565b60608901518b8203601f190160808d015261253c565b60808801518a8203601f190160a08c01526124be565b60a0870151898203601f190160c08b01526124be565b60c0860151888203601f190160e08a01526124be565b60e0850151878203601f19016101008901526124be565b610100840151868203601f1901848801526124be565b910151838203601f19016101408501526124be565b5060403660031901126101aa576112ae612485565b906024356001600160401b03811161065e573660238201121561065e576112df90369060248160040135910161267a565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016308114908115611496575b5061148757611321615772565b6040516352d1902d60e01b8152926001600160a01b0381169190602085600481865afa80958596611453575b5061136657634c9c8ce360e01b84526004839052602484fd5b909184600080516020615ead83398151915281036114415750813b1561142f57600080516020615ead83398151915280546001600160a01b031916821790557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8480a2815183901561141557808360206101a695519101845af43d1561140d573d916113f18361265f565b926113ff604051948561263e565b83523d85602085013e615e4b565b606091615e4b565b505050346114205780f35b63b398979f60e01b8152600490fd5b634c9c8ce360e01b8452600452602483fd5b632a87526960e21b8552600452602484fd5b9095506020813d60201161147f575b8161146f6020938361263e565b8101031261100c5751943861134d565b3d9150611462565b63703e46dd60e11b8252600482fd5b600080516020615ead833981519152546001600160a01b03161415905038611314565b50346101aa5760203660031901126101aa576004356001600160401b03811161065e578060040181360391610140600319840112610486576002546001600160a01b031691823b1561100c57604051631214df6960e31b8152602060048201528590818161152785806129aa565b60248301610140905261016483019061153f926129db565b9681838160248a019a6115528c8b6129fc565b8282036023190160448401526115689190612a10565b61157560448c018b6129aa565b83830360231901606485015261158b92916129db565b61159860648c018b6129fc565b8282036023190160848401526115ae9190612a10565b6115bb60848c018b6129aa565b8383036023190160a48501526115d192916129db565b6115de60a48c018b6129aa565b8383036023190160c48501526115f492916129db565b61160160c48c018b6129aa565b8383036023190160e485015261161792916129db565b61162460e48c018b6129aa565b8383036023190161010485015261163b92916129db565b6116496101048c018b6129aa565b8383036023190161012485015261166092916129db565b61166e6101248c018b6129aa565b8383036023190161014485015261168592916129db565b03925af180156105f9576116f2575b5050806116a091612978565b91909235936042190184121561100c576116e360047f711312583a392d65179bf949665a44f0e2c18f41e42330eae5d9103df6b7918d95610ff193010180612978565b9060405194859433918661370d565b816116fc9161263e565b61100c578438611694565b50346101aa5760203660031901126101aa57600435906001600160401b0382116101aa5761051161174461173e36600486016123d0565b906134fa565b6040519182916020835260a06117c96117b461179e611788611772865160c060208b015260e08a01906124be565b6020870151898203601f190160408b01526124be565b6040860151888203601f190160608a01526124be565b6060850151878203601f190160808901526124be565b6080840151868203601f1901848801526124be565b910151838203601f190160c08501526124be565b50346101aa5760203660031901126101aa576117f7612485565b6117ff615772565b60018060a01b03166001600160601b0360a01b600154161760015580f35b50346101aa5760203660031901126101aa576004356001600160401b03811161065e576118516118579136906004016123d0565b90612da5565b604051918291602083526118c26118ac611896611880845160c0602089015260e08801906124be565b6020850151878203601f190160408901526124be565b6040840151868203601f190160608801526124be565b6060830151858203601f190160808701526124e3565b91608082015192601f198582030160a0860152835190818152602081016020808460051b84010196019380925b8484106119125788806105118a60a08b0151601f198483030160c08501526124be565b919395969092949750601f198282030184528751602061193b825160408552604085019061253c565b910151916020818303910152815180825260208201906020808260051b850101940192865b82811061198557505050505060208060019299019401940191889796959394916118ef565b9091929394601f9d9c9d19838203018552855160606119d76119c56119b384516080875260808701906124be565b602085015186820360208801526124be565b604084015185820360408701526124be565b91015191606081830391015281519081815260208101906020808460051b8301019401928b915b818310611a225750505050506020809d9e9d60019297019501910192919092611960565b9091929394602080611a40600193601f19868203018952895161253c565b97019501930191906119fe565b50346101aa5760403660031901126101aa57611a6761246f565b336001600160a01b03821603611a83576101a69060043561597e565b63334bd91960e11b8252600482fd5b50346101aa5760203660031901126101aa57611aac612485565b611ab4615772565b60018060a01b03166001600160601b0360a01b600254161760025580f35b50346101aa5760403660031901126101aa576101a6600435611af261246f565b90611b0e61019c82600052600060205260016040600020015490565b6158f3565b50346101aa5760203660031901126101aa576020611b41600435600052600060205260016040600020015490565b604051908152f35b50346101aa57611b58366123fd565b600154604051630fe3478b60e31b81526020600482015293969593946001600160a01b039091169290888680611b9260248201898c6129db565b0381875afa899681611db0575b50611bac57610944612bf0565b8897604051602081019082848337611bd86020828d86820190838201520301601f19810183528261263e565b5190206040516020810190681050d512559055115160ba1b825260098152611c0160298261263e565b51902003611c5b57505050508460208401525b803b1561100c57611c49858094610ab960405197889687958694633d5758e160e01b8652604060048701526044860190612923565b848103600319016024860152916129db565b604051602081019082848337611c856020828d86820190838201520301601f19810183528261263e565b51902060405160208101906a11115050d512559055115160aa1b8252600b8152611cb0602b8261263e565b51902003611cc8575050505060016020840152611c14565b604051602081019082848337611cf26020828d86820190838201520301601f19810183528261263e565b51902060405160208101906614915593d2d15160ca1b825260078152611d1960278261263e565b51902003611d31575050505060026020840152611c14565b611d58602060405183819483830196873781018c838201520301601f19810183528261263e565b5190206040516020810190691511549352539055115160b21b8252600a8152611d82602a8261263e565b51902014611d92575b5050611c14565b611da49160036020870152369161267a565b60808401523880611d8b565b611dc59197503d808c833e6105ea818361263e565b9538611b9f565b50346101aa5780611ddc36612398565b6003546001600160a01b0316803b15610f195760405163037f39e160e51b8152602060048201529183918391829084908290610d6a90610d58611ebb611e9c611e7d611e5e611e3f611e2e87806129aa565b60c060248c015260e48b01916129db565b611e4c60208801886129aa565b8a83036023190160448c0152906129db565b611e6b60408701876129aa565b8983036023190160648b0152906129db565b611e8a60608601866129aa565b8883036023190160848a0152906129db565b611ea960808501856129aa565b8783036023190160a4890152906129db565b9160a08101906129aa565b50346101aa57611ed536612398565b611edf8180612978565b9050156122c45760208101611ef48183612978565b90501561227f576040820190611f0a8284612978565b90501561223a576002546001600160a01b031690813b1561100c57611f9d611f7e611f6194610cd5611f77611fbb95611e4c611f708b602460c06040519d8e93636f13867560e01b855260206004860152806129aa565b929093015260e48d01916129db565b918b6129aa565b91886129aa565b611f8b60608701876129aa565b868303602319016084880152906129db565b611faa60808601866129fc565b8482036023190160a4860152612a10565b60a0840135601e198536030181121561223657918391858794016023198483030160c4850152611fef602083019180612a4b565b8091926020855252604083019260408260051b820101938388925b8484106120aa575050505050508383809203925af1801561209f57612067575b50612056817fb80b7feb5ab77629f88e8592b0889291da376e92b36781b4bf60a256c2af599292612978565b610ff1604051928392339184612ab4565b826120977fb80b7feb5ab77629f88e8592b0889291da376e92b36781b4bf60a256c2af599293946120569361263e565b92915061202a565b6040513d85823e3d90fd5b92959194975092959750603f198282030184526120c787846129fc565b60408201908c6120d78280612a4b565b8091946040875252606085019060608160051b8701019480935b82811061218357505050505061216f600193602093612114848680960190612aa0565b918481830391015261216161215661213d61212f85806129aa565b6060865260608601916129db565b612149878601866129aa565b90858303898701526129db565b9260408101906129aa565b9160408185039101526129db565b98019401940190938a97959289979561200a565b9091929395602080612229600193605f198c82030189526121a48b88612a8c565b9061221b6122106121e26121c96121bb86806129aa565b60a0875260a08701916129db565b6121d5888701876129aa565b908683038a8801526129db565b6121ee60408601612a7f565b1515604085015261220260608601866129aa565b9085830360608701526129db565b9260808101906129aa565b9160808185039101526129db565b98019501939291016120f1565b8580fd5b60405162461bcd60e51b815260206004820152601c60248201527f536368656d61207469746c652063616e6e6f7420626520656d707479000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601a60248201527f536368656d612055524c2063616e6e6f7420626520656d7074790000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601960248201527f536368656d612049442063616e6e6f7420626520656d707479000000000000006044820152606490fd5b50346101aa57806003193601126101aa5760206001600160401b03600080516020615ecd83398151915254161515604051908152f35b90503461065e57602036600319011261065e5760043563ffffffff60e01b81168091036123945760209250637965db0b60e01b8114908115612383575b5015158152f35b6301ffc9a760e01b1490503861237c565b8280fd5b60206003198201126123cb57600435906001600160401b0382116123cb5760c09082900360031901126123cb5760040190565b600080fd5b9181601f840112156123cb578235916001600160401b0383116123cb57602083818601950101116123cb57565b60606003198201126123cb576004356001600160401b0381116123cb5781612427916004016123d0565b929092916024356001600160401b0381116123cb5781612449916004016123d0565b92909291604435906001600160401b0382116123cb5761246b916004016123d0565b9091565b602435906001600160a01b03821682036123cb57565b600435906001600160a01b03821682036123cb57565b60005b8381106124ae5750506000910152565b818101518382015260200161249e565b906020916124d78151809281855285808601910161249b565b601f01601f1916010190565b9080602083519182815201916020808360051b8301019401926000915b83831061250f57505050505090565b909192939460208061252d600193601f1986820301875289516124be565b97019301930191939290612500565b61256691602061255583516040845260408401906124be565b9201519060208184039101526124be565b90565b60a081019081106001600160401b0382111761258457604052565b634e487b7160e01b600052604160045260246000fd5b60c081019081106001600160401b0382111761258457604052565b604081019081106001600160401b0382111761258457604052565b61014081019081106001600160401b0382111761258457604052565b6101c081019081106001600160401b0382111761258457604052565b606081019081106001600160401b0382111761258457604052565b602081019081106001600160401b0382111761258457604052565b90601f801991011681019081106001600160401b0382111761258457604052565b6001600160401b03811161258457601f01601f191660200190565b9291926126868261265f565b91612694604051938461263e565b8294818452818301116123cb578281602093846000960137010152565b600311156126bb57565b634e487b7160e01b600052602160045260246000fd5b61274f61273d61272b6127196127076126f586516101c089526101c08901906124e3565b602087015188820360208a01526124be565b604086015187820360408901526124be565b606085015186820360608801526124be565b608084015185820360808701526124be565b60a083015184820360a08601526124be565b60c0820151151560c084015260e08201519083810360e0850152815180825260208201916020808360051b8301019401926000915b8383106128905750505050506128076127f36127df6127cb6127b76101a0956101008801518982036101008b01526124e3565b6101208701518882036101208a01526124e3565b6101408601518782036101408901526124e3565b6101608501518682036101608801526124e3565b6101808401518582036101808701526124e3565b910151916101a0818303910152815180825260208201916020808360051b8301019401926000915b83831061283e57505050505090565b9091929394602080612881600193601f1986820301875289519060406128706107ce84516060855260608501906124be565b9201519060408184039101526124e3565b9701930193019193929061282f565b9091929394602080600192601f198582030186528851906080806128f86128e66128c3865160a0875260a08701906124be565b878701516128d0816126b1565b88870152604087015186820360408801526124be565b606086015185820360608701526124be565b93015191612905836126b1565b015297019301930191939290612784565b9060048210156126bb5752565b612566916080610862612966612942855160a0865260a08601906124be565b61295460208701516020870190612916565b604086015185820360408701526124be565b606085015184820360608601526124be565b903590601e19813603018212156123cb57018035906001600160401b0382116123cb576020019181360383136123cb57565b9035601e19823603018112156123cb5701602081359101916001600160401b0382116123cb5781360383136123cb57565b908060209392818452848401376000828201840152601f01601f1916010190565b9035603e19823603018112156123cb570190565b61256691612a3d612a32612a2484806129aa565b6040855260408501916129db565b9260208101906129aa565b9160208185039101526129db565b9035601e19823603018112156123cb5701602081359101916001600160401b0382116123cb578160051b360383136123cb57565b359081151582036123cb57565b9035609e19823603018112156123cb570190565b9035605e19823603018112156123cb570190565b91602091612acd919594956040855260408501916129db565b6001600160a01b03909416910152565b81601f820112156123cb578051612af38161265f565b92612b01604051948561263e565b818452602082840101116123cb57612566916020808501910161249b565b6020818303126123cb578051906001600160401b0382116123cb570160a0818303126123cb5760405191612b5283612569565b81516001600160401b0381116123cb5781612b6e918401612add565b8352602082015160048110156123cb57602084015260408201516001600160401b0381116123cb5781612ba2918401612add565b604084015260608201516001600160401b0381116123cb5781612bc6918401612add565b606084015260808201516001600160401b0381116123cb57612be89201612add565b608082015290565b60009060033d11612bfd57565b905060046000803e60005160e01c90565b600060443d10612566576040513d600319016004823e8051913d60248401116001600160401b03841117612c7b57828201928351916001600160401b038311612c73573d84016003190185840160200111612c7357506125669291016020019061263e565b949350505050565b92915050565b60405190612c8e8261259a565b606060a08382815282602082015282604082015282808201528260808201520152565b6001600160401b0381116125845760051b60200190565b9080601f830112156123cb578151612cdf81612cb1565b92612ced604051948561263e565b81845260208085019260051b820101918383116123cb5760208201905b838210612d1957505050505090565b81516001600160401b0381116123cb57602091612d3b87848094880101612add565b815201910190612d0a565b91906040838203126123cb5760405190612d5f826125b5565b819380516001600160401b0381116123cb5782612d7d918301612add565b83526020810151916001600160401b0383116123cb57602092612da09201612add565b910152565b600091612db0612c81565b5060018060a01b0360035416906040516102205263f1a03f1b60e01b610220515260206004610220510152612df56102205193610220519260246102205101916129db565b039061022051905afa80600091612e95575b61256657612e13612bf0565b6308c379a014612e82575b60405162461bcd60e51b815260206004820152603660248201527f556e6b6e6f776e206572726f72206f6363757272656420647572696e67205a4b604482015275140818dc9959195b9d1a585b081c995d1c9a595d985b60521b6064820152608490fd5b612e8a612c0e565b806109c55750612e1e565b903d610200526102005181610220513e612eb5610200516102205161263e565b60206102205161020051610220510103126101aa5761022051516101e0526001600160401b036101e051116101aa5760c06101e051610220510161020051610220510103126101aa5760405190612f0b8261259a565b6101e0516102205101516001600160401b03811161065e57612f4090610200516102205101906101e051610220510101612add565b825260206101e051610220510101516001600160401b03811161065e57612f7a90610200516102205101906101e051610220510101612add565b602083015260406101e051610220510101516001600160401b03811161065e57612fb790610200516102205101906101e051610220510101612add565b604083015260606101e051610220510101516001600160401b03811161065e57612ff490610200516102205101906101e051610220510101612cc8565b606083015260806101e05161022051010151610160526001600160401b0361016051116101aa57610200516102205101601f610160516101e0516102205101010112156101aa57610160516101e051610220510101516101a05261306d61305d6101a051612cb1565b6040516101c0526101c05161263e565b6101c051610140526101a0516101c0515260206101c051016101405261020051610220510160206101a05160051b610160516101e0516102205101010101116101aa576020610160516101e05161022051010101610180525b60206101a05160051b610160516101e05161022051010101016101805110613136576101c051608083015260a06101e05161022051010151906001600160401b0382116101aa575061312b90610200516102205101906101e051610220510101612add565b60a082015290612e07565b61018051516001600160401b03811161065e57610160516101e0516102205101010160a0526040601f1960a0516102005161022051010301126101aa5760405161012052613186610120516125b5565b602060a05101516001600160401b03811161065e576131b59060206102005161022051019160a0510101612d46565b6101205152604060a05101516080526001600160401b03608051116101aa57610200516102205101601f602060805160a05101010112156101aa57602060805160a05101015160e05261321c61320c60e051612cb1565b604051610100526101005161263e565b610100515060e051610100515260206101005101610200516102205101602060e05160051b8160805160a051010101011161065e5760805160a0510160400160c0525b602060e05160051b8160805160a0510101010160c051106132ab5750610100516020610120510152610120516101405152602061014051016101405260206101805101610180526130c6565b60c051516001600160401b038111612394576080601f19826020835160a0510101016102005161022051010301126123945760405190608082018281106001600160401b038211176134e657604090815260805160a05101820101516001600160401b03811161100c5761333790602061020051610220510191848260805160a0510101010101612add565b825260805160a051018101606001516001600160401b03811161100c5761337690602061020051610220510191848260805160a0510101010101612add565b60208301526080805160a05101820101516001600160401b03811161100c576133b790602061020051610220510191848260805160a0510101010101612add565b60408301526080816020825160a0510101010151906001600160401b03821161100c57610200516102205101601f602084848260805160a051010101010101121561100c5760805160a05101810182016040015161341481612cb1565b92613422604051948561263e565b818452602084019061020051610220510160208460051b8184888260805160a05101010101010101116134e25760805160a0510184018101606001915b60805160a0516060910186018301600586901b0101831061349a57505050505090602092916060820152815201602060c0510160c05261325f565b82516001600160401b0381116134de576020916134d38392836102005161022051019181888c8260805160a05101010101010101612d46565b81520192019161345f565b8980fd5b8780fd5b634e487b7160e01b85526041600452602485fd5b60009061353f92613509612c81565b5060035460405163533b3a9560e01b8152602060048201529485936001600160a01b0390921692849283929160248401916129db565b03915afa80916000916135ee575b50906125665761355b612bf0565b6308c379a0146135db575b60405162461bcd60e51b815260206004820152604160248201527f556e6b6e6f776e206572726f72206f6363757272656420647572696e67205a4b60448201527f502063726564656e7469616c20646566696e6974696f6e2072657472696576616064820152601b60fa1b608482015260a490fd5b6135e3612c0e565b806109c55750613566565b3d8083833e6135fd818361263e565b810190602081830312612394578051906001600160401b03821161048657019160c0838303126101aa57604051926136348461259a565b80516001600160401b0381116123945783613650918301612add565b845260208101516001600160401b0381116123945783613671918301612add565b602085015260408101516001600160401b0381116123945783613695918301612add565b604085015260608101516001600160401b03811161239457836136b9918301612add565b606085015260808101516001600160401b03811161239457836136dd918301612add565b608085015260a0810151916001600160401b0383116101aa5750613702929101612add565b60a08201523861354d565b9061372790612566969495936060845260608401916129db565b6001600160a01b0390941660208201528084036040909101526129db565b60405190613752826125b5565b60606020838281520152565b6000906137f392604051613771816125d0565b6060815261377d613745565b602082015260606040820152613791613745565b606082015260606080820152606060a0820152606060c0820152606060e0820152606061010082015260606101208201525060018060a01b036002541690604051809581948293633ab74f4360e21b84526020600485015260248401916129db565b03915afa809160009161388e575b50906125665761380f612bf0565b6308c379a01461387b575b60405162461bcd60e51b815260206004820152603360248201527f556e6b6e6f776e206572726f72206f6363757272656420647572696e67205643604482015272081b595d1859185d18481c995d1c9a595d985b606a1b6064820152608490fd5b613883612c0e565b806109c5575061381a565b3d8083833e61389d818361263e565b810190602081830312612394578051906001600160401b038211610486570191610140838303126101aa57604051926138d5846125d0565b80516001600160401b03811161239457836138f1918301612add565b845260208101516001600160401b0381116123945783613912918301612d46565b602085015260408101516001600160401b0381116123945783613936918301612add565b604085015260608101516001600160401b038111612394578361395a918301612d46565b606085015260808101516001600160401b038111612394578361397e918301612add565b608085015260a08101516001600160401b03811161239457836139a2918301612add565b60a085015260c08101516001600160401b03811161239457836139c6918301612add565b60c085015260e08101516001600160401b03811161239457836139ea918301612add565b60e08501526101008101516001600160401b0381116123945783613a0f918301612add565b610100850152610120810151916001600160401b0383116101aa5750613a36929101612add565b61012082015238613801565b519081151582036123cb57565b91906101c0838203126123cb57604051613a68816125ec565b809380516001600160401b0381116123cb5783613a86918301612cc8565b825260208101516001600160401b0381116123cb5783613aa7918301612add565b602083015260408101516001600160401b0381116123cb5783613acb918301612add565b604083015260608101516001600160401b0381116123cb5783613aef918301612add565b606083015260808101516001600160401b0381116123cb5783613b13918301612add565b608083015260a08101516001600160401b0381116123cb5783613b37918301612add565b60a0830152613b4860c08201613a42565b60c083015260e08101516001600160401b0381116123cb57810183601f820112156123cb57805190613b7982612cb1565b91613b87604051938461263e565b80835260208084019160051b830101918683116123cb5760208101915b838310613d8d575050505060e08301526101008101516001600160401b0381116123cb5783613bd4918301612cc8565b6101008301526101208101516001600160401b0381116123cb5783613bfa918301612cc8565b6101208301526101408101516001600160401b0381116123cb5783613c20918301612cc8565b6101408301526101608101516001600160401b0381116123cb5783613c46918301612cc8565b6101608301526101808101516001600160401b0381116123cb5783613c6c918301612cc8565b6101808301526101a0810151906001600160401b0382116123cb57019180601f840112156123cb57825192613ca084612cb1565b93613cae604051958661263e565b80855260208086019160051b830101918383116123cb5760208101915b838310613cde5750505050506101a00152565b82516001600160401b0381116123cb578201906060828703601f1901126123cb5760405190613d0c82612608565b60208301516001600160401b0381116123cb57876020613d2e92860101612add565b825260408301516001600160401b0381116123cb57876020613d5292860101612add565b60208301526060830151916001600160401b0383116123cb57613d7d88602080969581960101612cc8565b6040820152815201920191613ccb565b82516001600160401b0381116123cb5782019060a0828a03601f1901126123cb5760405191613dbb83612569565b60208101516001600160401b0381116123cb578a6020613ddd92840101612add565b8352604081015160038110156123cb57602084015260608101516001600160401b0381116123cb578a6020613e1492840101612add565b60408401526080810151906001600160401b0382116123cb57613e3e8b602060a094840101612add565b606085015201519060038210156123cb578260209392608085940152815201920191613ba4565b600090613f2092604051613e78816125b5565b604051613e84816125ec565b60608152606060208201526060604082015260608082015260606080820152606060a08201528460c0820152606060e08201526060610100820152606061012082015260606101408201526060610160820152606061018082015260606101a082015281528360208201525060018060a01b036001541690604051809581948293631f32da9960e21b84526020600485015260248401916129db565b03915afa60009181613f3a575b5061256657610944612bf0565b90913d8082843e613f4b818461263e565b82019160208184031261065e578051906001600160401b038211612394570160408184031261065e5760405192613f81846125b5565b81516001600160401b038111610486578291613fa09160209401613a4f565b845201519060048210156101aa575060208201529038613f2d565b90602083828152019260208260051b82010193836000925b848410613fe35750505050505090565b90919293949560208061400b600193601f198682030188526140058b886129aa565b906129db565b9801940194019294939190613fd3565b9080601f830112156123cb578160206125669335910161267a565b9080601f830112156123cb57813561404d81612cb1565b9261405b604051948561263e565b81845260208085019260051b820101918383116123cb5760208201905b83821061408757505050505090565b81356001600160401b0381116123cb576020916140a98784809488010161401b565b815201910190614078565b9291606091601e198536030160e086013512156123cb576001600160401b0360e0860135860135116123cb5760e08501358501803560051b36036020909101136123cb5760e08501358501351561525e5760e08501358501602081013590360360be19018112156123cb5761414561413e61414a9260e08901358901016020608082019101612978565b369161267a565b615a34565b8051602090910120600154604080516310a2351160e11b815260048101919091526001600160a01b03928316939290911681886142466142276142086141ea6141cb6141ac6141998780612a4b565b6101c060448b01526102048a0191613fbb565b6141b960208801886129aa565b8983036043190160648b0152906129db565b6141d860408701876129aa565b8883036043190160848a0152906129db565b6141f68c8601866129aa565b8783036043190160a4890152906129db565b61421560808501856129aa565b8683036043190160c4880152906129db565b61423460a08401846129aa565b8583036043190160e4870152906129db565b61425260c08301612a7f565b151561010484015261426760e0830183612a4b565b604319858403016101248601528083526020830160208260051b85010193836000915b8483106151935750505050505061430c6142eb836142d86142cc61432d956142b961010061434e990185612a4b565b8a8303604319016101448c015290613fbb565b91610120810190612a4b565b8783036043190161016489015290613fbb565b6142f96101408e018e612a4b565b8683036043190161018488015290613fbb565b61431a6101608d018d612a4b565b858303604319016101a487015290613fbb565b61433b6101808c018c612a4b565b848303604319016101c486015290613fbb565b61435c6101a08b018b612a4b565b604319848403016101e4850152808352602083019260208260051b82010193836000925b8d8585106151205750505050505050918160008160209533602483015203925af1600091816150e4575b50614436576143b7612bf0565b6308c379a014614423575b60405162461bcd60e51b815260206004820152603360248201527f556e6b6e6f776e206572726f72206f6363757272656420647572696e6720646f60448201527231bab6b2b73a103932b3b4b9ba3930ba34b7b760691b6064820152608490fd5b61442b612c0e565b806109c557506143c2565b1561509f576144b1927f44ca9609d2fe597457041d7e98533a969452ef425c10a46d0dd9f074497ea1ba61446d6020890189612978565b61447e604051928392339184612ab4565b0390a16144a9602060405183819483830196873781016000838201520301601f19810183528261263e565b5190206158f3565b506101c0833603126123cb57604051926144ca846125ec565b80356001600160401b0381116123cb576144e79036908301614036565b845260208101356001600160401b0381116123cb57614509903690830161401b565b602085015260408101356001600160401b0381116123cb5761452e903690830161401b565b6040850152818101356001600160401b0381116123cb57614552903690830161401b565b8285015260808101356001600160401b0381116123cb57614576903690830161401b565b608085015260a08101356001600160401b0381116123cb5761459b903690830161401b565b60a08501526145ac60c08201612a7f565b60c08501526001600160401b0360e0820135116123cb5736601f60e083013583010112156123cb576145e460e0820135820135612cb1565b6145f1604051918261263e565b60e0820135820180358083526020808401923660059390931b0101116123cb57602060e0840135840101905b60e08401358401803560051b016020018210614fc057505060e08501526101008101356001600160401b0381116123cb5761465b9036908301614036565b6101008501526101208101356001600160401b0381116123cb576146829036908301614036565b6101208501526101408101356001600160401b0381116123cb576146a99036908301614036565b6101408501526101608101356001600160401b0381116123cb576146d09036908301614036565b6101608501526101808101356001600160401b0381116123cb576146f79036908301614036565b6101808501526101a08101356001600160401b0381116123cb5736601f8284010112156123cb57808201359061472c82612cb1565b9261473a604051948561263e565b82845260208401913660208560051b8385010101116123cb57602081830101925b60208560051b83850101018410614f0a5750505050506101a084015261477f615c26565b926000935b60e08201518051861015614986578561479c91615a11565b5180516148d26011601860208501516147b4816126b1565b604086015195601e60808b830151920151916147cf836126b1565b6027604051998a95602087019a663d9134b2111d1160c91b8c526147fc815180926020878c01910161249b565b8701906c11161135b2bcaa3cb832911d1160991b8483015261481d816126b1565b60f81b60348201526f11161131b7b73a3937b63632b9111d1160811b603582015261485282518093602060458501910161249b565b01017f222c227075626c69634b65794d756c746962617365223a2200000000000000008382015261488d82518093602060368501910161249b565b0101906d11161130baba342a3cb832911d1160911b848301526148af816126b1565b60f81b602682015261227d60f01b60278201520301600e1981018552018361263e565b60e0840151516000198101939084116149705760206149349361494382614952958c6001996000911060001461495a575061490b615c45565b935b60405198876149258b9951809287808d01910161249b565b8801915180938584019061249b565b0101918281519485920161249b565b0103601f19810183528261263e565b940193614784565b60405190614968848361263e565b81529361490d565b634e487b7160e01b600052601160045260246000fd5b50929350906149c460016020604051866149a9829851809285808601910161249b565b8101605d60f81b838201520301601e1981018652018461263e565b6149cc615c26565b936000945b6101a08401518051871015614af6576149ec87602792615a11565b51614ab4600260118351936015614a0b60406020840151930151615d66565b6040519788936020850198663d9134b2111d1160c91b8a52614a36815180926020868a01910161249b565b85017411161139b2b93b34b1b2a2b7323837b4b73a111d1160591b83820152614a69825180936020603c8501910161249b565b010170222c227365727669636554797065223a5b60781b83820152614a9882518093602060268501910161249b565b0101615d7d60f01b838201520301601d1981018552018361263e565b6101a0860151516000198101939084116149705760206149349361494382614aee958d6001996000911060001461495a575061490b615c45565b9501946149d1565b5091909450614b346001602060405185614b19829751809285808601910161249b565b8101605d60f81b838201520301601e1981018552018361263e565b614b3e8351615d66565b926020810151946040820151928201519060808301519060a08401519060c08501511515600090600014614ee45750604051614b7b60408261263e565b60048152637472756560e01b60208201525b610100860151614b9c90615d66565b92610120870151614bac90615d66565b94610140880151614bbc90615d66565b96610160890151614bcc90615d66565b986101800151614bdb90615d66565b996040519d8e9d8e6b7b22636f6e74657874223a5b60a01b602082015281519182602c83019160200191614c0e9261249b565b01672e961134b2111d1160c11b602c82015281519182603483019160200191614c369261249b565b01602c016f11161131b7b73a3937b63632b9111d1160811b600882015281519182601883019160200191614c699261249b565b016008016c11161131b932b0ba32b2111d1160991b601082015281519182601d83019160200191614c999261249b565b016010016c1116113ab83230ba32b2111d1160991b600d82015281519182601a83019160200191614cc99261249b565b01600d016e1116113b32b939b4b7b724b2111d1160891b600d82015281519182601c83019160200191614cfb9261249b565b01600d016f1116113232b0b1ba34bb30ba32b2111d60811b600f82015281519182601f83019160200191614d2e9261249b565b01600f017516113b32b934b334b1b0ba34b7b726b2ba3437b2111d60511b601082015281519182602683019160200191614d679261249b565b01601001742c22617373657274696f6e734d6574686f64223a5b60581b601682015281519182602b83019160200191614d9f9261249b565b01601601735d2c2261757468656e7469636174696f6e223a5b60601b601582015281519182602983019160200191614dd69261249b565b01601501715d2c226b657941677265656d656e74223a5b60701b601482015281519182602683019160200191614e0b9261249b565b01601401601281017f5d2c226361706162696c697479496e766f636174696f6e223a5b000000000000905281519182602c83019160200191614e4c9261249b565b01601201601a81017f5d2c226361706162696c69747944656c65676174696f6e223a5b000000000000905281519182603483019160200191614e8d9261249b565b01601a016c2e961139b2b93b34b1b2b9911d60991b601a82015281519182602783019160200191614ebd9261249b565b01601a01600d8101607d60f81b905203600d01601e1981018252600101612566908261263e565b50604051614ef360408261263e565b600581526466616c736560d81b6020820152614b8d565b83356001600160401b0381116123cb57828401019087601f1983360301126123cb5760405191614f3983612608565b60208101356001600160401b0381116123cb57614f5c906020369184010161401b565b835260408101356001600160401b0381116123cb57614f81906020369184010161401b565b602084015288810135916001600160401b0383116123cb57602093614fae85949385809536920101614036565b6040820152815201940193905061475b565b81356001600160401b0381116123cb5760e08501358501019060a0601f1983360301126123cb5760405191614ff483612569565b60208101356001600160401b0381116123cb57615017906020369184010161401b565b8352604081013560038110156123cb576020840152868101356001600160401b0381116123cb5761504e906020369184010161401b565b60408401526080810135906001600160401b0382116123cb5761507960a0926020369184010161401b565b8885015201359060038210156123cb57826020939260808594015281520191019061461d565b60405162461bcd60e51b815260206004820152601c60248201527f446f63756d656e7420726567697374726174696f6e206661696c6564000000006044820152606490fd5b9091506020813d602011615118575b816151006020938361263e565b810103126123cb5761511190613a42565b90386143aa565b3d91506150f3565b86985061518160209294969891839261517361516861213d6151506001999b9d8d601f198d88030190528c612aa0565b9461515b86806129aa565b90918087528601916129db565b926040810190612a4b565b916040818503910152613fbb565b98019401940191889695939491614380565b929591949750929550601f198282030185526151af8784612a8c565b906151cb6151bd83806129aa565b60a0845260a08401916129db565b60208301359060038210156123cb578f61520e61522892846151ee6080966126b1565b602087015261520060408801886129aa565b9087830360408901526129db565b9061521b818701876129aa565b91868403908701526129db565b9201359060038210156123cb576001928260806020949361524986956126b1565b01529801950193018e9592899795949261428a565b634e487b7160e01b600052603260045260246000fd5b929061528d9061256695936040865260408601916129db565b9260208185039101526129db565b600090615319926040516152ae8161259a565b6060815260606020820152606060408201526060808201526152ce613745565b60808201526040516152df81612623565b6060815260a08201525060018060a01b03600254169060405180958194829363a5dba8d160e01b84526020600485015260248401916129db565b03915afa80916000916153b2575b509061256657615335612bf0565b6308c379a01461539f575b60405162461bcd60e51b815260206004820152603160248201527f556e6b6e6f776e206572726f72206f6363757272656420647572696e67205643604482015270081cd8da195b58481c995d1c9a595d985b607a1b6064820152608490fd5b6153a7612c0e565b806109c55750615340565b3d8083833e6153c1818361263e565b810190602081830312612394578051906001600160401b03821161048657019160c0838303126101aa57604051926153f88461259a565b80516001600160401b0381116123945783615414918301612add565b845260208101516001600160401b0381116123945783615435918301612add565b602085015260408101516001600160401b0381116123945783615459918301612add565b604085015260608101516001600160401b038111612394578361547d918301612add565b606085015260808101516001600160401b03811161239457836154a1918301612d46565b608085015260a0810151906001600160401b03821161239457019160208382031261065e57604051926154d384612623565b8051906001600160401b038211610486570181601f820112156123945780516154fb81612cb1565b93615509604051958661263e565b81855260208086019260051b8401019284841161065e5760208101925b84841061554057505050505050815260a082015238615327565b83516001600160401b0381116104865782016040818803601f190112610486576040519061556d826125b5565b60208101516001600160401b0381116122365760209082010188601f8201121561223657805161559c81612cb1565b916155aa604051938461263e565b81835260208084019260051b820101908b821161576e5760208101925b828410615682575050505082526040810151906001600160401b0382116122365790602091010160608189031261100c576040519061560582612608565b80516001600160401b038111610add5789615621918301612add565b825260208101516001600160401b038111610add5789615642918301612add565b60208301526040810151906001600160401b038211610add579161566e8a602096949387969401612add565b604082015283820152815201930192615526565b83516001600160401b038111610c4257820160a0818f03601f190112610c4257604051906156af82612569565b60208101516001600160401b03811161576a578f60206156d192840101612add565b825260408101516001600160401b03811161576a578f60206156f592840101612add565b602083015261570660608201613a42565b604083015260808101516001600160401b03811161576a578f602061572d92840101612add565b606083015260a0810151906001600160401b03821161576a57918f61575a90602080969481960101612add565b60808201528152019301926155c7565b8c80fd5b8880fd5b3360009081527f7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec602052604090205460ff16156157ab57565b63e2517d3f60e01b600052336004527fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177560245260446000fd5b60008181526020818152604080832033845290915290205460ff16156158075750565b63e2517d3f60e01b6000523360045260245260446000fd5b6001600160a01b03811660009081527f7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec602052604090205460ff166158ed576001600160a01b031660008181527f7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec60205260408120805460ff191660011790553391907fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b50600090565b6000818152602081815260408083206001600160a01b038616845290915290205460ff16615977576000818152602081815260408083206001600160a01b0395909516808452949091528120805460ff19166001179055339291907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b5050600090565b6000818152602081815260408083206001600160a01b038616845290915290205460ff1615615977576000818152602081815260408083206001600160a01b0395909516808452949091528120805460ff19169055339291907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9080a4600190565b90815181101561525e570160200190565b805182101561525e5760209160051b010190565b60001981146149705760010190565b90815115615c0257815191615a4883612cb1565b92615a56604051948561263e565b808452615a65601f1991612cb1565b0136602085013760005b8151811015615aa5578060ff615a93615a8a60019486615a00565b5160f81c615c64565b16615a9e8287615a11565b5201615a6f565b509060005b8351811080615bf0575b15615ac757615ac290615a25565b615aaa565b915191615ad38361265f565b92615ae1604051948561263e565b808452615af0601f199161265f565b0136602085013782515b8451821015615bae5780156149705760001901928160005b8651821015615b6257615b258288615a11565b51603a820291808304603a14901517156149705780820190818311614970576001926101009260081c615b58868c615a11565b5208910190615b12565b92949193919260f81b6001600160f81b03191660001a9050615b848385615a00565b53615b8f8486615a11565b5115615b9e575b919290615afa565b92615ba890615a25565b92615b96565b919350505b8151811080615bd4575b15615bd057615bcb90615a25565b615bb3565b5090565b506001600160f81b0319615be88284615a00565b511615615bbd565b50615bfb8185615a11565b5115615ab4565b9050602060405190615c14818361263e565b60008252601f19810190369083013790565b60405190615c3560408361263e565b60018252605b60f81b6020830152565b60405190615c5460408361263e565b60018252600b60fa1b6020830152565b60405190615c7360608361263e565b603a82527f31323334353637383941424344454647484a4b4c4d4e5051525354555657585960208301527f5a6162636465666768696a6b6d6e6f707172737475767778797a000000000000604083015260005b825160ff821690811015615d12576001600160f81b031990615ce89085615a00565b511660ff60f81b8360f81b1614615d0c5760ff1660ff811461497057600101615cc6565b91505090565b60405162461bcd60e51b815260206004820152602660248201527f436861726163746572206e6f7420666f756e6420696e2042617365353820616c6044820152651c1a1858995d60d21b6064820152608490fd5b90602091604051615d77848261263e565b60008152926000935b8251851015615e4557615d938584615a11565b518351600019810192908311614970576001615e279181946000908a10600014615e2f575081615dc1615c45565b876040519684615dda899651809285808a01910161249b565b8501601160f91b83820152615df8825180938560218501910161249b565b0101601160f91b83820152615e16825180938b60028501910161249b565b01010301601f19810183528261263e565b940193615d80565b6040518391615e3e898361263e565b8152615dc1565b93505050565b90615e715750805115615e6057805190602001fd5b63d6bda27560e01b60005260046000fd5b81511580615ea3575b615e82575090565b639996b31560e01b60009081526001600160a01b0391909116600452602490fd5b50803b15615e7a56fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbcf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a2646970667358221220082f2ff4539d403ecf3c61fc42f54763354ba12f20d48fd6b653e189fcb922e264736f6c634300081b0033";
  public static final String FUNC_DEFAULT_ADMIN_ROLE = "DEFAULT_ADMIN_ROLE";
  public static final String FUNC_UPGRADE_INTERFACE_VERSION = "UPGRADE_INTERFACE_VERSION";
  public static final String FUNC_GETDIDDOC = "getDidDoc";
  public static final String FUNC_GETDIDDOCSTATUS = "getDidDocStatus";
  public static final String FUNC_GETROLEADMIN = "getRoleAdmin";
  public static final String FUNC_GETVCSCHEMA = "getVcSchema";
  public static final String FUNC_GETVCMETADATA = "getVcmetaData";
  public static final String FUNC_GETZKPCREDENTIAL = "getZKPCredential";
  public static final String FUNC_GETZKPCREDENTIALDEFINITION = "getZKPCredentialDefinition";
  public static final String FUNC_GRANTROLE = "grantRole";
  public static final String FUNC_HASINITIALIZED = "hasInitialized";
  public static final String FUNC_HASROLE = "hasRole";
  public static final String FUNC_INITIALIZE = "initialize";
  public static final String FUNC_PROXIABLEUUID = "proxiableUUID";
  public static final String FUNC_REGISTDIDDOC = "registDidDoc";
  public static final String FUNC_REGISTVCMETADATA = "registVcMetaData";
  public static final String FUNC_REGISTVCSCHEMA = "registVcSchema";
  public static final String FUNC_REGISTZKPCREDENTIAL = "registZKPCredential";
  public static final String FUNC_REGISTZKPCREDENTIALDEFINITION = "registZKPCredentialDefinition";
  public static final String FUNC_RENOUNCEROLE = "renounceRole";
  public static final String FUNC_REVOKEROLE = "revokeRole";
  public static final String FUNC_SETDOCUMENTSTORAGE = "setDocumentStorage";
  public static final String FUNC_SETVCMETASTORAGE = "setVcMetaStorage";
  public static final String FUNC_SETZKPSTORAGE = "setZKPStorage";
  public static final String FUNC_SUPPORTSINTERFACE = "supportsInterface";
  public static final String FUNC_UPDATEDIDDOCSTATUSINSERVICE = "updateDidDocStatusInService";
  public static final String FUNC_UPDATEDIDDOCSTATUSREVOCATION = "updateDidDocStatusRevocation";
  public static final String FUNC_UPDATEVCSTATS = "updateVcStats";
  public static final String FUNC_UPGRADETOANDCALL = "upgradeToAndCall";
  public static final Event DIDCREATED_EVENT = new Event(
      "DIDCreated",
      Arrays.<TypeReference<?>>asList(
          new TypeReference<Utf8String>() {
          },
          new TypeReference<Address>() {
          }
      )
  );
  public static final Event DIDDEACTIVATED_EVENT = new Event(
      "DIDDeactivated",
      Arrays.<TypeReference<?>>asList(
          new TypeReference<Utf8String>() {
          },
          new TypeReference<Address>() {
          }
      )
  );
  ;
  public static final Event DIDUPDATED_EVENT = new Event(
      "DIDUpdated",
      Arrays.<TypeReference<?>>asList(
          new TypeReference<Utf8String>() {
          },
          new TypeReference<Address>() {
          }
      )
  );
  ;
  public static final Event INITIALIZED_EVENT = new Event(
      "Initialized",
      Arrays.<TypeReference<?>>asList(new TypeReference<Uint64>() {
      })
  );
  ;
  public static final Event ROLEADMINCHANGED_EVENT = new Event(
      "RoleAdminChanged",
      Arrays.<TypeReference<?>>asList(
          new TypeReference<Bytes32>(true) {
          },
          new TypeReference<Bytes32>(true) {
          },
          new TypeReference<Bytes32>(true) {
          }
      )
  );
  ;
  public static final Event ROLEGRANTED_EVENT = new Event(
      "RoleGranted",
      Arrays.<TypeReference<?>>asList(
          new TypeReference<Bytes32>(true) {
          },
          new TypeReference<Address>(true) {
          },
          new TypeReference<Address>(true) {
          }
      )
  );
  ;
  public static final Event ROLEREVOKED_EVENT = new Event(
      "RoleRevoked",
      Arrays.<TypeReference<?>>asList(
          new TypeReference<Bytes32>(true) {
          },
          new TypeReference<Address>(true) {
          },
          new TypeReference<Address>(true) {
          }
      )
  );
  ;
  public static final Event SETUP_EVENT = new Event(
      "Setup",
      Arrays.<TypeReference<?>>asList()
  );
  ;
  public static final Event UPGRADED_EVENT = new Event(
      "Upgraded",
      Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {
      })
  );
  ;
  public static final Event VCISSUED_EVENT = new Event(
      "VCIssued",
      Arrays.<TypeReference<?>>asList(
          new TypeReference<Utf8String>() {
          },
          new TypeReference<Address>() {
          },
          new TypeReference<Utf8String>() {
          }
      )
  );
  ;
  public static final Event VCSCHEMACREATED_EVENT = new Event(
      "VCSchemaCreated",
      Arrays.<TypeReference<?>>asList(
          new TypeReference<Utf8String>() {
          },
          new TypeReference<Address>() {
          }
      )
  );
  ;
  public static final Event VCSTATUS_EVENT = new Event(
      "VCStatus",
      Arrays.<TypeReference<?>>asList(
          new TypeReference<Utf8String>() {
          },
          new TypeReference<Address>() {
          },
          new TypeReference<Utf8String>() {
          }
      )
  );
  ;
  private static String librariesLinkedBinary;
  ;

  @Deprecated
  protected OpenDID(String contractAddress, Web3j web3j, Credentials credentials,
                    BigInteger gasPrice, BigInteger gasLimit
  ) {
    super(
        BINARY,
        contractAddress,
        web3j,
        credentials,
        gasPrice,
        gasLimit
    );
  }

  protected OpenDID(String contractAddress, Web3j web3j, Credentials credentials,
                    ContractGasProvider contractGasProvider
  ) {
    super(
        BINARY,
        contractAddress,
        web3j,
        credentials,
        contractGasProvider
    );
  }

  @Deprecated
  protected OpenDID(String contractAddress, Web3j web3j, TransactionManager transactionManager,
                    BigInteger gasPrice, BigInteger gasLimit
  ) {
    super(
        BINARY,
        contractAddress,
        web3j,
        transactionManager,
        gasPrice,
        gasLimit
    );
  }

  protected OpenDID(String contractAddress, Web3j web3j, TransactionManager transactionManager,
                    ContractGasProvider contractGasProvider
  ) {
    super(
        BINARY,
        contractAddress,
        web3j,
        transactionManager,
        contractGasProvider
    );
  }

  public static List<DIDCreatedEventResponse> getDIDCreatedEvents(
      TransactionReceipt transactionReceipt
  ) {
    List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(
        DIDCREATED_EVENT,
        transactionReceipt
    );
    ArrayList<DIDCreatedEventResponse> responses =
        new ArrayList<DIDCreatedEventResponse>(valueList.size());
    for (Contract.EventValuesWithLog eventValues : valueList) {
      DIDCreatedEventResponse typedResponse = new DIDCreatedEventResponse();
      typedResponse.log = eventValues.getLog();
      typedResponse.did = (String) eventValues.getNonIndexedValues()
          .get(0)
          .getValue();
      typedResponse.controller = (String) eventValues.getNonIndexedValues()
          .get(1)
          .getValue();
      responses.add(typedResponse);
    }
    return responses;
  }

  public static DIDCreatedEventResponse getDIDCreatedEventFromLog(Log log) {
    Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(
        DIDCREATED_EVENT,
        log
    );
    DIDCreatedEventResponse typedResponse = new DIDCreatedEventResponse();
    typedResponse.log = log;
    typedResponse.did = (String) eventValues.getNonIndexedValues()
        .get(0)
        .getValue();
    typedResponse.controller = (String) eventValues.getNonIndexedValues()
        .get(1)
        .getValue();
    return typedResponse;
  }

  public static List<DIDDeactivatedEventResponse> getDIDDeactivatedEvents(
      TransactionReceipt transactionReceipt
  ) {
    List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(
        DIDDEACTIVATED_EVENT,
        transactionReceipt
    );
    ArrayList<DIDDeactivatedEventResponse> responses =
        new ArrayList<DIDDeactivatedEventResponse>(valueList.size());
    for (Contract.EventValuesWithLog eventValues : valueList) {
      DIDDeactivatedEventResponse typedResponse = new DIDDeactivatedEventResponse();
      typedResponse.log = eventValues.getLog();
      typedResponse.did = (String) eventValues.getNonIndexedValues()
          .get(0)
          .getValue();
      typedResponse.controller = (String) eventValues.getNonIndexedValues()
          .get(1)
          .getValue();
      responses.add(typedResponse);
    }
    return responses;
  }

  public static DIDDeactivatedEventResponse getDIDDeactivatedEventFromLog(Log log) {
    Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(
        DIDDEACTIVATED_EVENT,
        log
    );
    DIDDeactivatedEventResponse typedResponse = new DIDDeactivatedEventResponse();
    typedResponse.log = log;
    typedResponse.did = (String) eventValues.getNonIndexedValues()
        .get(0)
        .getValue();
    typedResponse.controller = (String) eventValues.getNonIndexedValues()
        .get(1)
        .getValue();
    return typedResponse;
  }

  public static List<DIDUpdatedEventResponse> getDIDUpdatedEvents(
      TransactionReceipt transactionReceipt
  ) {
    List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(
        DIDUPDATED_EVENT,
        transactionReceipt
    );
    ArrayList<DIDUpdatedEventResponse> responses =
        new ArrayList<DIDUpdatedEventResponse>(valueList.size());
    for (Contract.EventValuesWithLog eventValues : valueList) {
      DIDUpdatedEventResponse typedResponse = new DIDUpdatedEventResponse();
      typedResponse.log = eventValues.getLog();
      typedResponse.did = (String) eventValues.getNonIndexedValues()
          .get(0)
          .getValue();
      typedResponse.controller = (String) eventValues.getNonIndexedValues()
          .get(1)
          .getValue();
      responses.add(typedResponse);
    }
    return responses;
  }

  public static DIDUpdatedEventResponse getDIDUpdatedEventFromLog(Log log) {
    Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(
        DIDUPDATED_EVENT,
        log
    );
    DIDUpdatedEventResponse typedResponse = new DIDUpdatedEventResponse();
    typedResponse.log = log;
    typedResponse.did = (String) eventValues.getNonIndexedValues()
        .get(0)
        .getValue();
    typedResponse.controller = (String) eventValues.getNonIndexedValues()
        .get(1)
        .getValue();
    return typedResponse;
  }

  public static List<InitializedEventResponse> getInitializedEvents(
      TransactionReceipt transactionReceipt
  ) {
    List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(
        INITIALIZED_EVENT,
        transactionReceipt
    );
    ArrayList<InitializedEventResponse> responses =
        new ArrayList<InitializedEventResponse>(valueList.size());
    for (Contract.EventValuesWithLog eventValues : valueList) {
      InitializedEventResponse typedResponse = new InitializedEventResponse();
      typedResponse.log = eventValues.getLog();
      typedResponse.version = (BigInteger) eventValues.getNonIndexedValues()
          .get(0)
          .getValue();
      responses.add(typedResponse);
    }
    return responses;
  }

  public static InitializedEventResponse getInitializedEventFromLog(Log log) {
    Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(
        INITIALIZED_EVENT,
        log
    );
    InitializedEventResponse typedResponse = new InitializedEventResponse();
    typedResponse.log = log;
    typedResponse.version = (BigInteger) eventValues.getNonIndexedValues()
        .get(0)
        .getValue();
    return typedResponse;
  }

  public static List<RoleAdminChangedEventResponse> getRoleAdminChangedEvents(
      TransactionReceipt transactionReceipt
  ) {
    List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(
        ROLEADMINCHANGED_EVENT,
        transactionReceipt
    );
    ArrayList<RoleAdminChangedEventResponse> responses =
        new ArrayList<RoleAdminChangedEventResponse>(valueList.size());
    for (Contract.EventValuesWithLog eventValues : valueList) {
      RoleAdminChangedEventResponse typedResponse = new RoleAdminChangedEventResponse();
      typedResponse.log = eventValues.getLog();
      typedResponse.role = (byte[]) eventValues.getIndexedValues()
          .get(0)
          .getValue();
      typedResponse.previousAdminRole = (byte[]) eventValues.getIndexedValues()
          .get(1)
          .getValue();
      typedResponse.newAdminRole = (byte[]) eventValues.getIndexedValues()
          .get(2)
          .getValue();
      responses.add(typedResponse);
    }
    return responses;
  }

  public static RoleAdminChangedEventResponse getRoleAdminChangedEventFromLog(Log log) {
    Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(
        ROLEADMINCHANGED_EVENT,
        log
    );
    RoleAdminChangedEventResponse typedResponse = new RoleAdminChangedEventResponse();
    typedResponse.log = log;
    typedResponse.role = (byte[]) eventValues.getIndexedValues()
        .get(0)
        .getValue();
    typedResponse.previousAdminRole = (byte[]) eventValues.getIndexedValues()
        .get(1)
        .getValue();
    typedResponse.newAdminRole = (byte[]) eventValues.getIndexedValues()
        .get(2)
        .getValue();
    return typedResponse;
  }

  public static List<RoleGrantedEventResponse> getRoleGrantedEvents(
      TransactionReceipt transactionReceipt
  ) {
    List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(
        ROLEGRANTED_EVENT,
        transactionReceipt
    );
    ArrayList<RoleGrantedEventResponse> responses =
        new ArrayList<RoleGrantedEventResponse>(valueList.size());
    for (Contract.EventValuesWithLog eventValues : valueList) {
      RoleGrantedEventResponse typedResponse = new RoleGrantedEventResponse();
      typedResponse.log = eventValues.getLog();
      typedResponse.role = (byte[]) eventValues.getIndexedValues()
          .get(0)
          .getValue();
      typedResponse.account = (String) eventValues.getIndexedValues()
          .get(1)
          .getValue();
      typedResponse.sender = (String) eventValues.getIndexedValues()
          .get(2)
          .getValue();
      responses.add(typedResponse);
    }
    return responses;
  }

  public static RoleGrantedEventResponse getRoleGrantedEventFromLog(Log log) {
    Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(
        ROLEGRANTED_EVENT,
        log
    );
    RoleGrantedEventResponse typedResponse = new RoleGrantedEventResponse();
    typedResponse.log = log;
    typedResponse.role = (byte[]) eventValues.getIndexedValues()
        .get(0)
        .getValue();
    typedResponse.account = (String) eventValues.getIndexedValues()
        .get(1)
        .getValue();
    typedResponse.sender = (String) eventValues.getIndexedValues()
        .get(2)
        .getValue();
    return typedResponse;
  }

  public static List<RoleRevokedEventResponse> getRoleRevokedEvents(
      TransactionReceipt transactionReceipt
  ) {
    List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(
        ROLEREVOKED_EVENT,
        transactionReceipt
    );
    ArrayList<RoleRevokedEventResponse> responses =
        new ArrayList<RoleRevokedEventResponse>(valueList.size());
    for (Contract.EventValuesWithLog eventValues : valueList) {
      RoleRevokedEventResponse typedResponse = new RoleRevokedEventResponse();
      typedResponse.log = eventValues.getLog();
      typedResponse.role = (byte[]) eventValues.getIndexedValues()
          .get(0)
          .getValue();
      typedResponse.account = (String) eventValues.getIndexedValues()
          .get(1)
          .getValue();
      typedResponse.sender = (String) eventValues.getIndexedValues()
          .get(2)
          .getValue();
      responses.add(typedResponse);
    }
    return responses;
  }

  public static RoleRevokedEventResponse getRoleRevokedEventFromLog(Log log) {
    Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(
        ROLEREVOKED_EVENT,
        log
    );
    RoleRevokedEventResponse typedResponse = new RoleRevokedEventResponse();
    typedResponse.log = log;
    typedResponse.role = (byte[]) eventValues.getIndexedValues()
        .get(0)
        .getValue();
    typedResponse.account = (String) eventValues.getIndexedValues()
        .get(1)
        .getValue();
    typedResponse.sender = (String) eventValues.getIndexedValues()
        .get(2)
        .getValue();
    return typedResponse;
  }

  public static List<SetupEventResponse> getSetupEvents(TransactionReceipt transactionReceipt) {
    List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(
        SETUP_EVENT,
        transactionReceipt
    );
    ArrayList<SetupEventResponse> responses = new ArrayList<SetupEventResponse>(valueList.size());
    for (Contract.EventValuesWithLog eventValues : valueList) {
      SetupEventResponse typedResponse = new SetupEventResponse();
      typedResponse.log = eventValues.getLog();
      responses.add(typedResponse);
    }
    return responses;
  }

  public static SetupEventResponse getSetupEventFromLog(Log log) {
    Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(
        SETUP_EVENT,
        log
    );
    SetupEventResponse typedResponse = new SetupEventResponse();
    typedResponse.log = log;
    return typedResponse;
  }

  public static List<UpgradedEventResponse> getUpgradedEvents(TransactionReceipt transactionReceipt
  ) {
    List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(
        UPGRADED_EVENT,
        transactionReceipt
    );
    ArrayList<UpgradedEventResponse> responses =
        new ArrayList<UpgradedEventResponse>(valueList.size());
    for (Contract.EventValuesWithLog eventValues : valueList) {
      UpgradedEventResponse typedResponse = new UpgradedEventResponse();
      typedResponse.log = eventValues.getLog();
      typedResponse.implementation = (String) eventValues.getIndexedValues()
          .get(0)
          .getValue();
      responses.add(typedResponse);
    }
    return responses;
  }

  public static UpgradedEventResponse getUpgradedEventFromLog(Log log) {
    Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(
        UPGRADED_EVENT,
        log
    );
    UpgradedEventResponse typedResponse = new UpgradedEventResponse();
    typedResponse.log = log;
    typedResponse.implementation = (String) eventValues.getIndexedValues()
        .get(0)
        .getValue();
    return typedResponse;
  }

  public static List<VCIssuedEventResponse> getVCIssuedEvents(TransactionReceipt transactionReceipt
  ) {
    List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(
        VCISSUED_EVENT,
        transactionReceipt
    );
    ArrayList<VCIssuedEventResponse> responses =
        new ArrayList<VCIssuedEventResponse>(valueList.size());
    for (Contract.EventValuesWithLog eventValues : valueList) {
      VCIssuedEventResponse typedResponse = new VCIssuedEventResponse();
      typedResponse.log = eventValues.getLog();
      typedResponse.vcId = (String) eventValues.getNonIndexedValues()
          .get(0)
          .getValue();
      typedResponse.issuer = (String) eventValues.getNonIndexedValues()
          .get(1)
          .getValue();
      typedResponse.did = (String) eventValues.getNonIndexedValues()
          .get(2)
          .getValue();
      responses.add(typedResponse);
    }
    return responses;
  }

  public static VCIssuedEventResponse getVCIssuedEventFromLog(Log log) {
    Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(
        VCISSUED_EVENT,
        log
    );
    VCIssuedEventResponse typedResponse = new VCIssuedEventResponse();
    typedResponse.log = log;
    typedResponse.vcId = (String) eventValues.getNonIndexedValues()
        .get(0)
        .getValue();
    typedResponse.issuer = (String) eventValues.getNonIndexedValues()
        .get(1)
        .getValue();
    typedResponse.did = (String) eventValues.getNonIndexedValues()
        .get(2)
        .getValue();
    return typedResponse;
  }

  public static List<VCSchemaCreatedEventResponse> getVCSchemaCreatedEvents(
      TransactionReceipt transactionReceipt
  ) {
    List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(
        VCSCHEMACREATED_EVENT,
        transactionReceipt
    );
    ArrayList<VCSchemaCreatedEventResponse> responses =
        new ArrayList<VCSchemaCreatedEventResponse>(valueList.size());
    for (Contract.EventValuesWithLog eventValues : valueList) {
      VCSchemaCreatedEventResponse typedResponse = new VCSchemaCreatedEventResponse();
      typedResponse.log = eventValues.getLog();
      typedResponse.schemaId = (String) eventValues.getNonIndexedValues()
          .get(0)
          .getValue();
      typedResponse.issuer = (String) eventValues.getNonIndexedValues()
          .get(1)
          .getValue();
      responses.add(typedResponse);
    }
    return responses;
  }

  public static VCSchemaCreatedEventResponse getVCSchemaCreatedEventFromLog(Log log) {
    Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(
        VCSCHEMACREATED_EVENT,
        log
    );
    VCSchemaCreatedEventResponse typedResponse = new VCSchemaCreatedEventResponse();
    typedResponse.log = log;
    typedResponse.schemaId = (String) eventValues.getNonIndexedValues()
        .get(0)
        .getValue();
    typedResponse.issuer = (String) eventValues.getNonIndexedValues()
        .get(1)
        .getValue();
    return typedResponse;
  }

  public static List<VCStatusEventResponse> getVCStatusEvents(TransactionReceipt transactionReceipt
  ) {
    List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(
        VCSTATUS_EVENT,
        transactionReceipt
    );
    ArrayList<VCStatusEventResponse> responses =
        new ArrayList<VCStatusEventResponse>(valueList.size());
    for (Contract.EventValuesWithLog eventValues : valueList) {
      VCStatusEventResponse typedResponse = new VCStatusEventResponse();
      typedResponse.log = eventValues.getLog();
      typedResponse.vcId = (String) eventValues.getNonIndexedValues()
          .get(0)
          .getValue();
      typedResponse.player = (String) eventValues.getNonIndexedValues()
          .get(1)
          .getValue();
      typedResponse.status = (String) eventValues.getNonIndexedValues()
          .get(2)
          .getValue();
      responses.add(typedResponse);
    }
    return responses;
  }

  public static VCStatusEventResponse getVCStatusEventFromLog(Log log) {
    Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(
        VCSTATUS_EVENT,
        log
    );
    VCStatusEventResponse typedResponse = new VCStatusEventResponse();
    typedResponse.log = log;
    typedResponse.vcId = (String) eventValues.getNonIndexedValues()
        .get(0)
        .getValue();
    typedResponse.player = (String) eventValues.getNonIndexedValues()
        .get(1)
        .getValue();
    typedResponse.status = (String) eventValues.getNonIndexedValues()
        .get(2)
        .getValue();
    return typedResponse;
  }

  @Deprecated
  public static OpenDID load(String contractAddress, Web3j web3j, Credentials credentials,
                             BigInteger gasPrice, BigInteger gasLimit
  ) {
    return new OpenDID(
        contractAddress,
        web3j,
        credentials,
        gasPrice,
        gasLimit
    );
  }

  @Deprecated
  public static OpenDID load(String contractAddress, Web3j web3j,
                             TransactionManager transactionManager, BigInteger gasPrice,
                             BigInteger gasLimit
  ) {
    return new OpenDID(
        contractAddress,
        web3j,
        transactionManager,
        gasPrice,
        gasLimit
    );
  }

  public static OpenDID load(String contractAddress, Web3j web3j, Credentials credentials,
                             ContractGasProvider contractGasProvider
  ) {
    return new OpenDID(
        contractAddress,
        web3j,
        credentials,
        contractGasProvider
    );
  }

  public static OpenDID load(String contractAddress, Web3j web3j,
                             TransactionManager transactionManager,
                             ContractGasProvider contractGasProvider
  ) {
    return new OpenDID(
        contractAddress,
        web3j,
        transactionManager,
        contractGasProvider
    );
  }

  public static RemoteCall<OpenDID> deploy(Web3j web3j, Credentials credentials,
                                           ContractGasProvider contractGasProvider
  ) {
    return deployRemoteCall(
        OpenDID.class,
        web3j,
        credentials,
        contractGasProvider,
        getDeploymentBinary(),
        ""
    );
  }

  @Deprecated
  public static RemoteCall<OpenDID> deploy(Web3j web3j, Credentials credentials,
                                           BigInteger gasPrice, BigInteger gasLimit
  ) {
    return deployRemoteCall(
        OpenDID.class,
        web3j,
        credentials,
        gasPrice,
        gasLimit,
        getDeploymentBinary(),
        ""
    );
  }

  public static RemoteCall<OpenDID> deploy(Web3j web3j, TransactionManager transactionManager,
                                           ContractGasProvider contractGasProvider
  ) {
    return deployRemoteCall(
        OpenDID.class,
        web3j,
        transactionManager,
        contractGasProvider,
        getDeploymentBinary(),
        ""
    );
  }

  @Deprecated
  public static RemoteCall<OpenDID> deploy(Web3j web3j, TransactionManager transactionManager,
                                           BigInteger gasPrice, BigInteger gasLimit
  ) {
    return deployRemoteCall(
        OpenDID.class,
        web3j,
        transactionManager,
        gasPrice,
        gasLimit,
        getDeploymentBinary(),
        ""
    );
  }

  public static void linkLibraries(List<Contract.LinkReference> references) {
    librariesLinkedBinary = linkBinaryWithReferences(
        BINARY,
        references
    );
  }

  private static String getDeploymentBinary() {
    if (librariesLinkedBinary != null) {
      return librariesLinkedBinary;
    } else {
      return BINARY;
    }
  }

  public Flowable<DIDCreatedEventResponse> dIDCreatedEventFlowable(EthFilter filter) {
    return web3j.ethLogFlowable(filter)
        .map(log -> getDIDCreatedEventFromLog(log));
  }

  public Flowable<DIDCreatedEventResponse> dIDCreatedEventFlowable(DefaultBlockParameter startBlock,
                                                                   DefaultBlockParameter endBlock
  ) {
    EthFilter filter = new EthFilter(
        startBlock,
        endBlock,
        getContractAddress()
    );
    filter.addSingleTopic(EventEncoder.encode(DIDCREATED_EVENT));
    return dIDCreatedEventFlowable(filter);
  }

  public Flowable<DIDDeactivatedEventResponse> dIDDeactivatedEventFlowable(EthFilter filter) {
    return web3j.ethLogFlowable(filter)
        .map(log -> getDIDDeactivatedEventFromLog(log));
  }

  public Flowable<DIDDeactivatedEventResponse> dIDDeactivatedEventFlowable(
      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
    EthFilter filter = new EthFilter(
        startBlock,
        endBlock,
        getContractAddress()
    );
    filter.addSingleTopic(EventEncoder.encode(DIDDEACTIVATED_EVENT));
    return dIDDeactivatedEventFlowable(filter);
  }

  public Flowable<DIDUpdatedEventResponse> dIDUpdatedEventFlowable(EthFilter filter) {
    return web3j.ethLogFlowable(filter)
        .map(log -> getDIDUpdatedEventFromLog(log));
  }

  public Flowable<DIDUpdatedEventResponse> dIDUpdatedEventFlowable(DefaultBlockParameter startBlock,
                                                                   DefaultBlockParameter endBlock
  ) {
    EthFilter filter = new EthFilter(
        startBlock,
        endBlock,
        getContractAddress()
    );
    filter.addSingleTopic(EventEncoder.encode(DIDUPDATED_EVENT));
    return dIDUpdatedEventFlowable(filter);
  }

  public Flowable<InitializedEventResponse> initializedEventFlowable(EthFilter filter) {
    return web3j.ethLogFlowable(filter)
        .map(log -> getInitializedEventFromLog(log));
  }

  public Flowable<InitializedEventResponse> initializedEventFlowable(
      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
    EthFilter filter = new EthFilter(
        startBlock,
        endBlock,
        getContractAddress()
    );
    filter.addSingleTopic(EventEncoder.encode(INITIALIZED_EVENT));
    return initializedEventFlowable(filter);
  }

  public Flowable<RoleAdminChangedEventResponse> roleAdminChangedEventFlowable(EthFilter filter) {
    return web3j.ethLogFlowable(filter)
        .map(log -> getRoleAdminChangedEventFromLog(log));
  }

  public Flowable<RoleAdminChangedEventResponse> roleAdminChangedEventFlowable(
      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
    EthFilter filter = new EthFilter(
        startBlock,
        endBlock,
        getContractAddress()
    );
    filter.addSingleTopic(EventEncoder.encode(ROLEADMINCHANGED_EVENT));
    return roleAdminChangedEventFlowable(filter);
  }

  public Flowable<RoleGrantedEventResponse> roleGrantedEventFlowable(EthFilter filter) {
    return web3j.ethLogFlowable(filter)
        .map(log -> getRoleGrantedEventFromLog(log));
  }

  public Flowable<RoleGrantedEventResponse> roleGrantedEventFlowable(
      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
    EthFilter filter = new EthFilter(
        startBlock,
        endBlock,
        getContractAddress()
    );
    filter.addSingleTopic(EventEncoder.encode(ROLEGRANTED_EVENT));
    return roleGrantedEventFlowable(filter);
  }

  public Flowable<RoleRevokedEventResponse> roleRevokedEventFlowable(EthFilter filter) {
    return web3j.ethLogFlowable(filter)
        .map(log -> getRoleRevokedEventFromLog(log));
  }

  public Flowable<RoleRevokedEventResponse> roleRevokedEventFlowable(
      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
    EthFilter filter = new EthFilter(
        startBlock,
        endBlock,
        getContractAddress()
    );
    filter.addSingleTopic(EventEncoder.encode(ROLEREVOKED_EVENT));
    return roleRevokedEventFlowable(filter);
  }

  public Flowable<SetupEventResponse> setupEventFlowable(EthFilter filter) {
    return web3j.ethLogFlowable(filter)
        .map(log -> getSetupEventFromLog(log));
  }

  public Flowable<SetupEventResponse> setupEventFlowable(DefaultBlockParameter startBlock,
                                                         DefaultBlockParameter endBlock
  ) {
    EthFilter filter = new EthFilter(
        startBlock,
        endBlock,
        getContractAddress()
    );
    filter.addSingleTopic(EventEncoder.encode(SETUP_EVENT));
    return setupEventFlowable(filter);
  }

  public Flowable<UpgradedEventResponse> upgradedEventFlowable(EthFilter filter) {
    return web3j.ethLogFlowable(filter)
        .map(log -> getUpgradedEventFromLog(log));
  }

  public Flowable<UpgradedEventResponse> upgradedEventFlowable(DefaultBlockParameter startBlock,
                                                               DefaultBlockParameter endBlock
  ) {
    EthFilter filter = new EthFilter(
        startBlock,
        endBlock,
        getContractAddress()
    );
    filter.addSingleTopic(EventEncoder.encode(UPGRADED_EVENT));
    return upgradedEventFlowable(filter);
  }

  public Flowable<VCIssuedEventResponse> vCIssuedEventFlowable(EthFilter filter) {
    return web3j.ethLogFlowable(filter)
        .map(log -> getVCIssuedEventFromLog(log));
  }

  public Flowable<VCIssuedEventResponse> vCIssuedEventFlowable(DefaultBlockParameter startBlock,
                                                               DefaultBlockParameter endBlock
  ) {
    EthFilter filter = new EthFilter(
        startBlock,
        endBlock,
        getContractAddress()
    );
    filter.addSingleTopic(EventEncoder.encode(VCISSUED_EVENT));
    return vCIssuedEventFlowable(filter);
  }

  public Flowable<VCSchemaCreatedEventResponse> vCSchemaCreatedEventFlowable(EthFilter filter) {
    return web3j.ethLogFlowable(filter)
        .map(log -> getVCSchemaCreatedEventFromLog(log));
  }

  public Flowable<VCSchemaCreatedEventResponse> vCSchemaCreatedEventFlowable(
      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
    EthFilter filter = new EthFilter(
        startBlock,
        endBlock,
        getContractAddress()
    );
    filter.addSingleTopic(EventEncoder.encode(VCSCHEMACREATED_EVENT));
    return vCSchemaCreatedEventFlowable(filter);
  }

  public Flowable<VCStatusEventResponse> vCStatusEventFlowable(EthFilter filter) {
    return web3j.ethLogFlowable(filter)
        .map(log -> getVCStatusEventFromLog(log));
  }

  public Flowable<VCStatusEventResponse> vCStatusEventFlowable(DefaultBlockParameter startBlock,
                                                               DefaultBlockParameter endBlock
  ) {
    EthFilter filter = new EthFilter(
        startBlock,
        endBlock,
        getContractAddress()
    );
    filter.addSingleTopic(EventEncoder.encode(VCSTATUS_EVENT));
    return vCStatusEventFlowable(filter);
  }

  public RemoteFunctionCall<byte[]> DEFAULT_ADMIN_ROLE() {
    final Function function = new Function(
        FUNC_DEFAULT_ADMIN_ROLE,
        Arrays.<Type>asList(),
        Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {
        })
    );
    return executeRemoteCallSingleValueReturn(
        function,
        byte[].class
    );
  }

  public RemoteFunctionCall<String> UPGRADE_INTERFACE_VERSION() {
    final Function function = new Function(
        FUNC_UPGRADE_INTERFACE_VERSION,
        Arrays.<Type>asList(),
        Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {
        })
    );
    return executeRemoteCallSingleValueReturn(
        function,
        String.class
    );
  }

  public RemoteFunctionCall<DocumentAndStatus> getDidDoc(String _did) {
    final Function function = new Function(
        FUNC_GETDIDDOC,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_did)),
        Arrays.<TypeReference<?>>asList(new TypeReference<DocumentAndStatus>() {
        })
    );
    return executeRemoteCallSingleValueReturn(
        function,
        DocumentAndStatus.class
    );
  }

  public RemoteFunctionCall<DocumentStatus> getDidDocStatus(String _did) {
    final Function function = new Function(
        FUNC_GETDIDDOCSTATUS,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_did)),
        Arrays.<TypeReference<?>>asList(new TypeReference<DocumentStatus>() {
        })
    );
    return executeRemoteCallSingleValueReturn(
        function,
        DocumentStatus.class
    );
  }

  public RemoteFunctionCall<byte[]> getRoleAdmin(byte[] role) {
    final Function function = new Function(
        FUNC_GETROLEADMIN,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role)),
        Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {
        })
    );
    return executeRemoteCallSingleValueReturn(
        function,
        byte[].class
    );
  }

  public RemoteFunctionCall<VcSchema> getVcSchema(String _id) {
    final Function function = new Function(
        FUNC_GETVCSCHEMA,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_id)),
        Arrays.<TypeReference<?>>asList(new TypeReference<VcSchema>() {
        })
    );
    return executeRemoteCallSingleValueReturn(
        function,
        VcSchema.class
    );
  }

  public RemoteFunctionCall<VcMeta> getVcmetaData(String _id) {
    final Function function = new Function(
        FUNC_GETVCMETADATA,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_id)),
        Arrays.<TypeReference<?>>asList(new TypeReference<VcMeta>() {
        })
    );
    return executeRemoteCallSingleValueReturn(
        function,
        VcMeta.class
    );
  }

  public RemoteFunctionCall<ZKPLibrary_CredentialSchema> getZKPCredential(String _id) {
    final Function function = new Function(
        FUNC_GETZKPCREDENTIAL,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_id)),
        Arrays.<TypeReference<?>>asList(new TypeReference<ZKPLibrary_CredentialSchema>() {
        })
    );
    return executeRemoteCallSingleValueReturn(
        function,
        ZKPLibrary_CredentialSchema.class
    );
  }

  public RemoteFunctionCall<CredentialDefinition> getZKPCredentialDefinition(String _id) {
    final Function function = new Function(
        FUNC_GETZKPCREDENTIALDEFINITION,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_id)),
        Arrays.<TypeReference<?>>asList(new TypeReference<CredentialDefinition>() {
        })
    );
    return executeRemoteCallSingleValueReturn(
        function,
        CredentialDefinition.class
    );
  }

  public RemoteFunctionCall<TransactionReceipt> grantRole(byte[] role, String account) {
    final Function function = new Function(
        FUNC_GRANTROLE,
        Arrays.<Type>asList(
            new org.web3j.abi.datatypes.generated.Bytes32(role),
            new org.web3j.abi.datatypes.Address(
                160,
                account
            )
        ),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<Boolean> hasInitialized() {
    final Function function = new Function(
        FUNC_HASINITIALIZED,
        Arrays.<Type>asList(),
        Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {
        })
    );
    return executeRemoteCallSingleValueReturn(
        function,
        Boolean.class
    );
  }

  public RemoteFunctionCall<Boolean> hasRole(byte[] role, String account) {
    final Function function = new Function(
        FUNC_HASROLE,
        Arrays.<Type>asList(
            new org.web3j.abi.datatypes.generated.Bytes32(role),
            new org.web3j.abi.datatypes.Address(
                160,
                account
            )
        ),
        Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {
        })
    );
    return executeRemoteCallSingleValueReturn(
        function,
        Boolean.class
    );
  }

  public RemoteFunctionCall<TransactionReceipt> initialize(String _documentStorage,
                                                           String _vcMetaStorage, String _zkpStorage
  ) {
    final Function function = new Function(
        FUNC_INITIALIZE,
        Arrays.<Type>asList(
            new org.web3j.abi.datatypes.Address(
                160,
                _documentStorage
            ),
            new org.web3j.abi.datatypes.Address(
                160,
                _vcMetaStorage
            ),
            new org.web3j.abi.datatypes.Address(
                160,
                _zkpStorage
            )
        ),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<byte[]> proxiableUUID() {
    final Function function = new Function(
        FUNC_PROXIABLEUUID,
        Arrays.<Type>asList(),
        Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {
        })
    );
    return executeRemoteCallSingleValueReturn(
        function,
        byte[].class
    );
  }

  public RemoteFunctionCall<TransactionReceipt> registDidDoc(Document _invokedDidDoc,
                                                             String roleType
  ) {
    final Function function = new Function(
        FUNC_REGISTDIDDOC,
        Arrays.<Type>asList(
            _invokedDidDoc,
            new org.web3j.abi.datatypes.Utf8String(roleType)
        ),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> registVcMetaData(VcMeta _vcMeta) {
    final Function function = new Function(
        FUNC_REGISTVCMETADATA,
        Arrays.<Type>asList(_vcMeta),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> registVcSchema(VcSchema _vcSchema) {
    final Function function = new Function(
        FUNC_REGISTVCSCHEMA,
        Arrays.<Type>asList(_vcSchema),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> registZKPCredential(
      ZKPLibrary_CredentialSchema _credentialSchema
  ) {
    final Function function = new Function(
        FUNC_REGISTZKPCREDENTIAL,
        Arrays.<Type>asList(_credentialSchema),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> registZKPCredentialDefinition(
      CredentialDefinition _credentialDefinition
  ) {
    final Function function = new Function(
        FUNC_REGISTZKPCREDENTIALDEFINITION,
        Arrays.<Type>asList(_credentialDefinition),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> renounceRole(byte[] role,
                                                             String callerConfirmation
  ) {
    final Function function = new Function(
        FUNC_RENOUNCEROLE,
        Arrays.<Type>asList(
            new org.web3j.abi.datatypes.generated.Bytes32(role),
            new org.web3j.abi.datatypes.Address(
                160,
                callerConfirmation
            )
        ),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> revokeRole(byte[] role, String account) {
    final Function function = new Function(
        FUNC_REVOKEROLE,
        Arrays.<Type>asList(
            new org.web3j.abi.datatypes.generated.Bytes32(role),
            new org.web3j.abi.datatypes.Address(
                160,
                account
            )
        ),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> setDocumentStorage(String _documentStorage) {
    final Function function = new Function(
        FUNC_SETDOCUMENTSTORAGE,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(
            160,
            _documentStorage
        )),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> setVcMetaStorage(String _vcMetaStorage) {
    final Function function = new Function(
        FUNC_SETVCMETASTORAGE,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(
            160,
            _vcMetaStorage
        )),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> setZKPStorage(String _zkpStorage) {
    final Function function = new Function(
        FUNC_SETZKPSTORAGE,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(
            160,
            _zkpStorage
        )),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<Boolean> supportsInterface(byte[] interfaceId) {
    final Function function = new Function(
        FUNC_SUPPORTSINTERFACE,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes4(interfaceId)),
        Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {
        })
    );
    return executeRemoteCallSingleValueReturn(
        function,
        Boolean.class
    );
  }

  public RemoteFunctionCall<TransactionReceipt> updateDidDocStatusInService(String _did,
                                                                            String _status,
                                                                            String _versionId
  ) {
    final Function function = new Function(
        FUNC_UPDATEDIDDOCSTATUSINSERVICE,
        Arrays.<Type>asList(
            new org.web3j.abi.datatypes.Utf8String(_did),
            new org.web3j.abi.datatypes.Utf8String(_status),
            new org.web3j.abi.datatypes.Utf8String(_versionId)
        ),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> updateDidDocStatusRevocation(String _did,
                                                                             String _status,
                                                                             String _terminatedTime
  ) {
    final Function function = new Function(
        FUNC_UPDATEDIDDOCSTATUSREVOCATION,
        Arrays.<Type>asList(
            new org.web3j.abi.datatypes.Utf8String(_did),
            new org.web3j.abi.datatypes.Utf8String(_status),
            new org.web3j.abi.datatypes.Utf8String(_terminatedTime)
        ),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> updateVcStats(String _vcId, String _status) {
    final Function function = new Function(
        FUNC_UPDATEVCSTATS,
        Arrays.<Type>asList(
            new org.web3j.abi.datatypes.Utf8String(_vcId),
            new org.web3j.abi.datatypes.Utf8String(_status)
        ),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> upgradeToAndCall(String newImplementation,
                                                                 byte[] data, BigInteger weiValue
  ) {
    final Function function = new Function(
        FUNC_UPGRADETOANDCALL,
        Arrays.<Type>asList(
            new org.web3j.abi.datatypes.Address(
                160,
                newImplementation
            ),
            new org.web3j.abi.datatypes.DynamicBytes(data)
        ),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(
        function,
        weiValue
    );
  }


  public static class VerificationMethod extends DynamicStruct {
    public String id;

    public BigInteger keyType;

    public String controller;

    public String publicKeyMultibase;

    public BigInteger authType;

    public VerificationMethod(String id, BigInteger keyType, String controller,
                              String publicKeyMultibase, BigInteger authType
    ) {
      super(
          new org.web3j.abi.datatypes.Utf8String(id),
          new org.web3j.abi.datatypes.generated.Uint8(keyType),
          new org.web3j.abi.datatypes.Utf8String(controller),
          new org.web3j.abi.datatypes.Utf8String(publicKeyMultibase),
          new org.web3j.abi.datatypes.generated.Uint8(authType)
      );
      this.id = id;
      this.keyType = keyType;
      this.controller = controller;
      this.publicKeyMultibase = publicKeyMultibase;
      this.authType = authType;
    }

    public VerificationMethod(Utf8String id, Uint8 keyType, Utf8String controller,
                              Utf8String publicKeyMultibase, Uint8 authType
    ) {
      super(
          id,
          keyType,
          controller,
          publicKeyMultibase,
          authType
      );
      this.id = id.getValue();
      this.keyType = keyType.getValue();
      this.controller = controller.getValue();
      this.publicKeyMultibase = publicKeyMultibase.getValue();
      this.authType = authType.getValue();
    }
  }


  public static class Service extends DynamicStruct {
    public String id;

    public String serviceEndpoint;

    public List<String> serviceType;

    public Service(String id, String serviceEndpoint, List<String> serviceType) {
      super(
          new org.web3j.abi.datatypes.Utf8String(id),
          new org.web3j.abi.datatypes.Utf8String(serviceEndpoint),
          new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
              org.web3j.abi.datatypes.Utf8String.class,
              org.web3j.abi.Utils.typeMap(
                  serviceType,
                  org.web3j.abi.datatypes.Utf8String.class
              )
          )
      );
      this.id = id;
      this.serviceEndpoint = serviceEndpoint;
      this.serviceType = serviceType;
    }

    public Service(Utf8String id, Utf8String serviceEndpoint,
                   @Parameterized(type = Utf8String.class) DynamicArray<Utf8String> serviceType
    ) {
      super(
          id,
          serviceEndpoint,
          serviceType
      );
      this.id = id.getValue();
      this.serviceEndpoint = serviceEndpoint.getValue();
      this.serviceType = serviceType.getValue()
          .stream()
          .map(v -> v.getValue())
          .collect(Collectors.toList());
    }
  }


  public static class DocumentStatus extends DynamicStruct {
    public String id;

    public BigInteger status;

    public String version;

    public String roleType;

    public String terminatedTime;

    public DocumentStatus(String id, BigInteger status, String version, String roleType,
                          String terminatedTime
    ) {
      super(
          new org.web3j.abi.datatypes.Utf8String(id),
          new org.web3j.abi.datatypes.generated.Uint8(status),
          new org.web3j.abi.datatypes.Utf8String(version),
          new org.web3j.abi.datatypes.Utf8String(roleType),
          new org.web3j.abi.datatypes.Utf8String(terminatedTime)
      );
      this.id = id;
      this.status = status;
      this.version = version;
      this.roleType = roleType;
      this.terminatedTime = terminatedTime;
    }

    public DocumentStatus(Utf8String id, Uint8 status, Utf8String version, Utf8String roleType,
                          Utf8String terminatedTime
    ) {
      super(
          id,
          status,
          version,
          roleType,
          terminatedTime
      );
      this.id = id.getValue();
      this.status = status.getValue();
      this.version = version.getValue();
      this.roleType = roleType.getValue();
      this.terminatedTime = terminatedTime.getValue();
    }
  }


  public static class MetaData extends DynamicStruct {
    public String formatVersion;

    public String language;

    public MetaData(String formatVersion, String language) {
      super(
          new org.web3j.abi.datatypes.Utf8String(formatVersion),
          new org.web3j.abi.datatypes.Utf8String(language)
      );
      this.formatVersion = formatVersion;
      this.language = language;
    }

    public MetaData(Utf8String formatVersion, Utf8String language) {
      super(
          formatVersion,
          language
      );
      this.formatVersion = formatVersion.getValue();
      this.language = language.getValue();
    }
  }


  public static class SchemaClaimItem extends DynamicStruct {
    public String caption;

    public String format;

    public Boolean hideValue;

    public String id;

    public String _type;

    public SchemaClaimItem(String caption, String format, Boolean hideValue, String id,
                           String _type
    ) {
      super(
          new org.web3j.abi.datatypes.Utf8String(caption),
          new org.web3j.abi.datatypes.Utf8String(format),
          new org.web3j.abi.datatypes.Bool(hideValue),
          new org.web3j.abi.datatypes.Utf8String(id),
          new org.web3j.abi.datatypes.Utf8String(_type)
      );
      this.caption = caption;
      this.format = format;
      this.hideValue = hideValue;
      this.id = id;
      this._type = _type;
    }

    public SchemaClaimItem(Utf8String caption, Utf8String format, Bool hideValue, Utf8String id,
                           Utf8String _type
    ) {
      super(
          caption,
          format,
          hideValue,
          id,
          _type
      );
      this.caption = caption.getValue();
      this.format = format.getValue();
      this.hideValue = hideValue.getValue();
      this.id = id.getValue();
      this._type = _type.getValue();
    }
  }


  public static class ClaimNamespace extends DynamicStruct {
    public String id;

    public String name;

    public String ref;

    public ClaimNamespace(String id, String name, String ref) {
      super(
          new org.web3j.abi.datatypes.Utf8String(id),
          new org.web3j.abi.datatypes.Utf8String(name),
          new org.web3j.abi.datatypes.Utf8String(ref)
      );
      this.id = id;
      this.name = name;
      this.ref = ref;
    }

    public ClaimNamespace(Utf8String id, Utf8String name, Utf8String ref) {
      super(
          id,
          name,
          ref
      );
      this.id = id.getValue();
      this.name = name.getValue();
      this.ref = ref.getValue();
    }
  }


  public static class Provider extends DynamicStruct {
    public String did;

    public String certVcReference;

    public Provider(String did, String certVcReference) {
      super(
          new org.web3j.abi.datatypes.Utf8String(did),
          new org.web3j.abi.datatypes.Utf8String(certVcReference)
      );
      this.did = did;
      this.certVcReference = certVcReference;
    }

    public Provider(Utf8String did, Utf8String certVcReference) {
      super(
          did,
          certVcReference
      );
      this.did = did.getValue();
      this.certVcReference = certVcReference.getValue();
    }
  }


  public static class CredentialSchemaLibrary_CredentialSchema extends DynamicStruct {
    public String id;

    public String credentialSchemaType;

    public CredentialSchemaLibrary_CredentialSchema(String id, String credentialSchemaType) {
      super(
          new org.web3j.abi.datatypes.Utf8String(id),
          new org.web3j.abi.datatypes.Utf8String(credentialSchemaType)
      );
      this.id = id;
      this.credentialSchemaType = credentialSchemaType;
    }

    public CredentialSchemaLibrary_CredentialSchema(Utf8String id,
                                                    Utf8String credentialSchemaType
    ) {
      super(
          id,
          credentialSchemaType
      );
      this.id = id.getValue();
      this.credentialSchemaType = credentialSchemaType.getValue();
    }
  }


  public static class AttributeNamespace extends DynamicStruct {
    public String id;

    public String ref;

    public AttributeNamespace(String id, String ref) {
      super(
          new org.web3j.abi.datatypes.Utf8String(id),
          new org.web3j.abi.datatypes.Utf8String(ref)
      );
      this.id = id;
      this.ref = ref;
    }

    public AttributeNamespace(Utf8String id, Utf8String ref) {
      super(
          id,
          ref
      );
      this.id = id.getValue();
      this.ref = ref.getValue();
    }
  }


  public static class Internationalization extends DynamicStruct {
    public String languageType;

    public String value;

    public Internationalization(String languageType, String value) {
      super(
          new org.web3j.abi.datatypes.Utf8String(languageType),
          new org.web3j.abi.datatypes.Utf8String(value)
      );
      this.languageType = languageType;
      this.value = value;
    }

    public Internationalization(Utf8String languageType, Utf8String value) {
      super(
          languageType,
          value
      );
      this.languageType = languageType.getValue();
      this.value = value.getValue();
    }
  }


  public static class CredentialDefinition extends DynamicStruct {
    public String id;

    public String schemaId;

    public String ver;

    public String _type;

    public String value;

    public String tag;

    public CredentialDefinition(String id, String schemaId, String ver, String _type, String value,
                                String tag
    ) {
      super(
          new org.web3j.abi.datatypes.Utf8String(id),
          new org.web3j.abi.datatypes.Utf8String(schemaId),
          new org.web3j.abi.datatypes.Utf8String(ver),
          new org.web3j.abi.datatypes.Utf8String(_type),
          new org.web3j.abi.datatypes.Utf8String(value),
          new org.web3j.abi.datatypes.Utf8String(tag)
      );
      this.id = id;
      this.schemaId = schemaId;
      this.ver = ver;
      this._type = _type;
      this.value = value;
      this.tag = tag;
    }

    public CredentialDefinition(Utf8String id, Utf8String schemaId, Utf8String ver,
                                Utf8String _type, Utf8String value, Utf8String tag
    ) {
      super(
          id,
          schemaId,
          ver,
          _type,
          value,
          tag
      );
      this.id = id.getValue();
      this.schemaId = schemaId.getValue();
      this.ver = ver.getValue();
      this._type = _type.getValue();
      this.value = value.getValue();
      this.tag = tag.getValue();
    }
  }


  public static class Document extends DynamicStruct {
    public List<String> context;

    public String id;

    public String controller;

    public String created;

    public String updated;

    public String versionId;

    public Boolean deactivated;

    public List<VerificationMethod> verificationMethod;

    public List<String> assertionsMethod;

    public List<String> authentication;

    public List<String> keyAgreement;

    public List<String> capabilityInvocation;

    public List<String> capabilityDelegation;

    public List<Service> services;

    public Document(List<String> context, String id, String controller, String created,
                    String updated, String versionId, Boolean deactivated,
                    List<VerificationMethod> verificationMethod, List<String> assertionsMethod,
                    List<String> authentication, List<String> keyAgreement,
                    List<String> capabilityInvocation, List<String> capabilityDelegation,
                    List<Service> services
    ) {
      super(
          new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
              org.web3j.abi.datatypes.Utf8String.class,
              org.web3j.abi.Utils.typeMap(
                  context,
                  org.web3j.abi.datatypes.Utf8String.class
              )
          ),
          new org.web3j.abi.datatypes.Utf8String(id),
          new org.web3j.abi.datatypes.Utf8String(controller),
          new org.web3j.abi.datatypes.Utf8String(created),
          new org.web3j.abi.datatypes.Utf8String(updated),
          new org.web3j.abi.datatypes.Utf8String(versionId),
          new org.web3j.abi.datatypes.Bool(deactivated),
          new org.web3j.abi.datatypes.DynamicArray<VerificationMethod>(
              VerificationMethod.class,
              verificationMethod
          ),
          new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
              org.web3j.abi.datatypes.Utf8String.class,
              org.web3j.abi.Utils.typeMap(
                  assertionsMethod,
                  org.web3j.abi.datatypes.Utf8String.class
              )
          ),
          new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
              org.web3j.abi.datatypes.Utf8String.class,
              org.web3j.abi.Utils.typeMap(
                  authentication,
                  org.web3j.abi.datatypes.Utf8String.class
              )
          ),
          new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
              org.web3j.abi.datatypes.Utf8String.class,
              org.web3j.abi.Utils.typeMap(
                  keyAgreement,
                  org.web3j.abi.datatypes.Utf8String.class
              )
          ),
          new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
              org.web3j.abi.datatypes.Utf8String.class,
              org.web3j.abi.Utils.typeMap(
                  capabilityInvocation,
                  org.web3j.abi.datatypes.Utf8String.class
              )
          ),
          new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
              org.web3j.abi.datatypes.Utf8String.class,
              org.web3j.abi.Utils.typeMap(
                  capabilityDelegation,
                  org.web3j.abi.datatypes.Utf8String.class
              )
          ),
          new org.web3j.abi.datatypes.DynamicArray<Service>(
              Service.class,
              services
          )
      );
      this.context = context;
      this.id = id;
      this.controller = controller;
      this.created = created;
      this.updated = updated;
      this.versionId = versionId;
      this.deactivated = deactivated;
      this.verificationMethod = verificationMethod;
      this.assertionsMethod = assertionsMethod;
      this.authentication = authentication;
      this.keyAgreement = keyAgreement;
      this.capabilityInvocation = capabilityInvocation;
      this.capabilityDelegation = capabilityDelegation;
      this.services = services;
    }

    public Document(@Parameterized(type = Utf8String.class) DynamicArray<Utf8String> context,
                    Utf8String id, Utf8String controller, Utf8String created, Utf8String updated,
                    Utf8String versionId, Bool deactivated,
                    @Parameterized(type = VerificationMethod.class)
                    DynamicArray<VerificationMethod> verificationMethod,
                    @Parameterized(type = Utf8String.class)
                    DynamicArray<Utf8String> assertionsMethod,
                    @Parameterized(type = Utf8String.class) DynamicArray<Utf8String> authentication,
                    @Parameterized(type = Utf8String.class) DynamicArray<Utf8String> keyAgreement,
                    @Parameterized(type = Utf8String.class)
                    DynamicArray<Utf8String> capabilityInvocation,
                    @Parameterized(type = Utf8String.class)
                    DynamicArray<Utf8String> capabilityDelegation,
                    @Parameterized(type = Service.class) DynamicArray<Service> services
    ) {
      super(
          context,
          id,
          controller,
          created,
          updated,
          versionId,
          deactivated,
          verificationMethod,
          assertionsMethod,
          authentication,
          keyAgreement,
          capabilityInvocation,
          capabilityDelegation,
          services
      );
      this.context = context.getValue()
          .stream()
          .map(v -> v.getValue())
          .collect(Collectors.toList());
      this.id = id.getValue();
      this.controller = controller.getValue();
      this.created = created.getValue();
      this.updated = updated.getValue();
      this.versionId = versionId.getValue();
      this.deactivated = deactivated.getValue();
      this.verificationMethod = verificationMethod.getValue();
      this.assertionsMethod = assertionsMethod.getValue()
          .stream()
          .map(v -> v.getValue())
          .collect(Collectors.toList());
      this.authentication = authentication.getValue()
          .stream()
          .map(v -> v.getValue())
          .collect(Collectors.toList());
      this.keyAgreement = keyAgreement.getValue()
          .stream()
          .map(v -> v.getValue())
          .collect(Collectors.toList());
      this.capabilityInvocation = capabilityInvocation.getValue()
          .stream()
          .map(v -> v.getValue())
          .collect(Collectors.toList());
      this.capabilityDelegation = capabilityDelegation.getValue()
          .stream()
          .map(v -> v.getValue())
          .collect(Collectors.toList());
      this.services = services.getValue();
    }
  }


  public static class VCSchemaClaim extends DynamicStruct {
    public List<SchemaClaimItem> items;

    public ClaimNamespace namespace;

    public VCSchemaClaim(List<SchemaClaimItem> items, ClaimNamespace namespace) {
      super(
          new org.web3j.abi.datatypes.DynamicArray<SchemaClaimItem>(
              SchemaClaimItem.class,
              items
          ),
          namespace
      );
      this.items = items;
      this.namespace = namespace;
    }

    public VCSchemaClaim(
        @Parameterized(type = SchemaClaimItem.class) DynamicArray<SchemaClaimItem> items,
        ClaimNamespace namespace
    ) {
      super(
          items,
          namespace
      );
      this.items = items.getValue();
      this.namespace = namespace;
    }
  }


  public static class VcMeta extends DynamicStruct {
    public String id;

    public Provider issuer;

    public String subject;

    public CredentialSchemaLibrary_CredentialSchema credentialSchema;

    public String status;

    public String issuanceDate;

    public String validFrom;

    public String validUntil;

    public String formatVersion;

    public String language;

    public VcMeta(String id, Provider issuer, String subject,
                  CredentialSchemaLibrary_CredentialSchema credentialSchema, String status,
                  String issuanceDate, String validFrom, String validUntil, String formatVersion,
                  String language
    ) {
      super(
          new org.web3j.abi.datatypes.Utf8String(id),
          issuer,
          new org.web3j.abi.datatypes.Utf8String(subject),
          credentialSchema,
          new org.web3j.abi.datatypes.Utf8String(status),
          new org.web3j.abi.datatypes.Utf8String(issuanceDate),
          new org.web3j.abi.datatypes.Utf8String(validFrom),
          new org.web3j.abi.datatypes.Utf8String(validUntil),
          new org.web3j.abi.datatypes.Utf8String(formatVersion),
          new org.web3j.abi.datatypes.Utf8String(language)
      );
      this.id = id;
      this.issuer = issuer;
      this.subject = subject;
      this.credentialSchema = credentialSchema;
      this.status = status;
      this.issuanceDate = issuanceDate;
      this.validFrom = validFrom;
      this.validUntil = validUntil;
      this.formatVersion = formatVersion;
      this.language = language;
    }

    public VcMeta(Utf8String id, Provider issuer, Utf8String subject,
                  CredentialSchemaLibrary_CredentialSchema credentialSchema, Utf8String status,
                  Utf8String issuanceDate, Utf8String validFrom, Utf8String validUntil,
                  Utf8String formatVersion, Utf8String language
    ) {
      super(
          id,
          issuer,
          subject,
          credentialSchema,
          status,
          issuanceDate,
          validFrom,
          validUntil,
          formatVersion,
          language
      );
      this.id = id.getValue();
      this.issuer = issuer;
      this.subject = subject.getValue();
      this.credentialSchema = credentialSchema;
      this.status = status.getValue();
      this.issuanceDate = issuanceDate.getValue();
      this.validFrom = validFrom.getValue();
      this.validUntil = validUntil.getValue();
      this.formatVersion = formatVersion.getValue();
      this.language = language.getValue();
    }
  }


  public static class AttributeItem extends DynamicStruct {
    public String label;

    public String caption;

    public String _type;

    public List<Internationalization> i18n;

    public AttributeItem(String label, String caption, String _type,
                         List<Internationalization> i18n
    ) {
      super(
          new org.web3j.abi.datatypes.Utf8String(label),
          new org.web3j.abi.datatypes.Utf8String(caption),
          new org.web3j.abi.datatypes.Utf8String(_type),
          new org.web3j.abi.datatypes.DynamicArray<Internationalization>(
              Internationalization.class,
              i18n
          )
      );
      this.label = label;
      this.caption = caption;
      this._type = _type;
      this.i18n = i18n;
    }

    public AttributeItem(Utf8String label, Utf8String caption, Utf8String _type,
                         @Parameterized(type = Internationalization.class)
                         DynamicArray<Internationalization> i18n
    ) {
      super(
          label,
          caption,
          _type,
          i18n
      );
      this.label = label.getValue();
      this.caption = caption.getValue();
      this._type = _type.getValue();
      this.i18n = i18n.getValue();
    }
  }


  public static class DocumentAndStatus extends DynamicStruct {
    public Document diddoc;

    public BigInteger status;

    public DocumentAndStatus(Document diddoc, BigInteger status) {
      super(
          diddoc,
          new org.web3j.abi.datatypes.generated.Uint8(status)
      );
      this.diddoc = diddoc;
      this.status = status;
    }

    public DocumentAndStatus(Document diddoc, Uint8 status) {
      super(
          diddoc,
          status
      );
      this.diddoc = diddoc;
      this.status = status.getValue();
    }
  }


  public static class CredentialSubject extends DynamicStruct {
    public List<VCSchemaClaim> claims;

    public CredentialSubject(List<VCSchemaClaim> claims) {
      super(new org.web3j.abi.datatypes.DynamicArray<VCSchemaClaim>(
          VCSchemaClaim.class,
          claims
      ));
      this.claims = claims;
    }

    public CredentialSubject(
        @Parameterized(type = VCSchemaClaim.class) DynamicArray<VCSchemaClaim> claims
    ) {
      super(claims);
      this.claims = claims.getValue();
    }
  }


  public static class AttributeType extends DynamicStruct {
    public AttributeNamespace namespace;

    public List<AttributeItem> items;

    public AttributeType(AttributeNamespace namespace, List<AttributeItem> items) {
      super(
          namespace,
          new org.web3j.abi.datatypes.DynamicArray<AttributeItem>(
              AttributeItem.class,
              items
          )
      );
      this.namespace = namespace;
      this.items = items;
    }

    public AttributeType(AttributeNamespace namespace, @Parameterized(type = AttributeItem.class)
                         DynamicArray<AttributeItem> items
    ) {
      super(
          namespace,
          items
      );
      this.namespace = namespace;
      this.items = items.getValue();
    }
  }


  public static class VcSchema extends DynamicStruct {
    public String id;

    public String schema;

    public String title;

    public String description;

    public MetaData metadata;

    public CredentialSubject credentialSubject;

    public VcSchema(String id, String schema, String title, String description, MetaData metadata,
                    CredentialSubject credentialSubject
    ) {
      super(
          new org.web3j.abi.datatypes.Utf8String(id),
          new org.web3j.abi.datatypes.Utf8String(schema),
          new org.web3j.abi.datatypes.Utf8String(title),
          new org.web3j.abi.datatypes.Utf8String(description),
          metadata,
          credentialSubject
      );
      this.id = id;
      this.schema = schema;
      this.title = title;
      this.description = description;
      this.metadata = metadata;
      this.credentialSubject = credentialSubject;
    }

    public VcSchema(Utf8String id, Utf8String schema, Utf8String title, Utf8String description,
                    MetaData metadata, CredentialSubject credentialSubject
    ) {
      super(
          id,
          schema,
          title,
          description,
          metadata,
          credentialSubject
      );
      this.id = id.getValue();
      this.schema = schema.getValue();
      this.title = title.getValue();
      this.description = description.getValue();
      this.metadata = metadata;
      this.credentialSubject = credentialSubject;
    }
  }


  public static class ZKPLibrary_CredentialSchema extends DynamicStruct {
    public String id;

    public String name;

    public String version;

    public List<String> attrNames;

    public List<AttributeType> attrTypes;

    public String tag;

    public ZKPLibrary_CredentialSchema(String id, String name, String version,
                                       List<String> attrNames, List<AttributeType> attrTypes,
                                       String tag
    ) {
      super(
          new org.web3j.abi.datatypes.Utf8String(id),
          new org.web3j.abi.datatypes.Utf8String(name),
          new org.web3j.abi.datatypes.Utf8String(version),
          new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
              org.web3j.abi.datatypes.Utf8String.class,
              org.web3j.abi.Utils.typeMap(
                  attrNames,
                  org.web3j.abi.datatypes.Utf8String.class
              )
          ),
          new org.web3j.abi.datatypes.DynamicArray<AttributeType>(
              AttributeType.class,
              attrTypes
          ),
          new org.web3j.abi.datatypes.Utf8String(tag)
      );
      this.id = id;
      this.name = name;
      this.version = version;
      this.attrNames = attrNames;
      this.attrTypes = attrTypes;
      this.tag = tag;
    }

    public ZKPLibrary_CredentialSchema(Utf8String id, Utf8String name, Utf8String version,
                                       @Parameterized(type = Utf8String.class)
                                       DynamicArray<Utf8String> attrNames,
                                       @Parameterized(type = AttributeType.class)
                                       DynamicArray<AttributeType> attrTypes, Utf8String tag
    ) {
      super(
          id,
          name,
          version,
          attrNames,
          attrTypes,
          tag
      );
      this.id = id.getValue();
      this.name = name.getValue();
      this.version = version.getValue();
      this.attrNames = attrNames.getValue()
          .stream()
          .map(v -> v.getValue())
          .collect(Collectors.toList());
      this.attrTypes = attrTypes.getValue();
      this.tag = tag.getValue();
    }
  }


  public static class DIDCreatedEventResponse extends BaseEventResponse {
    public String did;

    public String controller;
  }


  public static class DIDDeactivatedEventResponse extends BaseEventResponse {
    public String did;

    public String controller;
  }


  public static class DIDUpdatedEventResponse extends BaseEventResponse {
    public String did;

    public String controller;
  }


  public static class InitializedEventResponse extends BaseEventResponse {
    public BigInteger version;
  }


  public static class RoleAdminChangedEventResponse extends BaseEventResponse {
    public byte[] role;

    public byte[] previousAdminRole;

    public byte[] newAdminRole;
  }


  public static class RoleGrantedEventResponse extends BaseEventResponse {
    public byte[] role;

    public String account;

    public String sender;
  }


  public static class RoleRevokedEventResponse extends BaseEventResponse {
    public byte[] role;

    public String account;

    public String sender;
  }


  public static class SetupEventResponse extends BaseEventResponse {
  }


  public static class UpgradedEventResponse extends BaseEventResponse {
    public String implementation;
  }


  public static class VCIssuedEventResponse extends BaseEventResponse {
    public String vcId;

    public String issuer;

    public String did;
  }


  public static class VCSchemaCreatedEventResponse extends BaseEventResponse {
    public String schemaId;

    public String issuer;
  }


  public static class VCStatusEventResponse extends BaseEventResponse {
    public String vcId;

    public String player;

    public String status;
  }
}
