package org.omnione.generated;

import io.reactivex.Flowable;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.stream.Collectors;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.CustomError;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.DynamicStruct;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Bytes32;
import org.web3j.abi.datatypes.generated.Uint64;
import org.web3j.abi.datatypes.generated.Uint8;
import org.web3j.abi.datatypes.reflection.Parameterized;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>
 * Auto generated code.
 * <p>
 * <strong>Do not modify!</strong>
 * <p>
 * Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>, or
 * the org.web3j.codegen.SolidityFunctionWrapperGenerator in the
 * <a href="https://github.com/LFDT-web3j/web3j/tree/main/codegen">codegen module</a> to update.
 *
 * <p>
 * Generated with web3j version 1.7.0.
 */
@SuppressWarnings("rawtypes")
public class OpenDID extends Contract {
  public static final String BINARY =
      "";
  public static final String FUNC_DEFAULT_ADMIN_ROLE = "DEFAULT_ADMIN_ROLE";
  public static final String FUNC_UPGRADE_INTERFACE_VERSION = "UPGRADE_INTERFACE_VERSION";
  public static final String FUNC_GETDIDDOC = "getDidDoc";
  public static final String FUNC_GETDIDDOCSTATUS = "getDidDocStatus";
  public static final String FUNC_GETROLEADMIN = "getRoleAdmin";
  public static final String FUNC_GETVCSCHEMA = "getVcSchema";
  public static final String FUNC_GETVCMETADATA = "getVcmetaData";
  public static final String FUNC_GETZKPCREDENTIAL = "getZKPCredential";
  public static final String FUNC_GETZKPCREDENTIALDEFINITION = "getZKPCredentialDefinition";
  public static final String FUNC_GRANTROLE = "grantRole";
  public static final String FUNC_HASINITIALIZED = "hasInitialized";
  public static final String FUNC_HASROLE = "hasRole";
  public static final String FUNC_INITIALIZE = "initialize";
  public static final String FUNC_ISHAVEROLE = "isHaveRole";
  public static final String FUNC_PROXIABLEUUID = "proxiableUUID";
  public static final String FUNC_REGISTDIDDOC = "registDidDoc";
  public static final String FUNC_REGISTROLE = "registRole";
  public static final String FUNC_REGISTVCMETADATA = "registVcMetaData";
  public static final String FUNC_REGISTVCSCHEMA = "registVcSchema";
  public static final String FUNC_REGISTZKPCREDENTIAL = "registZKPCredential";
  public static final String FUNC_REGISTZKPCREDENTIALDEFINITION = "registZKPCredentialDefinition";
  public static final String FUNC_RENOUNCEROLE = "renounceRole";
  public static final String FUNC_REVOKEROLE = "revokeRole";
  public static final String FUNC_SETDOCUMENTSTORAGE = "setDocumentStorage";
  public static final String FUNC_SETVCMETASTORAGE = "setVcMetaStorage";
  public static final String FUNC_SETZKPSTORAGE = "setZKPStorage";
  public static final String FUNC_SUPPORTSINTERFACE = "supportsInterface";
  public static final String FUNC_UPDATEDIDDOCSTATUSINSERVICE = "updateDidDocStatusInService";
  public static final String FUNC_UPDATEDIDDOCSTATUSREVOCATION = "updateDidDocStatusRevocation";
  public static final String FUNC_UPDATEVCSTATS = "updateVcStats";
  public static final String FUNC_UPGRADETOANDCALL = "upgradeToAndCall";
  public static final CustomError ACCESSCONTROLBADCONFIRMATION_ERROR = new CustomError(
      "AccessControlBadConfirmation",
      Arrays.<TypeReference<?>>asList()
  );
  public static final CustomError ACCESSCONTROLUNAUTHORIZEDACCOUNT_ERROR = new CustomError(
      "AccessControlUnauthorizedAccount",
      Arrays.<TypeReference<?>>asList(
          new TypeReference<Address>() {
          },
          new TypeReference<Bytes32>() {
          }
      )
  );
  ;
  public static final CustomError ADDRESSEMPTYCODE_ERROR = new CustomError(
      "AddressEmptyCode",
      Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {
      })
  );
  ;
  public static final CustomError ERC1967INVALIDIMPLEMENTATION_ERROR = new CustomError(
      "ERC1967InvalidImplementation",
      Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {
      })
  );
  ;
  public static final CustomError ERC1967NONPAYABLE_ERROR = new CustomError(
      "ERC1967NonPayable",
      Arrays.<TypeReference<?>>asList()
  );
  ;
  public static final CustomError FAILEDCALL_ERROR = new CustomError(
      "FailedCall",
      Arrays.<TypeReference<?>>asList()
  );
  ;
  public static final CustomError INVALIDINITIALIZATION_ERROR = new CustomError(
      "InvalidInitialization",
      Arrays.<TypeReference<?>>asList()
  );
  ;
  public static final CustomError NOTINITIALIZING_ERROR = new CustomError(
      "NotInitializing",
      Arrays.<TypeReference<?>>asList()
  );
  ;
  public static final CustomError UUPSUNAUTHORIZEDCALLCONTEXT_ERROR = new CustomError(
      "UUPSUnauthorizedCallContext",
      Arrays.<TypeReference<?>>asList()
  );
  ;
  public static final CustomError UUPSUNSUPPORTEDPROXIABLEUUID_ERROR = new CustomError(
      "UUPSUnsupportedProxiableUUID",
      Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {
      })
  );
  ;
  public static final Event DIDCREATED_EVENT = new Event(
      "DIDCreated",
      Arrays.<TypeReference<?>>asList(
          new TypeReference<Utf8String>() {
          },
          new TypeReference<Address>() {
          }
      )
  );
  ;
  public static final Event DIDDEACTIVATED_EVENT = new Event(
      "DIDDeactivated",
      Arrays.<TypeReference<?>>asList(
          new TypeReference<Utf8String>() {
          },
          new TypeReference<Address>() {
          }
      )
  );
  ;
  public static final Event DIDUPDATED_EVENT = new Event(
      "DIDUpdated",
      Arrays.<TypeReference<?>>asList(
          new TypeReference<Utf8String>() {
          },
          new TypeReference<Address>() {
          }
      )
  );
  ;
  public static final Event INITIALIZED_EVENT = new Event(
      "Initialized",
      Arrays.<TypeReference<?>>asList(new TypeReference<Uint64>() {
      })
  );
  ;
  public static final Event ROLEADMINCHANGED_EVENT = new Event(
      "RoleAdminChanged",
      Arrays.<TypeReference<?>>asList(
          new TypeReference<Bytes32>(true) {
          },
          new TypeReference<Bytes32>(true) {
          },
          new TypeReference<Bytes32>(true) {
          }
      )
  );
  ;
  public static final Event ROLEGRANTED_EVENT = new Event(
      "RoleGranted",
      Arrays.<TypeReference<?>>asList(
          new TypeReference<Bytes32>(true) {
          },
          new TypeReference<Address>(true) {
          },
          new TypeReference<Address>(true) {
          }
      )
  );
  ;
  public static final Event ROLEREVOKED_EVENT = new Event(
      "RoleRevoked",
      Arrays.<TypeReference<?>>asList(
          new TypeReference<Bytes32>(true) {
          },
          new TypeReference<Address>(true) {
          },
          new TypeReference<Address>(true) {
          }
      )
  );
  ;
  public static final Event SETUP_EVENT = new Event(
      "Setup",
      Arrays.<TypeReference<?>>asList()
  );
  ;
  public static final Event UPGRADED_EVENT = new Event(
      "Upgraded",
      Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {
      })
  );
  ;
  public static final Event VCISSUED_EVENT = new Event(
      "VCIssued",
      Arrays.<TypeReference<?>>asList(
          new TypeReference<Utf8String>() {
          },
          new TypeReference<Address>() {
          },
          new TypeReference<Utf8String>() {
          }
      )
  );
  ;
  public static final Event VCSCHEMACREATED_EVENT = new Event(
      "VCSchemaCreated",
      Arrays.<TypeReference<?>>asList(
          new TypeReference<Utf8String>() {
          },
          new TypeReference<Address>() {
          }
      )
  );
  ;
  public static final Event VCSTATUS_EVENT = new Event(
      "VCStatus",
      Arrays.<TypeReference<?>>asList(
          new TypeReference<Utf8String>() {
          },
          new TypeReference<Address>() {
          },
          new TypeReference<Utf8String>() {
          }
      )
  );
  ;
  private static String librariesLinkedBinary;
  ;

  @Deprecated
  protected OpenDID(String contractAddress, Web3j web3j, Credentials credentials,
                    BigInteger gasPrice, BigInteger gasLimit
  ) {
    super(
        BINARY,
        contractAddress,
        web3j,
        credentials,
        gasPrice,
        gasLimit
    );
  }

  protected OpenDID(String contractAddress, Web3j web3j, Credentials credentials,
                    ContractGasProvider contractGasProvider
  ) {
    super(
        BINARY,
        contractAddress,
        web3j,
        credentials,
        contractGasProvider
    );
  }

  @Deprecated
  protected OpenDID(String contractAddress, Web3j web3j, TransactionManager transactionManager,
                    BigInteger gasPrice, BigInteger gasLimit
  ) {
    super(
        BINARY,
        contractAddress,
        web3j,
        transactionManager,
        gasPrice,
        gasLimit
    );
  }

  protected OpenDID(String contractAddress, Web3j web3j, TransactionManager transactionManager,
                    ContractGasProvider contractGasProvider
  ) {
    super(
        BINARY,
        contractAddress,
        web3j,
        transactionManager,
        contractGasProvider
    );
  }

  public static List<DIDCreatedEventResponse> getDIDCreatedEvents(
      TransactionReceipt transactionReceipt
  ) {
    List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(
        DIDCREATED_EVENT,
        transactionReceipt
    );
    ArrayList<DIDCreatedEventResponse> responses =
        new ArrayList<DIDCreatedEventResponse>(valueList.size());
    for (Contract.EventValuesWithLog eventValues : valueList) {
      DIDCreatedEventResponse typedResponse = new DIDCreatedEventResponse();
      typedResponse.log = eventValues.getLog();
      typedResponse.did = (String) eventValues.getNonIndexedValues()
          .get(0)
          .getValue();
      typedResponse.controller = (String) eventValues.getNonIndexedValues()
          .get(1)
          .getValue();
      responses.add(typedResponse);
    }
    return responses;
  }

  public static DIDCreatedEventResponse getDIDCreatedEventFromLog(Log log) {
    Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(
        DIDCREATED_EVENT,
        log
    );
    DIDCreatedEventResponse typedResponse = new DIDCreatedEventResponse();
    typedResponse.log = log;
    typedResponse.did = (String) eventValues.getNonIndexedValues()
        .get(0)
        .getValue();
    typedResponse.controller = (String) eventValues.getNonIndexedValues()
        .get(1)
        .getValue();
    return typedResponse;
  }

  public static List<DIDDeactivatedEventResponse> getDIDDeactivatedEvents(
      TransactionReceipt transactionReceipt
  ) {
    List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(
        DIDDEACTIVATED_EVENT,
        transactionReceipt
    );
    ArrayList<DIDDeactivatedEventResponse> responses =
        new ArrayList<DIDDeactivatedEventResponse>(valueList.size());
    for (Contract.EventValuesWithLog eventValues : valueList) {
      DIDDeactivatedEventResponse typedResponse = new DIDDeactivatedEventResponse();
      typedResponse.log = eventValues.getLog();
      typedResponse.did = (String) eventValues.getNonIndexedValues()
          .get(0)
          .getValue();
      typedResponse.controller = (String) eventValues.getNonIndexedValues()
          .get(1)
          .getValue();
      responses.add(typedResponse);
    }
    return responses;
  }

  public static DIDDeactivatedEventResponse getDIDDeactivatedEventFromLog(Log log) {
    Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(
        DIDDEACTIVATED_EVENT,
        log
    );
    DIDDeactivatedEventResponse typedResponse = new DIDDeactivatedEventResponse();
    typedResponse.log = log;
    typedResponse.did = (String) eventValues.getNonIndexedValues()
        .get(0)
        .getValue();
    typedResponse.controller = (String) eventValues.getNonIndexedValues()
        .get(1)
        .getValue();
    return typedResponse;
  }

  public static List<DIDUpdatedEventResponse> getDIDUpdatedEvents(
      TransactionReceipt transactionReceipt
  ) {
    List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(
        DIDUPDATED_EVENT,
        transactionReceipt
    );
    ArrayList<DIDUpdatedEventResponse> responses =
        new ArrayList<DIDUpdatedEventResponse>(valueList.size());
    for (Contract.EventValuesWithLog eventValues : valueList) {
      DIDUpdatedEventResponse typedResponse = new DIDUpdatedEventResponse();
      typedResponse.log = eventValues.getLog();
      typedResponse.did = (String) eventValues.getNonIndexedValues()
          .get(0)
          .getValue();
      typedResponse.controller = (String) eventValues.getNonIndexedValues()
          .get(1)
          .getValue();
      responses.add(typedResponse);
    }
    return responses;
  }

  public static DIDUpdatedEventResponse getDIDUpdatedEventFromLog(Log log) {
    Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(
        DIDUPDATED_EVENT,
        log
    );
    DIDUpdatedEventResponse typedResponse = new DIDUpdatedEventResponse();
    typedResponse.log = log;
    typedResponse.did = (String) eventValues.getNonIndexedValues()
        .get(0)
        .getValue();
    typedResponse.controller = (String) eventValues.getNonIndexedValues()
        .get(1)
        .getValue();
    return typedResponse;
  }

  public static List<InitializedEventResponse> getInitializedEvents(
      TransactionReceipt transactionReceipt
  ) {
    List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(
        INITIALIZED_EVENT,
        transactionReceipt
    );
    ArrayList<InitializedEventResponse> responses =
        new ArrayList<InitializedEventResponse>(valueList.size());
    for (Contract.EventValuesWithLog eventValues : valueList) {
      InitializedEventResponse typedResponse = new InitializedEventResponse();
      typedResponse.log = eventValues.getLog();
      typedResponse.version = (BigInteger) eventValues.getNonIndexedValues()
          .get(0)
          .getValue();
      responses.add(typedResponse);
    }
    return responses;
  }

  public static InitializedEventResponse getInitializedEventFromLog(Log log) {
    Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(
        INITIALIZED_EVENT,
        log
    );
    InitializedEventResponse typedResponse = new InitializedEventResponse();
    typedResponse.log = log;
    typedResponse.version = (BigInteger) eventValues.getNonIndexedValues()
        .get(0)
        .getValue();
    return typedResponse;
  }

  public static List<RoleAdminChangedEventResponse> getRoleAdminChangedEvents(
      TransactionReceipt transactionReceipt
  ) {
    List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(
        ROLEADMINCHANGED_EVENT,
        transactionReceipt
    );
    ArrayList<RoleAdminChangedEventResponse> responses =
        new ArrayList<RoleAdminChangedEventResponse>(valueList.size());
    for (Contract.EventValuesWithLog eventValues : valueList) {
      RoleAdminChangedEventResponse typedResponse = new RoleAdminChangedEventResponse();
      typedResponse.log = eventValues.getLog();
      typedResponse.role = (byte[]) eventValues.getIndexedValues()
          .get(0)
          .getValue();
      typedResponse.previousAdminRole = (byte[]) eventValues.getIndexedValues()
          .get(1)
          .getValue();
      typedResponse.newAdminRole = (byte[]) eventValues.getIndexedValues()
          .get(2)
          .getValue();
      responses.add(typedResponse);
    }
    return responses;
  }

  public static RoleAdminChangedEventResponse getRoleAdminChangedEventFromLog(Log log) {
    Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(
        ROLEADMINCHANGED_EVENT,
        log
    );
    RoleAdminChangedEventResponse typedResponse = new RoleAdminChangedEventResponse();
    typedResponse.log = log;
    typedResponse.role = (byte[]) eventValues.getIndexedValues()
        .get(0)
        .getValue();
    typedResponse.previousAdminRole = (byte[]) eventValues.getIndexedValues()
        .get(1)
        .getValue();
    typedResponse.newAdminRole = (byte[]) eventValues.getIndexedValues()
        .get(2)
        .getValue();
    return typedResponse;
  }

  public static List<RoleGrantedEventResponse> getRoleGrantedEvents(
      TransactionReceipt transactionReceipt
  ) {
    List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(
        ROLEGRANTED_EVENT,
        transactionReceipt
    );
    ArrayList<RoleGrantedEventResponse> responses =
        new ArrayList<RoleGrantedEventResponse>(valueList.size());
    for (Contract.EventValuesWithLog eventValues : valueList) {
      RoleGrantedEventResponse typedResponse = new RoleGrantedEventResponse();
      typedResponse.log = eventValues.getLog();
      typedResponse.role = (byte[]) eventValues.getIndexedValues()
          .get(0)
          .getValue();
      typedResponse.account = (String) eventValues.getIndexedValues()
          .get(1)
          .getValue();
      typedResponse.sender = (String) eventValues.getIndexedValues()
          .get(2)
          .getValue();
      responses.add(typedResponse);
    }
    return responses;
  }

  public static RoleGrantedEventResponse getRoleGrantedEventFromLog(Log log) {
    Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(
        ROLEGRANTED_EVENT,
        log
    );
    RoleGrantedEventResponse typedResponse = new RoleGrantedEventResponse();
    typedResponse.log = log;
    typedResponse.role = (byte[]) eventValues.getIndexedValues()
        .get(0)
        .getValue();
    typedResponse.account = (String) eventValues.getIndexedValues()
        .get(1)
        .getValue();
    typedResponse.sender = (String) eventValues.getIndexedValues()
        .get(2)
        .getValue();
    return typedResponse;
  }

  public static List<RoleRevokedEventResponse> getRoleRevokedEvents(
      TransactionReceipt transactionReceipt
  ) {
    List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(
        ROLEREVOKED_EVENT,
        transactionReceipt
    );
    ArrayList<RoleRevokedEventResponse> responses =
        new ArrayList<RoleRevokedEventResponse>(valueList.size());
    for (Contract.EventValuesWithLog eventValues : valueList) {
      RoleRevokedEventResponse typedResponse = new RoleRevokedEventResponse();
      typedResponse.log = eventValues.getLog();
      typedResponse.role = (byte[]) eventValues.getIndexedValues()
          .get(0)
          .getValue();
      typedResponse.account = (String) eventValues.getIndexedValues()
          .get(1)
          .getValue();
      typedResponse.sender = (String) eventValues.getIndexedValues()
          .get(2)
          .getValue();
      responses.add(typedResponse);
    }
    return responses;
  }

  public static RoleRevokedEventResponse getRoleRevokedEventFromLog(Log log) {
    Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(
        ROLEREVOKED_EVENT,
        log
    );
    RoleRevokedEventResponse typedResponse = new RoleRevokedEventResponse();
    typedResponse.log = log;
    typedResponse.role = (byte[]) eventValues.getIndexedValues()
        .get(0)
        .getValue();
    typedResponse.account = (String) eventValues.getIndexedValues()
        .get(1)
        .getValue();
    typedResponse.sender = (String) eventValues.getIndexedValues()
        .get(2)
        .getValue();
    return typedResponse;
  }

  public static List<SetupEventResponse> getSetupEvents(TransactionReceipt transactionReceipt) {
    List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(
        SETUP_EVENT,
        transactionReceipt
    );
    ArrayList<SetupEventResponse> responses = new ArrayList<SetupEventResponse>(valueList.size());
    for (Contract.EventValuesWithLog eventValues : valueList) {
      SetupEventResponse typedResponse = new SetupEventResponse();
      typedResponse.log = eventValues.getLog();
      responses.add(typedResponse);
    }
    return responses;
  }

  public static SetupEventResponse getSetupEventFromLog(Log log) {
    Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(
        SETUP_EVENT,
        log
    );
    SetupEventResponse typedResponse = new SetupEventResponse();
    typedResponse.log = log;
    return typedResponse;
  }

  public static List<UpgradedEventResponse> getUpgradedEvents(TransactionReceipt transactionReceipt
  ) {
    List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(
        UPGRADED_EVENT,
        transactionReceipt
    );
    ArrayList<UpgradedEventResponse> responses =
        new ArrayList<UpgradedEventResponse>(valueList.size());
    for (Contract.EventValuesWithLog eventValues : valueList) {
      UpgradedEventResponse typedResponse = new UpgradedEventResponse();
      typedResponse.log = eventValues.getLog();
      typedResponse.implementation = (String) eventValues.getIndexedValues()
          .get(0)
          .getValue();
      responses.add(typedResponse);
    }
    return responses;
  }

  public static UpgradedEventResponse getUpgradedEventFromLog(Log log) {
    Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(
        UPGRADED_EVENT,
        log
    );
    UpgradedEventResponse typedResponse = new UpgradedEventResponse();
    typedResponse.log = log;
    typedResponse.implementation = (String) eventValues.getIndexedValues()
        .get(0)
        .getValue();
    return typedResponse;
  }

  public static List<VCIssuedEventResponse> getVCIssuedEvents(TransactionReceipt transactionReceipt
  ) {
    List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(
        VCISSUED_EVENT,
        transactionReceipt
    );
    ArrayList<VCIssuedEventResponse> responses =
        new ArrayList<VCIssuedEventResponse>(valueList.size());
    for (Contract.EventValuesWithLog eventValues : valueList) {
      VCIssuedEventResponse typedResponse = new VCIssuedEventResponse();
      typedResponse.log = eventValues.getLog();
      typedResponse.vcId = (String) eventValues.getNonIndexedValues()
          .get(0)
          .getValue();
      typedResponse.issuer = (String) eventValues.getNonIndexedValues()
          .get(1)
          .getValue();
      typedResponse.did = (String) eventValues.getNonIndexedValues()
          .get(2)
          .getValue();
      responses.add(typedResponse);
    }
    return responses;
  }

  public static VCIssuedEventResponse getVCIssuedEventFromLog(Log log) {
    Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(
        VCISSUED_EVENT,
        log
    );
    VCIssuedEventResponse typedResponse = new VCIssuedEventResponse();
    typedResponse.log = log;
    typedResponse.vcId = (String) eventValues.getNonIndexedValues()
        .get(0)
        .getValue();
    typedResponse.issuer = (String) eventValues.getNonIndexedValues()
        .get(1)
        .getValue();
    typedResponse.did = (String) eventValues.getNonIndexedValues()
        .get(2)
        .getValue();
    return typedResponse;
  }

  public static List<VCSchemaCreatedEventResponse> getVCSchemaCreatedEvents(
      TransactionReceipt transactionReceipt
  ) {
    List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(
        VCSCHEMACREATED_EVENT,
        transactionReceipt
    );
    ArrayList<VCSchemaCreatedEventResponse> responses =
        new ArrayList<VCSchemaCreatedEventResponse>(valueList.size());
    for (Contract.EventValuesWithLog eventValues : valueList) {
      VCSchemaCreatedEventResponse typedResponse = new VCSchemaCreatedEventResponse();
      typedResponse.log = eventValues.getLog();
      typedResponse.schemaId = (String) eventValues.getNonIndexedValues()
          .get(0)
          .getValue();
      typedResponse.issuer = (String) eventValues.getNonIndexedValues()
          .get(1)
          .getValue();
      responses.add(typedResponse);
    }
    return responses;
  }

  public static VCSchemaCreatedEventResponse getVCSchemaCreatedEventFromLog(Log log) {
    Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(
        VCSCHEMACREATED_EVENT,
        log
    );
    VCSchemaCreatedEventResponse typedResponse = new VCSchemaCreatedEventResponse();
    typedResponse.log = log;
    typedResponse.schemaId = (String) eventValues.getNonIndexedValues()
        .get(0)
        .getValue();
    typedResponse.issuer = (String) eventValues.getNonIndexedValues()
        .get(1)
        .getValue();
    return typedResponse;
  }

  public static List<VCStatusEventResponse> getVCStatusEvents(TransactionReceipt transactionReceipt
  ) {
    List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(
        VCSTATUS_EVENT,
        transactionReceipt
    );
    ArrayList<VCStatusEventResponse> responses =
        new ArrayList<VCStatusEventResponse>(valueList.size());
    for (Contract.EventValuesWithLog eventValues : valueList) {
      VCStatusEventResponse typedResponse = new VCStatusEventResponse();
      typedResponse.log = eventValues.getLog();
      typedResponse.vcId = (String) eventValues.getNonIndexedValues()
          .get(0)
          .getValue();
      typedResponse.player = (String) eventValues.getNonIndexedValues()
          .get(1)
          .getValue();
      typedResponse.status = (String) eventValues.getNonIndexedValues()
          .get(2)
          .getValue();
      responses.add(typedResponse);
    }
    return responses;
  }

  public static VCStatusEventResponse getVCStatusEventFromLog(Log log) {
    Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(
        VCSTATUS_EVENT,
        log
    );
    VCStatusEventResponse typedResponse = new VCStatusEventResponse();
    typedResponse.log = log;
    typedResponse.vcId = (String) eventValues.getNonIndexedValues()
        .get(0)
        .getValue();
    typedResponse.player = (String) eventValues.getNonIndexedValues()
        .get(1)
        .getValue();
    typedResponse.status = (String) eventValues.getNonIndexedValues()
        .get(2)
        .getValue();
    return typedResponse;
  }

  @Deprecated
  public static OpenDID load(String contractAddress, Web3j web3j, Credentials credentials,
                             BigInteger gasPrice, BigInteger gasLimit
  ) {
    return new OpenDID(
        contractAddress,
        web3j,
        credentials,
        gasPrice,
        gasLimit
    );
  }

  @Deprecated
  public static OpenDID load(String contractAddress, Web3j web3j,
                             TransactionManager transactionManager, BigInteger gasPrice,
                             BigInteger gasLimit
  ) {
    return new OpenDID(
        contractAddress,
        web3j,
        transactionManager,
        gasPrice,
        gasLimit
    );
  }

  public static OpenDID load(String contractAddress, Web3j web3j, Credentials credentials,
                             ContractGasProvider contractGasProvider
  ) {
    return new OpenDID(
        contractAddress,
        web3j,
        credentials,
        contractGasProvider
    );
  }

  public static OpenDID load(String contractAddress, Web3j web3j,
                             TransactionManager transactionManager,
                             ContractGasProvider contractGasProvider
  ) {
    return new OpenDID(
        contractAddress,
        web3j,
        transactionManager,
        contractGasProvider
    );
  }

  public static RemoteCall<OpenDID> deploy(Web3j web3j, Credentials credentials,
                                           ContractGasProvider contractGasProvider
  ) {
    return deployRemoteCall(
        OpenDID.class,
        web3j,
        credentials,
        contractGasProvider,
        getDeploymentBinary(),
        ""
    );
  }

  @Deprecated
  public static RemoteCall<OpenDID> deploy(Web3j web3j, Credentials credentials,
                                           BigInteger gasPrice, BigInteger gasLimit
  ) {
    return deployRemoteCall(
        OpenDID.class,
        web3j,
        credentials,
        gasPrice,
        gasLimit,
        getDeploymentBinary(),
        ""
    );
  }

  public static RemoteCall<OpenDID> deploy(Web3j web3j, TransactionManager transactionManager,
                                           ContractGasProvider contractGasProvider
  ) {
    return deployRemoteCall(
        OpenDID.class,
        web3j,
        transactionManager,
        contractGasProvider,
        getDeploymentBinary(),
        ""
    );
  }

  @Deprecated
  public static RemoteCall<OpenDID> deploy(Web3j web3j, TransactionManager transactionManager,
                                           BigInteger gasPrice, BigInteger gasLimit
  ) {
    return deployRemoteCall(
        OpenDID.class,
        web3j,
        transactionManager,
        gasPrice,
        gasLimit,
        getDeploymentBinary(),
        ""
    );
  }

  public static void linkLibraries(List<Contract.LinkReference> references) {
    librariesLinkedBinary = linkBinaryWithReferences(
        BINARY,
        references
    );
  }

  private static String getDeploymentBinary() {
    if (librariesLinkedBinary != null) {
      return librariesLinkedBinary;
    } else {
      return BINARY;
    }
  }

  public Flowable<DIDCreatedEventResponse> dIDCreatedEventFlowable(EthFilter filter) {
    return web3j.ethLogFlowable(filter)
        .map(log -> getDIDCreatedEventFromLog(log));
  }

  public Flowable<DIDCreatedEventResponse> dIDCreatedEventFlowable(DefaultBlockParameter startBlock,
                                                                   DefaultBlockParameter endBlock
  ) {
    EthFilter filter = new EthFilter(
        startBlock,
        endBlock,
        getContractAddress()
    );
    filter.addSingleTopic(EventEncoder.encode(DIDCREATED_EVENT));
    return dIDCreatedEventFlowable(filter);
  }

  public Flowable<DIDDeactivatedEventResponse> dIDDeactivatedEventFlowable(EthFilter filter) {
    return web3j.ethLogFlowable(filter)
        .map(log -> getDIDDeactivatedEventFromLog(log));
  }

  public Flowable<DIDDeactivatedEventResponse> dIDDeactivatedEventFlowable(
      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
    EthFilter filter = new EthFilter(
        startBlock,
        endBlock,
        getContractAddress()
    );
    filter.addSingleTopic(EventEncoder.encode(DIDDEACTIVATED_EVENT));
    return dIDDeactivatedEventFlowable(filter);
  }

  public Flowable<DIDUpdatedEventResponse> dIDUpdatedEventFlowable(EthFilter filter) {
    return web3j.ethLogFlowable(filter)
        .map(log -> getDIDUpdatedEventFromLog(log));
  }

  public Flowable<DIDUpdatedEventResponse> dIDUpdatedEventFlowable(DefaultBlockParameter startBlock,
                                                                   DefaultBlockParameter endBlock
  ) {
    EthFilter filter = new EthFilter(
        startBlock,
        endBlock,
        getContractAddress()
    );
    filter.addSingleTopic(EventEncoder.encode(DIDUPDATED_EVENT));
    return dIDUpdatedEventFlowable(filter);
  }

  public Flowable<InitializedEventResponse> initializedEventFlowable(EthFilter filter) {
    return web3j.ethLogFlowable(filter)
        .map(log -> getInitializedEventFromLog(log));
  }

  public Flowable<InitializedEventResponse> initializedEventFlowable(
      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
    EthFilter filter = new EthFilter(
        startBlock,
        endBlock,
        getContractAddress()
    );
    filter.addSingleTopic(EventEncoder.encode(INITIALIZED_EVENT));
    return initializedEventFlowable(filter);
  }

  public Flowable<RoleAdminChangedEventResponse> roleAdminChangedEventFlowable(EthFilter filter) {
    return web3j.ethLogFlowable(filter)
        .map(log -> getRoleAdminChangedEventFromLog(log));
  }

  public Flowable<RoleAdminChangedEventResponse> roleAdminChangedEventFlowable(
      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
    EthFilter filter = new EthFilter(
        startBlock,
        endBlock,
        getContractAddress()
    );
    filter.addSingleTopic(EventEncoder.encode(ROLEADMINCHANGED_EVENT));
    return roleAdminChangedEventFlowable(filter);
  }

  public Flowable<RoleGrantedEventResponse> roleGrantedEventFlowable(EthFilter filter) {
    return web3j.ethLogFlowable(filter)
        .map(log -> getRoleGrantedEventFromLog(log));
  }

  public Flowable<RoleGrantedEventResponse> roleGrantedEventFlowable(
      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
    EthFilter filter = new EthFilter(
        startBlock,
        endBlock,
        getContractAddress()
    );
    filter.addSingleTopic(EventEncoder.encode(ROLEGRANTED_EVENT));
    return roleGrantedEventFlowable(filter);
  }

  public Flowable<RoleRevokedEventResponse> roleRevokedEventFlowable(EthFilter filter) {
    return web3j.ethLogFlowable(filter)
        .map(log -> getRoleRevokedEventFromLog(log));
  }

  public Flowable<RoleRevokedEventResponse> roleRevokedEventFlowable(
      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
    EthFilter filter = new EthFilter(
        startBlock,
        endBlock,
        getContractAddress()
    );
    filter.addSingleTopic(EventEncoder.encode(ROLEREVOKED_EVENT));
    return roleRevokedEventFlowable(filter);
  }

  public Flowable<SetupEventResponse> setupEventFlowable(EthFilter filter) {
    return web3j.ethLogFlowable(filter)
        .map(log -> getSetupEventFromLog(log));
  }

  public Flowable<SetupEventResponse> setupEventFlowable(DefaultBlockParameter startBlock,
                                                         DefaultBlockParameter endBlock
  ) {
    EthFilter filter = new EthFilter(
        startBlock,
        endBlock,
        getContractAddress()
    );
    filter.addSingleTopic(EventEncoder.encode(SETUP_EVENT));
    return setupEventFlowable(filter);
  }

  public Flowable<UpgradedEventResponse> upgradedEventFlowable(EthFilter filter) {
    return web3j.ethLogFlowable(filter)
        .map(log -> getUpgradedEventFromLog(log));
  }

  public Flowable<UpgradedEventResponse> upgradedEventFlowable(DefaultBlockParameter startBlock,
                                                               DefaultBlockParameter endBlock
  ) {
    EthFilter filter = new EthFilter(
        startBlock,
        endBlock,
        getContractAddress()
    );
    filter.addSingleTopic(EventEncoder.encode(UPGRADED_EVENT));
    return upgradedEventFlowable(filter);
  }

  public Flowable<VCIssuedEventResponse> vCIssuedEventFlowable(EthFilter filter) {
    return web3j.ethLogFlowable(filter)
        .map(log -> getVCIssuedEventFromLog(log));
  }

  public Flowable<VCIssuedEventResponse> vCIssuedEventFlowable(DefaultBlockParameter startBlock,
                                                               DefaultBlockParameter endBlock
  ) {
    EthFilter filter = new EthFilter(
        startBlock,
        endBlock,
        getContractAddress()
    );
    filter.addSingleTopic(EventEncoder.encode(VCISSUED_EVENT));
    return vCIssuedEventFlowable(filter);
  }

  public Flowable<VCSchemaCreatedEventResponse> vCSchemaCreatedEventFlowable(EthFilter filter) {
    return web3j.ethLogFlowable(filter)
        .map(log -> getVCSchemaCreatedEventFromLog(log));
  }

  public Flowable<VCSchemaCreatedEventResponse> vCSchemaCreatedEventFlowable(
      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
    EthFilter filter = new EthFilter(
        startBlock,
        endBlock,
        getContractAddress()
    );
    filter.addSingleTopic(EventEncoder.encode(VCSCHEMACREATED_EVENT));
    return vCSchemaCreatedEventFlowable(filter);
  }

  public Flowable<VCStatusEventResponse> vCStatusEventFlowable(EthFilter filter) {
    return web3j.ethLogFlowable(filter)
        .map(log -> getVCStatusEventFromLog(log));
  }

  public Flowable<VCStatusEventResponse> vCStatusEventFlowable(DefaultBlockParameter startBlock,
                                                               DefaultBlockParameter endBlock
  ) {
    EthFilter filter = new EthFilter(
        startBlock,
        endBlock,
        getContractAddress()
    );
    filter.addSingleTopic(EventEncoder.encode(VCSTATUS_EVENT));
    return vCStatusEventFlowable(filter);
  }

  public RemoteFunctionCall<byte[]> DEFAULT_ADMIN_ROLE() {
    final Function function = new Function(
        FUNC_DEFAULT_ADMIN_ROLE,
        Arrays.<Type>asList(),
        Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {
        })
    );
    return executeRemoteCallSingleValueReturn(
        function,
        byte[].class
    );
  }

  public RemoteFunctionCall<String> UPGRADE_INTERFACE_VERSION() {
    final Function function = new Function(
        FUNC_UPGRADE_INTERFACE_VERSION,
        Arrays.<Type>asList(),
        Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {
        })
    );
    return executeRemoteCallSingleValueReturn(
        function,
        String.class
    );
  }

  public RemoteFunctionCall<DocumentAndStatus> getDidDoc(String _did) {
    final Function function = new Function(
        FUNC_GETDIDDOC,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_did)),
        Arrays.<TypeReference<?>>asList(new TypeReference<DocumentAndStatus>() {
        })
    );
    return executeRemoteCallSingleValueReturn(
        function,
        DocumentAndStatus.class
    );
  }

  public RemoteFunctionCall<DocumentStatus> getDidDocStatus(String _did) {
    final Function function = new Function(
        FUNC_GETDIDDOCSTATUS,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_did)),
        Arrays.<TypeReference<?>>asList(new TypeReference<DocumentStatus>() {
        })
    );
    return executeRemoteCallSingleValueReturn(
        function,
        DocumentStatus.class
    );
  }

  public RemoteFunctionCall<byte[]> getRoleAdmin(byte[] role) {
    final Function function = new Function(
        FUNC_GETROLEADMIN,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role)),
        Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {
        })
    );
    return executeRemoteCallSingleValueReturn(
        function,
        byte[].class
    );
  }

  public RemoteFunctionCall<VcSchema> getVcSchema(String _id) {
    final Function function = new Function(
        FUNC_GETVCSCHEMA,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_id)),
        Arrays.<TypeReference<?>>asList(new TypeReference<VcSchema>() {
        })
    );
    return executeRemoteCallSingleValueReturn(
        function,
        VcSchema.class
    );
  }

  public RemoteFunctionCall<VcMeta> getVcmetaData(String _id) {
    final Function function = new Function(
        FUNC_GETVCMETADATA,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_id)),
        Arrays.<TypeReference<?>>asList(new TypeReference<VcMeta>() {
        })
    );
    return executeRemoteCallSingleValueReturn(
        function,
        VcMeta.class
    );
  }

  public RemoteFunctionCall<ZKPLibrary_CredentialSchema> getZKPCredential(String _id) {
    final Function function = new Function(
        FUNC_GETZKPCREDENTIAL,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_id)),
        Arrays.<TypeReference<?>>asList(new TypeReference<ZKPLibrary_CredentialSchema>() {
        })
    );
    return executeRemoteCallSingleValueReturn(
        function,
        ZKPLibrary_CredentialSchema.class
    );
  }

  public RemoteFunctionCall<CredentialDefinition> getZKPCredentialDefinition(String _id) {
    final Function function = new Function(
        FUNC_GETZKPCREDENTIALDEFINITION,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_id)),
        Arrays.<TypeReference<?>>asList(new TypeReference<CredentialDefinition>() {
        })
    );
    return executeRemoteCallSingleValueReturn(
        function,
        CredentialDefinition.class
    );
  }

  public RemoteFunctionCall<TransactionReceipt> grantRole(byte[] role, String account) {
    final Function function = new Function(
        FUNC_GRANTROLE,
        Arrays.<Type>asList(
            new org.web3j.abi.datatypes.generated.Bytes32(role),
            new org.web3j.abi.datatypes.Address(
                160,
                account
            )
        ),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<Boolean> hasInitialized() {
    final Function function = new Function(
        FUNC_HASINITIALIZED,
        Arrays.<Type>asList(),
        Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {
        })
    );
    return executeRemoteCallSingleValueReturn(
        function,
        Boolean.class
    );
  }

  public RemoteFunctionCall<Boolean> hasRole(byte[] role, String account) {
    final Function function = new Function(
        FUNC_HASROLE,
        Arrays.<Type>asList(
            new org.web3j.abi.datatypes.generated.Bytes32(role),
            new org.web3j.abi.datatypes.Address(
                160,
                account
            )
        ),
        Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {
        })
    );
    return executeRemoteCallSingleValueReturn(
        function,
        Boolean.class
    );
  }

  public RemoteFunctionCall<TransactionReceipt> initialize(String _documentStorage,
                                                           String _vcMetaStorage,
                                                           String _zkpStorage,
                                                           String _multibaseContract
  ) {
    final Function function = new Function(
        FUNC_INITIALIZE,
        Arrays.<Type>asList(
            new org.web3j.abi.datatypes.Address(
                160,
                _documentStorage
            ),
            new org.web3j.abi.datatypes.Address(
                160,
                _vcMetaStorage
            ),
            new org.web3j.abi.datatypes.Address(
                160,
                _zkpStorage
            ),
            new org.web3j.abi.datatypes.Address(
                160,
                _multibaseContract
            )
        ),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<Boolean> isHaveRole(String target, String roleType) {
    final Function function = new Function(
        FUNC_ISHAVEROLE,
        Arrays.<Type>asList(
            new org.web3j.abi.datatypes.Address(
                160,
                target
            ),
            new org.web3j.abi.datatypes.Utf8String(roleType)
        ),
        Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {
        })
    );
    return executeRemoteCallSingleValueReturn(
        function,
        Boolean.class
    );
  }

  public RemoteFunctionCall<byte[]> proxiableUUID() {
    final Function function = new Function(
        FUNC_PROXIABLEUUID,
        Arrays.<Type>asList(),
        Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {
        })
    );
    return executeRemoteCallSingleValueReturn(
        function,
        byte[].class
    );
  }

  public RemoteFunctionCall<TransactionReceipt> registDidDoc(Document _invokedDidDoc) {
    final Function function = new Function(
        FUNC_REGISTDIDDOC,
        Arrays.<Type>asList(_invokedDidDoc),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> registRole(String target, String roleType) {
    final Function function = new Function(
        FUNC_REGISTROLE,
        Arrays.<Type>asList(
            new org.web3j.abi.datatypes.Address(
                160,
                target
            ),
            new org.web3j.abi.datatypes.Utf8String(roleType)
        ),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> registVcMetaData(VcMeta _vcMeta) {
    final Function function = new Function(
        FUNC_REGISTVCMETADATA,
        Arrays.<Type>asList(_vcMeta),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> registVcSchema(VcSchema _vcSchema) {
    final Function function = new Function(
        FUNC_REGISTVCSCHEMA,
        Arrays.<Type>asList(_vcSchema),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> registZKPCredential(
      ZKPLibrary_CredentialSchema _credentialSchema
  ) {
    final Function function = new Function(
        FUNC_REGISTZKPCREDENTIAL,
        Arrays.<Type>asList(_credentialSchema),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> registZKPCredentialDefinition(
      CredentialDefinition _credentialDefinition
  ) {
    final Function function = new Function(
        FUNC_REGISTZKPCREDENTIALDEFINITION,
        Arrays.<Type>asList(_credentialDefinition),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> renounceRole(byte[] role,
                                                             String callerConfirmation
  ) {
    final Function function = new Function(
        FUNC_RENOUNCEROLE,
        Arrays.<Type>asList(
            new org.web3j.abi.datatypes.generated.Bytes32(role),
            new org.web3j.abi.datatypes.Address(
                160,
                callerConfirmation
            )
        ),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> revokeRole(byte[] role, String account) {
    final Function function = new Function(
        FUNC_REVOKEROLE,
        Arrays.<Type>asList(
            new org.web3j.abi.datatypes.generated.Bytes32(role),
            new org.web3j.abi.datatypes.Address(
                160,
                account
            )
        ),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> setDocumentStorage(String _documentStorage) {
    final Function function = new Function(
        FUNC_SETDOCUMENTSTORAGE,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(
            160,
            _documentStorage
        )),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> setVcMetaStorage(String _vcMetaStorage) {
    final Function function = new Function(
        FUNC_SETVCMETASTORAGE,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(
            160,
            _vcMetaStorage
        )),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> setZKPStorage(String _zkpStorage) {
    final Function function = new Function(
        FUNC_SETZKPSTORAGE,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(
            160,
            _zkpStorage
        )),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<Boolean> supportsInterface(byte[] interfaceId) {
    final Function function = new Function(
        FUNC_SUPPORTSINTERFACE,
        Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes4(interfaceId)),
        Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {
        })
    );
    return executeRemoteCallSingleValueReturn(
        function,
        Boolean.class
    );
  }

  public RemoteFunctionCall<TransactionReceipt> updateDidDocStatusInService(String _did,
                                                                            String _status,
                                                                            String _versionId
  ) {
    final Function function = new Function(
        FUNC_UPDATEDIDDOCSTATUSINSERVICE,
        Arrays.<Type>asList(
            new org.web3j.abi.datatypes.Utf8String(_did),
            new org.web3j.abi.datatypes.Utf8String(_status),
            new org.web3j.abi.datatypes.Utf8String(_versionId)
        ),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> updateDidDocStatusRevocation(String _did,
                                                                             String _status,
                                                                             String _terminatedTime
  ) {
    final Function function = new Function(
        FUNC_UPDATEDIDDOCSTATUSREVOCATION,
        Arrays.<Type>asList(
            new org.web3j.abi.datatypes.Utf8String(_did),
            new org.web3j.abi.datatypes.Utf8String(_status),
            new org.web3j.abi.datatypes.Utf8String(_terminatedTime)
        ),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> updateVcStats(String _vcId, String _status) {
    final Function function = new Function(
        FUNC_UPDATEVCSTATS,
        Arrays.<Type>asList(
            new org.web3j.abi.datatypes.Utf8String(_vcId),
            new org.web3j.abi.datatypes.Utf8String(_status)
        ),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(function);
  }

  public RemoteFunctionCall<TransactionReceipt> upgradeToAndCall(String newImplementation,
                                                                 byte[] data, BigInteger weiValue
  ) {
    final Function function = new Function(
        FUNC_UPGRADETOANDCALL,
        Arrays.<Type>asList(
            new org.web3j.abi.datatypes.Address(
                160,
                newImplementation
            ),
            new org.web3j.abi.datatypes.DynamicBytes(data)
        ),
        Collections.<TypeReference<?>>emptyList()
    );
    return executeRemoteCallTransaction(
        function,
        weiValue
    );
  }


  public static class VerificationMethod extends DynamicStruct {
    public String id;

    public BigInteger keyType;

    public String controller;

    public String publicKeyMultibase;

    public BigInteger authType;

    public VerificationMethod(String id, BigInteger keyType, String controller,
                              String publicKeyMultibase, BigInteger authType
    ) {
      super(
          new org.web3j.abi.datatypes.Utf8String(id),
          new org.web3j.abi.datatypes.generated.Uint8(keyType),
          new org.web3j.abi.datatypes.Utf8String(controller),
          new org.web3j.abi.datatypes.Utf8String(publicKeyMultibase),
          new org.web3j.abi.datatypes.generated.Uint8(authType)
      );
      this.id = id;
      this.keyType = keyType;
      this.controller = controller;
      this.publicKeyMultibase = publicKeyMultibase;
      this.authType = authType;
    }

    public VerificationMethod(Utf8String id, Uint8 keyType, Utf8String controller,
                              Utf8String publicKeyMultibase, Uint8 authType
    ) {
      super(
          id,
          keyType,
          controller,
          publicKeyMultibase,
          authType
      );
      this.id = id.getValue();
      this.keyType = keyType.getValue();
      this.controller = controller.getValue();
      this.publicKeyMultibase = publicKeyMultibase.getValue();
      this.authType = authType.getValue();
    }
  }


  public static class Service extends DynamicStruct {
    public String id;

    public String serviceType;

    public List<String> serviceEndpoint;

    public Service(String id, String serviceType, List<String> serviceEndpoint) {
      super(
          new org.web3j.abi.datatypes.Utf8String(id),
          new org.web3j.abi.datatypes.Utf8String(serviceType),
          new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
              org.web3j.abi.datatypes.Utf8String.class,
              org.web3j.abi.Utils.typeMap(
                  serviceEndpoint,
                  org.web3j.abi.datatypes.Utf8String.class
              )
          )
      );
      this.id = id;
      this.serviceType = serviceType;
      this.serviceEndpoint = serviceEndpoint;
    }

    public Service(Utf8String id, Utf8String serviceType,
                   @Parameterized(type = Utf8String.class) DynamicArray<Utf8String> serviceEndpoint
    ) {
      super(
          id,
          serviceType,
          serviceEndpoint
      );
      this.id = id.getValue();
      this.serviceType = serviceType.getValue();
      this.serviceEndpoint = serviceEndpoint.getValue()
          .stream()
          .map(v -> v.getValue())
          .collect(Collectors.toList());
    }
  }


  public static class DocumentStatus extends DynamicStruct {
    public String id;

    public BigInteger status;

    public String version;

    public String roleType;

    public String terminatedTime;

    public DocumentStatus(String id, BigInteger status, String version, String roleType,
                          String terminatedTime
    ) {
      super(
          new org.web3j.abi.datatypes.Utf8String(id),
          new org.web3j.abi.datatypes.generated.Uint8(status),
          new org.web3j.abi.datatypes.Utf8String(version),
          new org.web3j.abi.datatypes.Utf8String(roleType),
          new org.web3j.abi.datatypes.Utf8String(terminatedTime)
      );
      this.id = id;
      this.status = status;
      this.version = version;
      this.roleType = roleType;
      this.terminatedTime = terminatedTime;
    }

    public DocumentStatus(Utf8String id, Uint8 status, Utf8String version, Utf8String roleType,
                          Utf8String terminatedTime
    ) {
      super(
          id,
          status,
          version,
          roleType,
          terminatedTime
      );
      this.id = id.getValue();
      this.status = status.getValue();
      this.version = version.getValue();
      this.roleType = roleType.getValue();
      this.terminatedTime = terminatedTime.getValue();
    }
  }


  public static class MetaData extends DynamicStruct {
    public String formatVersion;

    public String language;

    public MetaData(String formatVersion, String language) {
      super(
          new org.web3j.abi.datatypes.Utf8String(formatVersion),
          new org.web3j.abi.datatypes.Utf8String(language)
      );
      this.formatVersion = formatVersion;
      this.language = language;
    }

    public MetaData(Utf8String formatVersion, Utf8String language) {
      super(
          formatVersion,
          language
      );
      this.formatVersion = formatVersion.getValue();
      this.language = language.getValue();
    }
  }


  public static class SchemaClaimItem extends DynamicStruct {
    public String caption;

    public String format;

    public Boolean hideValue;

    public String id;

    public String _type;

    public SchemaClaimItem(String caption, String format, Boolean hideValue, String id,
                           String _type
    ) {
      super(
          new org.web3j.abi.datatypes.Utf8String(caption),
          new org.web3j.abi.datatypes.Utf8String(format),
          new org.web3j.abi.datatypes.Bool(hideValue),
          new org.web3j.abi.datatypes.Utf8String(id),
          new org.web3j.abi.datatypes.Utf8String(_type)
      );
      this.caption = caption;
      this.format = format;
      this.hideValue = hideValue;
      this.id = id;
      this._type = _type;
    }

    public SchemaClaimItem(Utf8String caption, Utf8String format, Bool hideValue, Utf8String id,
                           Utf8String _type
    ) {
      super(
          caption,
          format,
          hideValue,
          id,
          _type
      );
      this.caption = caption.getValue();
      this.format = format.getValue();
      this.hideValue = hideValue.getValue();
      this.id = id.getValue();
      this._type = _type.getValue();
    }
  }


  public static class ClaimNamespace extends DynamicStruct {
    public String id;

    public String name;

    public String ref;

    public ClaimNamespace(String id, String name, String ref) {
      super(
          new org.web3j.abi.datatypes.Utf8String(id),
          new org.web3j.abi.datatypes.Utf8String(name),
          new org.web3j.abi.datatypes.Utf8String(ref)
      );
      this.id = id;
      this.name = name;
      this.ref = ref;
    }

    public ClaimNamespace(Utf8String id, Utf8String name, Utf8String ref) {
      super(
          id,
          name,
          ref
      );
      this.id = id.getValue();
      this.name = name.getValue();
      this.ref = ref.getValue();
    }
  }


  public static class Provider extends DynamicStruct {
    public String did;

    public String certVcReference;

    public Provider(String did, String certVcReference) {
      super(
          new org.web3j.abi.datatypes.Utf8String(did),
          new org.web3j.abi.datatypes.Utf8String(certVcReference)
      );
      this.did = did;
      this.certVcReference = certVcReference;
    }

    public Provider(Utf8String did, Utf8String certVcReference) {
      super(
          did,
          certVcReference
      );
      this.did = did.getValue();
      this.certVcReference = certVcReference.getValue();
    }
  }


  public static class CredentialSchemaLibrary_CredentialSchema extends DynamicStruct {
    public String id;

    public String credentialSchemaType;

    public CredentialSchemaLibrary_CredentialSchema(String id, String credentialSchemaType) {
      super(
          new org.web3j.abi.datatypes.Utf8String(id),
          new org.web3j.abi.datatypes.Utf8String(credentialSchemaType)
      );
      this.id = id;
      this.credentialSchemaType = credentialSchemaType;
    }

    public CredentialSchemaLibrary_CredentialSchema(Utf8String id,
                                                    Utf8String credentialSchemaType
    ) {
      super(
          id,
          credentialSchemaType
      );
      this.id = id.getValue();
      this.credentialSchemaType = credentialSchemaType.getValue();
    }
  }


  public static class AttributeNamespace extends DynamicStruct {
    public String id;

    public String name;

    public String ref;

    public AttributeNamespace(String id, String name, String ref) {
      super(
          new org.web3j.abi.datatypes.Utf8String(id),
          new org.web3j.abi.datatypes.Utf8String(name),
          new org.web3j.abi.datatypes.Utf8String(ref)
      );
      this.id = id;
      this.name = name;
      this.ref = ref;
    }

    public AttributeNamespace(Utf8String id, Utf8String name, Utf8String ref) {
      super(
          id,
          name,
          ref
      );
      this.id = id.getValue();
      this.name = name.getValue();
      this.ref = ref.getValue();
    }
  }


  public static class Internationalization extends DynamicStruct {
    public String languageType;

    public String value;

    public Internationalization(String languageType, String value) {
      super(
          new org.web3j.abi.datatypes.Utf8String(languageType),
          new org.web3j.abi.datatypes.Utf8String(value)
      );
      this.languageType = languageType;
      this.value = value;
    }

    public Internationalization(Utf8String languageType, Utf8String value) {
      super(
          languageType,
          value
      );
      this.languageType = languageType.getValue();
      this.value = value.getValue();
    }
  }


  public static class CredentialDefinition extends DynamicStruct {
    public String id;

    public String schemaId;

    public String ver;

    public String _type;

    public String value;

    public String tag;

    public CredentialDefinition(String id, String schemaId, String ver, String _type, String value,
                                String tag
    ) {
      super(
          new org.web3j.abi.datatypes.Utf8String(id),
          new org.web3j.abi.datatypes.Utf8String(schemaId),
          new org.web3j.abi.datatypes.Utf8String(ver),
          new org.web3j.abi.datatypes.Utf8String(_type),
          new org.web3j.abi.datatypes.Utf8String(value),
          new org.web3j.abi.datatypes.Utf8String(tag)
      );
      this.id = id;
      this.schemaId = schemaId;
      this.ver = ver;
      this._type = _type;
      this.value = value;
      this.tag = tag;
    }

    public CredentialDefinition(Utf8String id, Utf8String schemaId, Utf8String ver,
                                Utf8String _type, Utf8String value, Utf8String tag
    ) {
      super(
          id,
          schemaId,
          ver,
          _type,
          value,
          tag
      );
      this.id = id.getValue();
      this.schemaId = schemaId.getValue();
      this.ver = ver.getValue();
      this._type = _type.getValue();
      this.value = value.getValue();
      this.tag = tag.getValue();
    }
  }


  public static class Document extends DynamicStruct {
    public List<String> context;

    public String id;

    public String controller;

    public String created;

    public String updated;

    public String versionId;

    public Boolean deactivated;

    public List<VerificationMethod> verificationMethod;

    public List<String> assertionMethod;

    public List<String> authentication;

    public List<String> keyAgreement;

    public List<String> capabilityInvocation;

    public List<String> capabilityDelegation;

    public List<Service> services;

    public Document(List<String> context, String id, String controller, String created,
                    String updated, String versionId, Boolean deactivated,
                    List<VerificationMethod> verificationMethod, List<String> assertionMethod,
                    List<String> authentication, List<String> keyAgreement,
                    List<String> capabilityInvocation, List<String> capabilityDelegation,
                    List<Service> services
    ) {
      super(
          new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
              org.web3j.abi.datatypes.Utf8String.class,
              org.web3j.abi.Utils.typeMap(
                  context,
                  org.web3j.abi.datatypes.Utf8String.class
              )
          ),
          new org.web3j.abi.datatypes.Utf8String(id),
          new org.web3j.abi.datatypes.Utf8String(controller),
          new org.web3j.abi.datatypes.Utf8String(created),
          new org.web3j.abi.datatypes.Utf8String(updated),
          new org.web3j.abi.datatypes.Utf8String(versionId),
          new org.web3j.abi.datatypes.Bool(deactivated),
          new org.web3j.abi.datatypes.DynamicArray<VerificationMethod>(
              VerificationMethod.class,
              verificationMethod
          ),
          new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
              org.web3j.abi.datatypes.Utf8String.class,
              org.web3j.abi.Utils.typeMap(
                  assertionMethod,
                  org.web3j.abi.datatypes.Utf8String.class
              )
          ),
          new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
              org.web3j.abi.datatypes.Utf8String.class,
              org.web3j.abi.Utils.typeMap(
                  authentication,
                  org.web3j.abi.datatypes.Utf8String.class
              )
          ),
          new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
              org.web3j.abi.datatypes.Utf8String.class,
              org.web3j.abi.Utils.typeMap(
                  keyAgreement,
                  org.web3j.abi.datatypes.Utf8String.class
              )
          ),
          new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
              org.web3j.abi.datatypes.Utf8String.class,
              org.web3j.abi.Utils.typeMap(
                  capabilityInvocation,
                  org.web3j.abi.datatypes.Utf8String.class
              )
          ),
          new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
              org.web3j.abi.datatypes.Utf8String.class,
              org.web3j.abi.Utils.typeMap(
                  capabilityDelegation,
                  org.web3j.abi.datatypes.Utf8String.class
              )
          ),
          new org.web3j.abi.datatypes.DynamicArray<Service>(
              Service.class,
              services
          )
      );
      this.context = context;
      this.id = id;
      this.controller = controller;
      this.created = created;
      this.updated = updated;
      this.versionId = versionId;
      this.deactivated = deactivated;
      this.verificationMethod = verificationMethod;
      this.assertionMethod = assertionMethod;
      this.authentication = authentication;
      this.keyAgreement = keyAgreement;
      this.capabilityInvocation = capabilityInvocation;
      this.capabilityDelegation = capabilityDelegation;
      this.services = services;
    }

    public Document(@Parameterized(type = Utf8String.class) DynamicArray<Utf8String> context,
                    Utf8String id, Utf8String controller, Utf8String created, Utf8String updated,
                    Utf8String versionId, Bool deactivated,
                    @Parameterized(type = VerificationMethod.class)
                    DynamicArray<VerificationMethod> verificationMethod,
                    @Parameterized(type = Utf8String.class)
                    DynamicArray<Utf8String> assertionMethod,
                    @Parameterized(type = Utf8String.class) DynamicArray<Utf8String> authentication,
                    @Parameterized(type = Utf8String.class) DynamicArray<Utf8String> keyAgreement,
                    @Parameterized(type = Utf8String.class)
                    DynamicArray<Utf8String> capabilityInvocation,
                    @Parameterized(type = Utf8String.class)
                    DynamicArray<Utf8String> capabilityDelegation,
                    @Parameterized(type = Service.class) DynamicArray<Service> services
    ) {
      super(
          context,
          id,
          controller,
          created,
          updated,
          versionId,
          deactivated,
          verificationMethod,
          assertionMethod,
          authentication,
          keyAgreement,
          capabilityInvocation,
          capabilityDelegation,
          services
      );
      this.context = context.getValue()
          .stream()
          .map(v -> v.getValue())
          .collect(Collectors.toList());
      this.id = id.getValue();
      this.controller = controller.getValue();
      this.created = created.getValue();
      this.updated = updated.getValue();
      this.versionId = versionId.getValue();
      this.deactivated = deactivated.getValue();
      this.verificationMethod = verificationMethod.getValue();
      this.assertionMethod = assertionMethod.getValue()
          .stream()
          .map(v -> v.getValue())
          .collect(Collectors.toList());
      this.authentication = authentication.getValue()
          .stream()
          .map(v -> v.getValue())
          .collect(Collectors.toList());
      this.keyAgreement = keyAgreement.getValue()
          .stream()
          .map(v -> v.getValue())
          .collect(Collectors.toList());
      this.capabilityInvocation = capabilityInvocation.getValue()
          .stream()
          .map(v -> v.getValue())
          .collect(Collectors.toList());
      this.capabilityDelegation = capabilityDelegation.getValue()
          .stream()
          .map(v -> v.getValue())
          .collect(Collectors.toList());
      this.services = services.getValue();
    }
  }


  public static class VCSchemaClaim extends DynamicStruct {
    public List<SchemaClaimItem> items;

    public ClaimNamespace namespace;

    public VCSchemaClaim(List<SchemaClaimItem> items, ClaimNamespace namespace) {
      super(
          new org.web3j.abi.datatypes.DynamicArray<SchemaClaimItem>(
              SchemaClaimItem.class,
              items
          ),
          namespace
      );
      this.items = items;
      this.namespace = namespace;
    }

    public VCSchemaClaim(
        @Parameterized(type = SchemaClaimItem.class) DynamicArray<SchemaClaimItem> items,
        ClaimNamespace namespace
    ) {
      super(
          items,
          namespace
      );
      this.items = items.getValue();
      this.namespace = namespace;
    }
  }


  public static class VcMeta extends DynamicStruct {
    public String id;

    public Provider issuer;

    public String subject;

    public CredentialSchemaLibrary_CredentialSchema credentialSchema;

    public String status;

    public String issuanceDate;

    public String validFrom;

    public String validUntil;

    public String formatVersion;

    public String language;

    public VcMeta(String id, Provider issuer, String subject,
                  CredentialSchemaLibrary_CredentialSchema credentialSchema, String status,
                  String issuanceDate, String validFrom, String validUntil, String formatVersion,
                  String language
    ) {
      super(
          new org.web3j.abi.datatypes.Utf8String(id),
          issuer,
          new org.web3j.abi.datatypes.Utf8String(subject),
          credentialSchema,
          new org.web3j.abi.datatypes.Utf8String(status),
          new org.web3j.abi.datatypes.Utf8String(issuanceDate),
          new org.web3j.abi.datatypes.Utf8String(validFrom),
          new org.web3j.abi.datatypes.Utf8String(validUntil),
          new org.web3j.abi.datatypes.Utf8String(formatVersion),
          new org.web3j.abi.datatypes.Utf8String(language)
      );
      this.id = id;
      this.issuer = issuer;
      this.subject = subject;
      this.credentialSchema = credentialSchema;
      this.status = status;
      this.issuanceDate = issuanceDate;
      this.validFrom = validFrom;
      this.validUntil = validUntil;
      this.formatVersion = formatVersion;
      this.language = language;
    }

    public VcMeta(Utf8String id, Provider issuer, Utf8String subject,
                  CredentialSchemaLibrary_CredentialSchema credentialSchema, Utf8String status,
                  Utf8String issuanceDate, Utf8String validFrom, Utf8String validUntil,
                  Utf8String formatVersion, Utf8String language
    ) {
      super(
          id,
          issuer,
          subject,
          credentialSchema,
          status,
          issuanceDate,
          validFrom,
          validUntil,
          formatVersion,
          language
      );
      this.id = id.getValue();
      this.issuer = issuer;
      this.subject = subject.getValue();
      this.credentialSchema = credentialSchema;
      this.status = status.getValue();
      this.issuanceDate = issuanceDate.getValue();
      this.validFrom = validFrom.getValue();
      this.validUntil = validUntil.getValue();
      this.formatVersion = formatVersion.getValue();
      this.language = language.getValue();
    }
  }


  public static class AttributeItem extends DynamicStruct {
    public String label;

    public String caption;

    public String _type;

    public List<Internationalization> i18n;

    public AttributeItem(String label, String caption, String _type,
                         List<Internationalization> i18n
    ) {
      super(
          new org.web3j.abi.datatypes.Utf8String(label),
          new org.web3j.abi.datatypes.Utf8String(caption),
          new org.web3j.abi.datatypes.Utf8String(_type),
          new org.web3j.abi.datatypes.DynamicArray<Internationalization>(
              Internationalization.class,
              i18n
          )
      );
      this.label = label;
      this.caption = caption;
      this._type = _type;
      this.i18n = i18n;
    }

    public AttributeItem(Utf8String label, Utf8String caption, Utf8String _type,
                         @Parameterized(type = Internationalization.class)
                         DynamicArray<Internationalization> i18n
    ) {
      super(
          label,
          caption,
          _type,
          i18n
      );
      this.label = label.getValue();
      this.caption = caption.getValue();
      this._type = _type.getValue();
      this.i18n = i18n.getValue();
    }
  }


  public static class DocumentAndStatus extends DynamicStruct {
    public Document diddoc;

    public BigInteger status;

    public DocumentAndStatus(Document diddoc, BigInteger status) {
      super(
          diddoc,
          new org.web3j.abi.datatypes.generated.Uint8(status)
      );
      this.diddoc = diddoc;
      this.status = status;
    }

    public DocumentAndStatus(Document diddoc, Uint8 status) {
      super(
          diddoc,
          status
      );
      this.diddoc = diddoc;
      this.status = status.getValue();
    }
  }


  public static class CredentialSubject extends DynamicStruct {
    public List<VCSchemaClaim> claims;

    public CredentialSubject(List<VCSchemaClaim> claims) {
      super(new org.web3j.abi.datatypes.DynamicArray<VCSchemaClaim>(
          VCSchemaClaim.class,
          claims
      ));
      this.claims = claims;
    }

    public CredentialSubject(
        @Parameterized(type = VCSchemaClaim.class) DynamicArray<VCSchemaClaim> claims
    ) {
      super(claims);
      this.claims = claims.getValue();
    }
  }


  public static class AttributeType extends DynamicStruct {
    public AttributeNamespace namespace;

    public List<AttributeItem> items;

    public AttributeType(AttributeNamespace namespace, List<AttributeItem> items) {
      super(
          namespace,
          new org.web3j.abi.datatypes.DynamicArray<AttributeItem>(
              AttributeItem.class,
              items
          )
      );
      this.namespace = namespace;
      this.items = items;
    }

    public AttributeType(AttributeNamespace namespace, @Parameterized(type = AttributeItem.class)
                         DynamicArray<AttributeItem> items
    ) {
      super(
          namespace,
          items
      );
      this.namespace = namespace;
      this.items = items.getValue();
    }
  }


  public static class VcSchema extends DynamicStruct {
    public String id;

    public String schema;

    public String title;

    public String description;

    public MetaData metadata;

    public CredentialSubject credentialSubject;

    public VcSchema(String id, String schema, String title, String description, MetaData metadata,
                    CredentialSubject credentialSubject
    ) {
      super(
          new org.web3j.abi.datatypes.Utf8String(id),
          new org.web3j.abi.datatypes.Utf8String(schema),
          new org.web3j.abi.datatypes.Utf8String(title),
          new org.web3j.abi.datatypes.Utf8String(description),
          metadata,
          credentialSubject
      );
      this.id = id;
      this.schema = schema;
      this.title = title;
      this.description = description;
      this.metadata = metadata;
      this.credentialSubject = credentialSubject;
    }

    public VcSchema(Utf8String id, Utf8String schema, Utf8String title, Utf8String description,
                    MetaData metadata, CredentialSubject credentialSubject
    ) {
      super(
          id,
          schema,
          title,
          description,
          metadata,
          credentialSubject
      );
      this.id = id.getValue();
      this.schema = schema.getValue();
      this.title = title.getValue();
      this.description = description.getValue();
      this.metadata = metadata;
      this.credentialSubject = credentialSubject;
    }
  }


  public static class ZKPLibrary_CredentialSchema extends DynamicStruct {
    public String id;

    public String name;

    public String version;

    public List<String> attrNames;

    public List<AttributeType> attrTypes;

    public String tag;

    public ZKPLibrary_CredentialSchema(String id, String name, String version,
                                       List<String> attrNames, List<AttributeType> attrTypes,
                                       String tag
    ) {
      super(
          new org.web3j.abi.datatypes.Utf8String(id),
          new org.web3j.abi.datatypes.Utf8String(name),
          new org.web3j.abi.datatypes.Utf8String(version),
          new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
              org.web3j.abi.datatypes.Utf8String.class,
              org.web3j.abi.Utils.typeMap(
                  attrNames,
                  org.web3j.abi.datatypes.Utf8String.class
              )
          ),
          new org.web3j.abi.datatypes.DynamicArray<AttributeType>(
              AttributeType.class,
              attrTypes
          ),
          new org.web3j.abi.datatypes.Utf8String(tag)
      );
      this.id = id;
      this.name = name;
      this.version = version;
      this.attrNames = attrNames;
      this.attrTypes = attrTypes;
      this.tag = tag;
    }

    public ZKPLibrary_CredentialSchema(Utf8String id, Utf8String name, Utf8String version,
                                       @Parameterized(type = Utf8String.class)
                                       DynamicArray<Utf8String> attrNames,
                                       @Parameterized(type = AttributeType.class)
                                       DynamicArray<AttributeType> attrTypes, Utf8String tag
    ) {
      super(
          id,
          name,
          version,
          attrNames,
          attrTypes,
          tag
      );
      this.id = id.getValue();
      this.name = name.getValue();
      this.version = version.getValue();
      this.attrNames = attrNames.getValue()
          .stream()
          .map(v -> v.getValue())
          .collect(Collectors.toList());
      this.attrTypes = attrTypes.getValue();
      this.tag = tag.getValue();
    }
  }


  public static class DIDCreatedEventResponse extends BaseEventResponse {
    public String did;

    public String controller;
  }


  public static class DIDDeactivatedEventResponse extends BaseEventResponse {
    public String did;

    public String controller;
  }


  public static class DIDUpdatedEventResponse extends BaseEventResponse {
    public String did;

    public String controller;
  }


  public static class InitializedEventResponse extends BaseEventResponse {
    public BigInteger version;
  }


  public static class RoleAdminChangedEventResponse extends BaseEventResponse {
    public byte[] role;

    public byte[] previousAdminRole;

    public byte[] newAdminRole;
  }


  public static class RoleGrantedEventResponse extends BaseEventResponse {
    public byte[] role;

    public String account;

    public String sender;
  }


  public static class RoleRevokedEventResponse extends BaseEventResponse {
    public byte[] role;

    public String account;

    public String sender;
  }


  public static class SetupEventResponse extends BaseEventResponse {
  }


  public static class UpgradedEventResponse extends BaseEventResponse {
    public String implementation;
  }


  public static class VCIssuedEventResponse extends BaseEventResponse {
    public String vcId;

    public String issuer;

    public String did;
  }


  public static class VCSchemaCreatedEventResponse extends BaseEventResponse {
    public String schemaId;

    public String issuer;
  }


  public static class VCStatusEventResponse extends BaseEventResponse {
    public String vcId;

    public String player;

    public String status;
  }
}
